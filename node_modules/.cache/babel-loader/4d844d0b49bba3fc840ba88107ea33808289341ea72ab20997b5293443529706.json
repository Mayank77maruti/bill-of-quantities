{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\jojo 1\\\\bill-of-quantities\\\\src\\\\boq.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// import React, { useState, useMemo, useEffect } from 'react';\n// import { Slider, Skeleton, Select, MenuItem, Button } from '@mui/material';\n// import { supabase } from './supabase';\n// import './boq.css';\n\n// const Card = ({ title, price, image, details, addOns, initialMinimized = false, roomData }) => {\n//   const [selectedAddOns, setSelectedAddOns] = useState({});\n//   const [isMinimized, setIsMinimized] = useState(initialMinimized);\n//   const basePrice = price;\n\n//   const handleAddOnChange = (addOn, isChecked) => {\n//     setSelectedAddOns((prevSelectedAddOns) => ({\n//       ...prevSelectedAddOns,\n//       [addOn.name]: isChecked ? addOn.price : 0,\n//     }));\n//   };\n\n//   const calculateTotalPrice = useMemo(() => {\n//     return Object.values(selectedAddOns).reduce((total, addOnPrice) => total + addOnPrice, basePrice);\n//   }, [selectedAddOns, basePrice]);\n\n//   const toggleMinimize = () => setIsMinimized((prev) => !prev);\n\n//   if (isMinimized) {\n//     return (\n//       <div className=\"minimized-card\" onClick={toggleMinimize}>\n//         <span>{title}</span>\n//         <div className=\"info\">\n//           <p>Base Price: ₹{basePrice}</p>\n//           <p>Total Price: ₹{calculateTotalPrice}</p>\n//         </div>\n//         <button className=\"start-button\">Start</button>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div className=\"card-container\">\n//       <CardSection className=\"card-image\">\n//         <img src={image} alt={title} className=\"image\" />\n//       </CardSection>\n\n//       <CardSection className=\"card-features\">\n//         <h3>{title}</h3>\n//         <p>{details}</p>\n//         {roomData && (\n//           <div className=\"room-info\">\n//             <p>Room Data:</p>\n//             <ul>\n//               {Object.entries(roomData).map(([key, value]) => (\n//                 <li key={key}>{`${key}: ${value}`}</li>\n//               ))}\n//             </ul>\n//           </div>\n//         )}\n//       </CardSection>\n\n//       <CardSection className=\"card-add-ons\">\n//         <h3>ADD ON</h3>\n//         <ul>\n//           {addOns.map((addOn, index) => (\n//             <li key={index}>\n//               <label>\n//                 <input\n//                   type=\"checkbox\"\n//                   onChange={(e) => handleAddOnChange(addOn, e.target.checked)}\n//                 />\n//                 {addOn.name} (+₹{addOn.price})\n//               </label>\n//             </li>\n//           ))}\n//         </ul>\n//       </CardSection>\n\n//       <CardSection className=\"card-summary\">\n//         <h4>Summary</h4>\n//         <p>Base Price: ₹{basePrice}</p>\n//         <p>Add-Ons: ₹{Object.values(selectedAddOns).reduce((total, price) => total + price, 0)}</p>\n//         <p>Total Price: ₹{calculateTotalPrice}</p>\n//         <button className=\"done-button\" onClick={toggleMinimize}>Done</button>\n//       </CardSection>\n//     </div>\n//   );\n// };\n\n// const CardSection = ({ className, children }) => {\n//   return <div className={`card ${className}`}>{children}</div>;\n// };\n\n// const App = () => {\n//   const [searchQuery, setSearchQuery] = useState('');\n//   const [priceRange, setPriceRange] = useState([1000, 12000]);\n//   const [productsData, setProductData] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [roomNumbers, setRoomNumbers] = useState([]);\n//   const [showFilters, setShowFilters] = useState(false);\n//   const [selectedCategory, setSelectedCategory] = useState('');\n\n//   const categories = [\n//     'Furniture', \n//     'Civil / Plumbing', \n//     'Lighting', \n//     'Electrical', \n//     'Partitions- door / windows / ceilings',\n//     'Paint', \n//     'HVAC', \n//     'Smart Solutions', \n//     'Flooring', \n//     'Accessories'\n//   ];\n\n//   async function fetchRoomData() {\n//     try {\n//       const { data, error } = await supabase\n//         .from('areas')\n//         .select()\n//         .order('created_at', { ascending: false })\n//         .limit(1);\n\n//       if (error) throw error;\n\n//       if (data && data.length > 0) {\n//         const latestRoomData = data[0];\n//         const roomsArray = {\n//           linear: latestRoomData.linear,\n//           ltype: latestRoomData.ltype,\n//           md: latestRoomData.md,\n//           manager: latestRoomData.manager,\n//           small: latestRoomData.small,\n//           ups: latestRoomData.ups,\n//           bms: latestRoomData.bms,\n//           server: latestRoomData.server,\n//           reception: latestRoomData.reception,\n//           lounge: latestRoomData.lounge,\n//           sales: latestRoomData.sales,\n//           phonebooth: latestRoomData.phonebooth,\n//           discussionroom: latestRoomData.discussionroom,\n//           interviewroom: latestRoomData.interviewroom,\n//           conferenceroom: latestRoomData.conferenceroom,\n//           boardroom: latestRoomData.boardroom,\n//           meetingroom: latestRoomData.meetingroom,\n//           meetingroomlarge: latestRoomData.meetingroomlarge,\n//           hrroom: latestRoomData.hrroom,\n//           financeroom: latestRoomData.financeroom,\n//         };\n//         setRoomNumbers([roomsArray]);\n//       }\n//     } catch (error) {\n//       console.error('Error fetching room data:', error);\n//     }\n//   }\n\n//   async function fetchProductsData() {\n//     try {\n//       const { data, error } = await supabase\n//         .from(\"products\")\n//         .select(`\n//           *,\n//           addons (*),\n//           subcategory\n//         `);\n\n//       if (error) throw error;\n\n//       const allImages = data.flatMap(product => [product.image, ...product.addons.map(addon => addon.image)]);\n//       const uniqueImages = [...new Set(allImages)];\n\n//       const { data: signedUrls, error: signedUrlError } = await supabase.storage\n//         .from(\"addon\")\n//         .createSignedUrls(uniqueImages, 3600);\n\n//       if (signedUrlError) throw signedUrlError;\n\n//       const urlMap = Object.fromEntries(signedUrls.map(item => [item.path, item.signedUrl]));\n\n//       const processedData = data.map(product => ({\n//         ...product,\n//         image: urlMap[product.image] || '',\n//         addons: product.addons.map(addon => ({\n//           ...addon,\n//           image: urlMap[addon.image] || ''\n//         }))\n//       }));\n\n//       setProductData(processedData);\n//     } catch (error) {\n//       console.error('Error fetching products data:', error);\n//     } finally {\n//       setLoading(false);\n//     }\n//   }\n\n//   useEffect(() => {\n//     Promise.all([fetchRoomData(), fetchProductsData()]);\n//   }, []);\n\n//   const handleSearch = (event) => {\n//     setSearchQuery(event.target.value.toLowerCase());\n//   };\n\n//   const handleSliderChange = (event, newValue) => {\n//     setPriceRange(newValue);\n//   };\n\n//   const handleCategoryChange = (event) => {\n//     setSelectedCategory(event.target.value);\n//   };\n\n//   const toggleFilters = () => {\n//     setShowFilters(!showFilters);\n//   };\n\n//   const filteredProducts = useMemo(() => {\n//     return productsData.filter((product) => {\n//       const matchesSearch = product.title.toLowerCase().includes(searchQuery) ||\n//                             product.details.toLowerCase().includes(searchQuery);\n//       const matchesPrice = product.price >= priceRange[0] && product.price <= priceRange[1];\n//       const matchesCategory = selectedCategory === '' || product.category === selectedCategory;\n//       return matchesSearch && matchesPrice && matchesCategory;\n//     });\n//   }, [productsData, searchQuery, priceRange, selectedCategory]);\n\n//   return (\n//     <div className=\"App\">\n//       <div className=\"search-filter\">\n//         <input\n//           type=\"text\"\n//           placeholder=\"Search products...\"\n//           value={searchQuery}\n//           onChange={handleSearch}\n//           className=\"search-bar\"\n//         />\n//         <Button onClick={toggleFilters} variant=\"contained\" color=\"primary\">\n//           {showFilters ? 'Hide Filters' : 'Show Filters'}\n//         </Button>\n//         {showFilters && (\n//           <div className=\"filters\">\n//             <Slider\n//               value={priceRange}\n//               onChange={handleSliderChange}\n//               valueLabelDisplay=\"auto\"\n//               min={1000}\n//               max={12000}\n//               className=\"price-slider\"\n//             />\n//             <Select\n//               value={selectedCategory}\n//               onChange={handleCategoryChange}\n//               displayEmpty\n//               className=\"category-select\"\n//             >\n//               <MenuItem value=\"\">All Categories</MenuItem>\n//               {categories.map((category) => (\n//                 <MenuItem key={category} value={category}>{category}</MenuItem>\n//               ))}\n//             </Select>\n//           </div>\n//         )}\n//       </div>\n\n//       <div className=\"products-grid\">\n//         {loading ? (\n//           Array.from({ length: 4 }).map((_, index) => (\n//             <div key={index} className=\"card-skeleton-container\">\n//             <Skeleton variant=\"rectangular\" height={150} width=\"100%\" className=\"skeleton-card-image\" />\n//               <Skeleton variant=\"text\" width=\"60%\" height={20} style={{ margin: '10px 0' }} />\n//               <Skeleton variant=\"text\" width=\"80%\" height={20} style={{ margin: '5px 0' }} />\n//               <Skeleton variant=\"text\" width=\"50%\" height={20} style={{ margin: '5px 0' }} />\n//             </div>\n//           ))\n//         ) : (\n//           categories.map((category) => {\n//             const categoryProducts = filteredProducts.filter(product => product.category === category);\n//             if (categoryProducts.length === 0) return null;\n\n//             return (\n//               <div key={category} className=\"category-section\">\n//                 <h2>{category}</h2>\n//                 {categoryProducts.map((product) => (\n//                   <div key={product.id}>\n//                     <Card\n//                       title={product.title}\n//                       price={product.price}\n//                       details={product.details}\n//                       addOns={product.addons}\n//                       image={product.image}\n//                       initialMinimized={product.initialMinimized}\n//                       roomData={roomNumbers[0]} // Adjust this if necessary\n//                     />\n//                   </div>\n//                 ))}\n//               </div>\n//             );\n//           })\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default App;\n\nimport React, { useState, useEffect, useMemo } from 'react';\nimport { supabase } from './supabaseClient'; // Assuming supabase client setup\nimport Skeleton from '@mui/material/Skeleton';\nimport Slider from '@mui/material/Slider';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [searchQuery, setSearchQuery] = useState('');\n  const [priceRange, setPriceRange] = useState([1000, 12000]);\n  const [productsData, setProductData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [roomNumbers, setRoomNumbers] = useState({});\n  const [selectedCategory, setSelectedCategory] = useState('');\n  const categories = ['Furniture', 'Civil / Plumbing', 'Lighting', 'Electrical', 'Partitions- door / windows / ceilings', 'Paint', 'HVAC', 'Smart Solutions', 'Flooring', 'Accessories'];\n\n  // Fetch room data\n  async function fetchRoomData() {\n    try {\n      const {\n        data: latestRoomData,\n        error\n      } = await supabase.from('rooms').select('*').order('created_at', {\n        ascending: false\n      }).limit(1).single();\n      if (error) throw error;\n      if (latestRoomData) {\n        const roomsArray = {\n          boardroom: latestRoomData.boardroom,\n          meetingroom: latestRoomData.meetingroom,\n          meetingroomlarge: latestRoomData.meetingroomlarge,\n          hrroom: latestRoomData.hrroom,\n          financeroom: latestRoomData.financeroom\n        };\n        setRoomNumbers(roomsArray); // Store single object directly\n      }\n    } catch (error) {\n      console.error('Error fetching room data:', error);\n    }\n  }\n\n  // Fetch product data\n  async function fetchProductsData() {\n    try {\n      const {\n        data,\n        error\n      } = await supabase.from('products').select(`\n          *,\n          addons (*),\n          subcategory\n        `);\n      if (error) throw error;\n      const allImages = data.flatMap(product => [product.image, ...product.addons.map(addon => addon.image)]);\n      const uniqueImages = [...new Set(allImages)];\n      const {\n        data: signedUrls,\n        error: signedUrlError\n      } = await supabase.storage.from(\"addon\").createSignedUrls(uniqueImages, 3600);\n      if (signedUrlError) throw signedUrlError;\n      const urlMap = Object.fromEntries(signedUrls.map(item => [item.path, item.signedUrl]));\n      const processedData = data.map(product => ({\n        ...product,\n        image: urlMap[product.image] || '',\n        addons: product.addons.map(addon => ({\n          ...addon,\n          image: urlMap[addon.image] || ''\n        }))\n      }));\n      setProductData(processedData);\n    } catch (error) {\n      console.error('Error fetching products data:', error);\n    } finally {\n      setLoading(false);\n    }\n  }\n  useEffect(() => {\n    fetchRoomData();\n    fetchProductsData();\n  }, []);\n\n  // Filtered products based on query, price, and category\n  const filteredProducts = useMemo(() => {\n    return productsData.filter(product => {\n      const matchesSearchQuery = product.title.toLowerCase().includes(searchQuery.toLowerCase());\n      const matchesPriceRange = product.price >= priceRange[0] && product.price <= priceRange[1];\n      const matchesCategory = selectedCategory ? product.category === selectedCategory : true;\n      return matchesSearchQuery && matchesPriceRange && matchesCategory;\n    });\n  }, [productsData, searchQuery, priceRange, selectedCategory]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-filter\",\n      children: loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Skeleton, {\n          variant: \"rectangular\",\n          height: 40,\n          width: \"80%\",\n          className: \"skeleton-bar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n          variant: \"rectangular\",\n          height: 40,\n          width: \"80%\",\n          className: \"skeleton-slider\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search products...\",\n          value: searchQuery,\n          onChange: e => setSearchQuery(e.target.value),\n          className: \"search-bar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Slider, {\n          value: priceRange,\n          onChange: (e, newValue) => setPriceRange(newValue),\n          valueLabelDisplay: \"auto\",\n          min: 1000,\n          max: 12000,\n          className: \"price-slider\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"products-grid\",\n      children: loading ? Array.from({\n        length: 4\n      }).map((_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-skeleton-container\",\n        children: [/*#__PURE__*/_jsxDEV(Skeleton, {\n          variant: \"rectangular\",\n          height: 150,\n          width: \"100%\",\n          className: \"skeleton-card-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n          variant: \"text\",\n          width: \"60%\",\n          height: 20,\n          style: {\n            margin: '10px 0'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n          variant: \"text\",\n          width: \"80%\",\n          height: 20,\n          style: {\n            margin: '5px 0'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n          variant: \"text\",\n          width: \"50%\",\n          height: 20,\n          style: {\n            margin: '5px 0'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 13\n      }, this)) : categories.map(category => {\n        const categoryProducts = filteredProducts.filter(product => product.category === category);\n        if (categoryProducts.length === 0) return null;\n        const subcategories = [...new Set(categoryProducts.map(product => product.subcategory))];\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"category-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 17\n          }, this), subcategories.map(subcategory => {\n            const subcategoryProducts = categoryProducts.filter(product => product.subcategory === subcategory);\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"subcategory-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: subcategory\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 467,\n                columnNumber: 23\n              }, this), subcategoryProducts.map(product => /*#__PURE__*/_jsxDEV(Card, {\n                title: product.title,\n                price: product.price,\n                details: product.details,\n                addOns: product.addons,\n                image: product.image,\n                roomData: roomNumbers\n              }, product.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 469,\n                columnNumber: 25\n              }, this))]\n            }, subcategory, true, {\n              fileName: _jsxFileName,\n              lineNumber: 466,\n              columnNumber: 21\n            }, this);\n          })]\n        }, category, true, {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 415,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"SxyMNqjna/VixHTEofENM5nAX5M=\");\n_c = App;\nconst Card = ({\n  title,\n  price,\n  image,\n  details,\n  addOns,\n  roomData\n}) => {\n  _s2();\n  const [isMinimized, setIsMinimized] = useState(false);\n  const [selectedAddOns, setSelectedAddOns] = useState({});\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"product-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: image,\n      alt: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 498,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Price: $\", price]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: details\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 500,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setIsMinimized(!isMinimized),\n      children: isMinimized ? 'Show More' : 'Show Less'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 501,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 496,\n    columnNumber: 5\n  }, this);\n};\n_s2(Card, \"90BOGZiZ5JOqfqepaLj6A4fqhO4=\");\n_c2 = Card;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Card\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","supabase","Skeleton","Slider","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","searchQuery","setSearchQuery","priceRange","setPriceRange","productsData","setProductData","loading","setLoading","roomNumbers","setRoomNumbers","selectedCategory","setSelectedCategory","categories","fetchRoomData","data","latestRoomData","error","from","select","order","ascending","limit","single","roomsArray","boardroom","meetingroom","meetingroomlarge","hrroom","financeroom","console","fetchProductsData","allImages","flatMap","product","image","addons","map","addon","uniqueImages","Set","signedUrls","signedUrlError","storage","createSignedUrls","urlMap","Object","fromEntries","item","path","signedUrl","processedData","filteredProducts","filter","matchesSearchQuery","title","toLowerCase","includes","matchesPriceRange","price","matchesCategory","category","className","children","variant","height","width","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","newValue","valueLabelDisplay","min","max","Array","length","_","index","style","margin","categoryProducts","subcategories","subcategory","subcategoryProducts","Card","details","addOns","roomData","id","_c","_s2","isMinimized","setIsMinimized","selectedAddOns","setSelectedAddOns","src","alt","onClick","_c2","$RefreshReg$"],"sources":["C:/Users/hp/Desktop/jojo 1/bill-of-quantities/src/boq.js"],"sourcesContent":["// import React, { useState, useMemo, useEffect } from 'react';\n// import { Slider, Skeleton, Select, MenuItem, Button } from '@mui/material';\n// import { supabase } from './supabase';\n// import './boq.css';\n\n// const Card = ({ title, price, image, details, addOns, initialMinimized = false, roomData }) => {\n//   const [selectedAddOns, setSelectedAddOns] = useState({});\n//   const [isMinimized, setIsMinimized] = useState(initialMinimized);\n//   const basePrice = price;\n\n//   const handleAddOnChange = (addOn, isChecked) => {\n//     setSelectedAddOns((prevSelectedAddOns) => ({\n//       ...prevSelectedAddOns,\n//       [addOn.name]: isChecked ? addOn.price : 0,\n//     }));\n//   };\n\n//   const calculateTotalPrice = useMemo(() => {\n//     return Object.values(selectedAddOns).reduce((total, addOnPrice) => total + addOnPrice, basePrice);\n//   }, [selectedAddOns, basePrice]);\n\n//   const toggleMinimize = () => setIsMinimized((prev) => !prev);\n\n//   if (isMinimized) {\n//     return (\n//       <div className=\"minimized-card\" onClick={toggleMinimize}>\n//         <span>{title}</span>\n//         <div className=\"info\">\n//           <p>Base Price: ₹{basePrice}</p>\n//           <p>Total Price: ₹{calculateTotalPrice}</p>\n//         </div>\n//         <button className=\"start-button\">Start</button>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div className=\"card-container\">\n//       <CardSection className=\"card-image\">\n//         <img src={image} alt={title} className=\"image\" />\n//       </CardSection>\n\n//       <CardSection className=\"card-features\">\n//         <h3>{title}</h3>\n//         <p>{details}</p>\n//         {roomData && (\n//           <div className=\"room-info\">\n//             <p>Room Data:</p>\n//             <ul>\n//               {Object.entries(roomData).map(([key, value]) => (\n//                 <li key={key}>{`${key}: ${value}`}</li>\n//               ))}\n//             </ul>\n//           </div>\n//         )}\n//       </CardSection>\n\n//       <CardSection className=\"card-add-ons\">\n//         <h3>ADD ON</h3>\n//         <ul>\n//           {addOns.map((addOn, index) => (\n//             <li key={index}>\n//               <label>\n//                 <input\n//                   type=\"checkbox\"\n//                   onChange={(e) => handleAddOnChange(addOn, e.target.checked)}\n//                 />\n//                 {addOn.name} (+₹{addOn.price})\n//               </label>\n//             </li>\n//           ))}\n//         </ul>\n//       </CardSection>\n\n//       <CardSection className=\"card-summary\">\n//         <h4>Summary</h4>\n//         <p>Base Price: ₹{basePrice}</p>\n//         <p>Add-Ons: ₹{Object.values(selectedAddOns).reduce((total, price) => total + price, 0)}</p>\n//         <p>Total Price: ₹{calculateTotalPrice}</p>\n//         <button className=\"done-button\" onClick={toggleMinimize}>Done</button>\n//       </CardSection>\n//     </div>\n//   );\n// };\n\n// const CardSection = ({ className, children }) => {\n//   return <div className={`card ${className}`}>{children}</div>;\n// };\n\n// const App = () => {\n//   const [searchQuery, setSearchQuery] = useState('');\n//   const [priceRange, setPriceRange] = useState([1000, 12000]);\n//   const [productsData, setProductData] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [roomNumbers, setRoomNumbers] = useState([]);\n//   const [showFilters, setShowFilters] = useState(false);\n//   const [selectedCategory, setSelectedCategory] = useState('');\n\n//   const categories = [\n//     'Furniture', \n//     'Civil / Plumbing', \n//     'Lighting', \n//     'Electrical', \n//     'Partitions- door / windows / ceilings',\n//     'Paint', \n//     'HVAC', \n//     'Smart Solutions', \n//     'Flooring', \n//     'Accessories'\n//   ];\n\n//   async function fetchRoomData() {\n//     try {\n//       const { data, error } = await supabase\n//         .from('areas')\n//         .select()\n//         .order('created_at', { ascending: false })\n//         .limit(1);\n  \n//       if (error) throw error;\n  \n//       if (data && data.length > 0) {\n//         const latestRoomData = data[0];\n//         const roomsArray = {\n//           linear: latestRoomData.linear,\n//           ltype: latestRoomData.ltype,\n//           md: latestRoomData.md,\n//           manager: latestRoomData.manager,\n//           small: latestRoomData.small,\n//           ups: latestRoomData.ups,\n//           bms: latestRoomData.bms,\n//           server: latestRoomData.server,\n//           reception: latestRoomData.reception,\n//           lounge: latestRoomData.lounge,\n//           sales: latestRoomData.sales,\n//           phonebooth: latestRoomData.phonebooth,\n//           discussionroom: latestRoomData.discussionroom,\n//           interviewroom: latestRoomData.interviewroom,\n//           conferenceroom: latestRoomData.conferenceroom,\n//           boardroom: latestRoomData.boardroom,\n//           meetingroom: latestRoomData.meetingroom,\n//           meetingroomlarge: latestRoomData.meetingroomlarge,\n//           hrroom: latestRoomData.hrroom,\n//           financeroom: latestRoomData.financeroom,\n//         };\n//         setRoomNumbers([roomsArray]);\n//       }\n//     } catch (error) {\n//       console.error('Error fetching room data:', error);\n//     }\n//   }\n\n//   async function fetchProductsData() {\n//     try {\n//       const { data, error } = await supabase\n//         .from(\"products\")\n//         .select(`\n//           *,\n//           addons (*),\n//           subcategory\n//         `);\n  \n//       if (error) throw error;\n  \n//       const allImages = data.flatMap(product => [product.image, ...product.addons.map(addon => addon.image)]);\n//       const uniqueImages = [...new Set(allImages)];\n  \n//       const { data: signedUrls, error: signedUrlError } = await supabase.storage\n//         .from(\"addon\")\n//         .createSignedUrls(uniqueImages, 3600);\n  \n//       if (signedUrlError) throw signedUrlError;\n  \n//       const urlMap = Object.fromEntries(signedUrls.map(item => [item.path, item.signedUrl]));\n  \n//       const processedData = data.map(product => ({\n//         ...product,\n//         image: urlMap[product.image] || '',\n//         addons: product.addons.map(addon => ({\n//           ...addon,\n//           image: urlMap[addon.image] || ''\n//         }))\n//       }));\n  \n//       setProductData(processedData);\n//     } catch (error) {\n//       console.error('Error fetching products data:', error);\n//     } finally {\n//       setLoading(false);\n//     }\n//   }\n\n//   useEffect(() => {\n//     Promise.all([fetchRoomData(), fetchProductsData()]);\n//   }, []);\n\n//   const handleSearch = (event) => {\n//     setSearchQuery(event.target.value.toLowerCase());\n//   };\n\n//   const handleSliderChange = (event, newValue) => {\n//     setPriceRange(newValue);\n//   };\n\n//   const handleCategoryChange = (event) => {\n//     setSelectedCategory(event.target.value);\n//   };\n\n//   const toggleFilters = () => {\n//     setShowFilters(!showFilters);\n//   };\n\n//   const filteredProducts = useMemo(() => {\n//     return productsData.filter((product) => {\n//       const matchesSearch = product.title.toLowerCase().includes(searchQuery) ||\n//                             product.details.toLowerCase().includes(searchQuery);\n//       const matchesPrice = product.price >= priceRange[0] && product.price <= priceRange[1];\n//       const matchesCategory = selectedCategory === '' || product.category === selectedCategory;\n//       return matchesSearch && matchesPrice && matchesCategory;\n//     });\n//   }, [productsData, searchQuery, priceRange, selectedCategory]);\n\n//   return (\n//     <div className=\"App\">\n//       <div className=\"search-filter\">\n//         <input\n//           type=\"text\"\n//           placeholder=\"Search products...\"\n//           value={searchQuery}\n//           onChange={handleSearch}\n//           className=\"search-bar\"\n//         />\n//         <Button onClick={toggleFilters} variant=\"contained\" color=\"primary\">\n//           {showFilters ? 'Hide Filters' : 'Show Filters'}\n//         </Button>\n//         {showFilters && (\n//           <div className=\"filters\">\n//             <Slider\n//               value={priceRange}\n//               onChange={handleSliderChange}\n//               valueLabelDisplay=\"auto\"\n//               min={1000}\n//               max={12000}\n//               className=\"price-slider\"\n//             />\n//             <Select\n//               value={selectedCategory}\n//               onChange={handleCategoryChange}\n//               displayEmpty\n//               className=\"category-select\"\n//             >\n//               <MenuItem value=\"\">All Categories</MenuItem>\n//               {categories.map((category) => (\n//                 <MenuItem key={category} value={category}>{category}</MenuItem>\n//               ))}\n//             </Select>\n//           </div>\n//         )}\n//       </div>\n\n//       <div className=\"products-grid\">\n//         {loading ? (\n//           Array.from({ length: 4 }).map((_, index) => (\n//             <div key={index} className=\"card-skeleton-container\">\n//             <Skeleton variant=\"rectangular\" height={150} width=\"100%\" className=\"skeleton-card-image\" />\n//               <Skeleton variant=\"text\" width=\"60%\" height={20} style={{ margin: '10px 0' }} />\n//               <Skeleton variant=\"text\" width=\"80%\" height={20} style={{ margin: '5px 0' }} />\n//               <Skeleton variant=\"text\" width=\"50%\" height={20} style={{ margin: '5px 0' }} />\n//             </div>\n//           ))\n//         ) : (\n//           categories.map((category) => {\n//             const categoryProducts = filteredProducts.filter(product => product.category === category);\n//             if (categoryProducts.length === 0) return null;\n\n//             return (\n//               <div key={category} className=\"category-section\">\n//                 <h2>{category}</h2>\n//                 {categoryProducts.map((product) => (\n//                   <div key={product.id}>\n//                     <Card\n//                       title={product.title}\n//                       price={product.price}\n//                       details={product.details}\n//                       addOns={product.addons}\n//                       image={product.image}\n//                       initialMinimized={product.initialMinimized}\n//                       roomData={roomNumbers[0]} // Adjust this if necessary\n//                     />\n//                   </div>\n//                 ))}\n//               </div>\n//             );\n//           })\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default App;\n\n\n\nimport React, { useState, useEffect, useMemo } from 'react';\nimport { supabase } from './supabaseClient'; // Assuming supabase client setup\nimport Skeleton from '@mui/material/Skeleton';\nimport Slider from '@mui/material/Slider';\n\nconst App = () => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [priceRange, setPriceRange] = useState([1000, 12000]);\n  const [productsData, setProductData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [roomNumbers, setRoomNumbers] = useState({});\n  const [selectedCategory, setSelectedCategory] = useState('');\n\n  const categories = [\n    'Furniture', \n    'Civil / Plumbing', \n    'Lighting', \n    'Electrical', \n    'Partitions- door / windows / ceilings',\n    'Paint', \n    'HVAC', \n    'Smart Solutions', \n    'Flooring', \n    'Accessories'\n  ];\n\n  // Fetch room data\n  async function fetchRoomData() {\n    try {\n      const { data: latestRoomData, error } = await supabase\n        .from('rooms')\n        .select('*')\n        .order('created_at', { ascending: false })\n        .limit(1)\n        .single();\n\n      if (error) throw error;\n      \n      if (latestRoomData) {\n        const roomsArray = {\n          boardroom: latestRoomData.boardroom,\n          meetingroom: latestRoomData.meetingroom,\n          meetingroomlarge: latestRoomData.meetingroomlarge,\n          hrroom: latestRoomData.hrroom,\n          financeroom: latestRoomData.financeroom,\n        };\n        setRoomNumbers(roomsArray); // Store single object directly\n      }\n    } catch (error) {\n      console.error('Error fetching room data:', error);\n    }\n  }\n\n  // Fetch product data\n  async function fetchProductsData() {\n    try {\n      const { data, error } = await supabase\n        .from('products')\n        .select(`\n          *,\n          addons (*),\n          subcategory\n        `);\n\n      if (error) throw error;\n\n      const allImages = data.flatMap(product => [product.image, ...product.addons.map(addon => addon.image)]);\n      const uniqueImages = [...new Set(allImages)];\n\n      const { data: signedUrls, error: signedUrlError } = await supabase.storage\n        .from(\"addon\")\n        .createSignedUrls(uniqueImages, 3600);\n\n      if (signedUrlError) throw signedUrlError;\n\n      const urlMap = Object.fromEntries(signedUrls.map(item => [item.path, item.signedUrl]));\n\n      const processedData = data.map(product => ({\n        ...product,\n        image: urlMap[product.image] || '',\n        addons: product.addons.map(addon => ({\n          ...addon,\n          image: urlMap[addon.image] || ''\n        }))\n      }));\n\n      setProductData(processedData);\n    } catch (error) {\n      console.error('Error fetching products data:', error);\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  useEffect(() => {\n    fetchRoomData();\n    fetchProductsData();\n  }, []);\n\n  // Filtered products based on query, price, and category\n  const filteredProducts = useMemo(() => {\n    return productsData.filter(product => {\n      const matchesSearchQuery = product.title.toLowerCase().includes(searchQuery.toLowerCase());\n      const matchesPriceRange = product.price >= priceRange[0] && product.price <= priceRange[1];\n      const matchesCategory = selectedCategory ? product.category === selectedCategory : true;\n      return matchesSearchQuery && matchesPriceRange && matchesCategory;\n    });\n  }, [productsData, searchQuery, priceRange, selectedCategory]);\n\n  return (\n    <div className=\"App\">\n      <div className=\"search-filter\">\n        {loading ? (\n          <>\n            <Skeleton variant=\"rectangular\" height={40} width=\"80%\" className=\"skeleton-bar\" />\n            <Skeleton variant=\"rectangular\" height={40} width=\"80%\" className=\"skeleton-slider\" />\n          </>\n        ) : (\n          <>\n            <input\n              type=\"text\"\n              placeholder=\"Search products...\"\n              value={searchQuery}\n              onChange={(e) => setSearchQuery(e.target.value)}\n              className=\"search-bar\"\n            />\n            <Slider\n              value={priceRange}\n              onChange={(e, newValue) => setPriceRange(newValue)}\n              valueLabelDisplay=\"auto\"\n              min={1000}\n              max={12000}\n              className=\"price-slider\"\n            />\n          </>\n        )}\n      </div>\n\n      <div className=\"products-grid\">\n        {loading ? (\n          Array.from({ length: 4 }).map((_, index) => (\n            <div key={index} className=\"card-skeleton-container\">\n              <Skeleton variant=\"rectangular\" height={150} width=\"100%\" className=\"skeleton-card-image\" />\n              <Skeleton variant=\"text\" width=\"60%\" height={20} style={{ margin: '10px 0' }} />\n              <Skeleton variant=\"text\" width=\"80%\" height={20} style={{ margin: '5px 0' }} />\n              <Skeleton variant=\"text\" width=\"50%\" height={20} style={{ margin: '5px 0' }} />\n            </div>\n          ))\n        ) : (\n          categories.map((category) => {\n            const categoryProducts = filteredProducts.filter(product => product.category === category);\n            if (categoryProducts.length === 0) return null;\n\n            const subcategories = [...new Set(categoryProducts.map(product => product.subcategory))];\n\n            return (\n              <div key={category} className=\"category-section\">\n                <h2>{category}</h2>\n                {subcategories.map((subcategory) => {\n                  const subcategoryProducts = categoryProducts.filter(product => product.subcategory === subcategory);\n                  return (\n                    <div key={subcategory} className=\"subcategory-section\">\n                      <h3>{subcategory}</h3>\n                      {subcategoryProducts.map((product) => (\n                        <Card\n                          key={product.id}\n                          title={product.title}\n                          price={product.price}\n                          details={product.details}\n                          addOns={product.addons}\n                          image={product.image}\n                          roomData={roomNumbers}\n                        />\n                      ))}\n                    </div>\n                  );\n                })}\n              </div>\n            );\n          })\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst Card = ({ title, price, image, details, addOns, roomData }) => {\n  const [isMinimized, setIsMinimized] = useState(false);\n  const [selectedAddOns, setSelectedAddOns] = useState({});\n\n  return (\n    <div className=\"product-card\">\n      <img src={image} alt={title} />\n      <h3>{title}</h3>\n      <p>Price: ${price}</p>\n      <p>{details}</p>\n      <button onClick={() => setIsMinimized(!isMinimized)}>\n        {isMinimized ? 'Show More' : 'Show Less'}\n      </button>\n      {/* Add logic for handling addons */}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;A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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}