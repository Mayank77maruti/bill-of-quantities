{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\jojo 1\\\\bill-of-quantities\\\\src\\\\boq.js\",\n  _s2 = $RefreshSig$();\n// import React, { useState, useMemo, useEffect } from 'react';\n// import { Slider, Skeleton, Select, MenuItem, Button } from '@mui/material';\n// import { supabase } from './supabase';\n// import './boq.css';\n\n// const Card = ({ title, price, image, details, addOns, initialMinimized = false, roomData }) => {\n//   const [selectedAddOns, setSelectedAddOns] = useState({});\n//   const [isMinimized, setIsMinimized] = useState(initialMinimized);\n//   const basePrice = price;\n\n//   const handleAddOnChange = (addOn, isChecked) => {\n//     setSelectedAddOns((prevSelectedAddOns) => ({\n//       ...prevSelectedAddOns,\n//       [addOn.name]: isChecked ? addOn.price : 0,\n//     }));\n//   };\n\n//   const calculateTotalPrice = useMemo(() => {\n//     return Object.values(selectedAddOns).reduce((total, addOnPrice) => total + addOnPrice, basePrice);\n//   }, [selectedAddOns, basePrice]);\n\n//   const toggleMinimize = () => setIsMinimized((prev) => !prev);\n\n//   if (isMinimized) {\n//     return (\n//       <div className=\"minimized-card\" onClick={toggleMinimize}>\n//         <span>{title}</span>\n//         <div className=\"info\">\n//           <p>Base Price: ₹{basePrice}</p>\n//           <p>Total Price: ₹{calculateTotalPrice}</p>\n//         </div>\n//         <button className=\"start-button\">Start</button>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div className=\"card-container\">\n//       <CardSection className=\"card-image\">\n//         <img src={image} alt={title} className=\"image\" />\n//       </CardSection>\n\n//       <CardSection className=\"card-features\">\n//         <h3>{title}</h3>\n//         <p>{details}</p>\n//         {roomData && (\n//           <div className=\"room-info\">\n//             <p>Room Data:</p>\n//             <ul>\n//               {Object.entries(roomData).map(([key, value]) => (\n//                 <li key={key}>{`${key}: ${value}`}</li>\n//               ))}\n//             </ul>\n//           </div>\n//         )}\n//       </CardSection>\n\n//       <CardSection className=\"card-add-ons\">\n//         <h3>ADD ON</h3>\n//         <ul>\n//           {addOns.map((addOn, index) => (\n//             <li key={index}>\n//               <label>\n//                 <input\n//                   type=\"checkbox\"\n//                   onChange={(e) => handleAddOnChange(addOn, e.target.checked)}\n//                 />\n//                 {addOn.name} (+₹{addOn.price})\n//               </label>\n//             </li>\n//           ))}\n//         </ul>\n//       </CardSection>\n\n//       <CardSection className=\"card-summary\">\n//         <h4>Summary</h4>\n//         <p>Base Price: ₹{basePrice}</p>\n//         <p>Add-Ons: ₹{Object.values(selectedAddOns).reduce((total, price) => total + price, 0)}</p>\n//         <p>Total Price: ₹{calculateTotalPrice}</p>\n//         <button className=\"done-button\" onClick={toggleMinimize}>Done</button>\n//       </CardSection>\n//     </div>\n//   );\n// };\n\n// const CardSection = ({ className, children }) => {\n//   return <div className={`card ${className}`}>{children}</div>;\n// };\n\n// const App = () => {\n//   const [searchQuery, setSearchQuery] = useState('');\n//   const [priceRange, setPriceRange] = useState([1000, 12000]);\n//   const [productsData, setProductData] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [roomNumbers, setRoomNumbers] = useState([]);\n//   const [showFilters, setShowFilters] = useState(false);\n//   const [selectedCategory, setSelectedCategory] = useState('');\n\n//   const categories = [\n//     'Furniture', \n//     'Civil / Plumbing', \n//     'Lighting', \n//     'Electrical', \n//     'Partitions- door / windows / ceilings',\n//     'Paint', \n//     'HVAC', \n//     'Smart Solutions', \n//     'Flooring', \n//     'Accessories'\n//   ];\n\n//   async function fetchRoomData() {\n//     try {\n//       const { data, error } = await supabase\n//         .from('areas')\n//         .select()\n//         .order('created_at', { ascending: false })\n//         .limit(1);\n\n//       if (error) throw error;\n\n//       if (data && data.length > 0) {\n//         const latestRoomData = data[0];\n//         const roomsArray = {\n//           linear: latestRoomData.linear,\n//           ltype: latestRoomData.ltype,\n//           md: latestRoomData.md,\n//           manager: latestRoomData.manager,\n//           small: latestRoomData.small,\n//           ups: latestRoomData.ups,\n//           bms: latestRoomData.bms,\n//           server: latestRoomData.server,\n//           reception: latestRoomData.reception,\n//           lounge: latestRoomData.lounge,\n//           sales: latestRoomData.sales,\n//           phonebooth: latestRoomData.phonebooth,\n//           discussionroom: latestRoomData.discussionroom,\n//           interviewroom: latestRoomData.interviewroom,\n//           conferenceroom: latestRoomData.conferenceroom,\n//           boardroom: latestRoomData.boardroom,\n//           meetingroom: latestRoomData.meetingroom,\n//           meetingroomlarge: latestRoomData.meetingroomlarge,\n//           hrroom: latestRoomData.hrroom,\n//           financeroom: latestRoomData.financeroom,\n//         };\n//         setRoomNumbers([roomsArray]);\n//       }\n//     } catch (error) {\n//       console.error('Error fetching room data:', error);\n//     }\n//   }\n\n//   async function fetchProductsData() {\n//     try {\n//       const { data, error } = await supabase\n//         .from(\"products\")\n//         .select(`\n//           *,\n//           addons (*),\n//           subcategory\n//         `);\n\n//       if (error) throw error;\n\n//       const allImages = data.flatMap(product => [product.image, ...product.addons.map(addon => addon.image)]);\n//       const uniqueImages = [...new Set(allImages)];\n\n//       const { data: signedUrls, error: signedUrlError } = await supabase.storage\n//         .from(\"addon\")\n//         .createSignedUrls(uniqueImages, 3600);\n\n//       if (signedUrlError) throw signedUrlError;\n\n//       const urlMap = Object.fromEntries(signedUrls.map(item => [item.path, item.signedUrl]));\n\n//       const processedData = data.map(product => ({\n//         ...product,\n//         image: urlMap[product.image] || '',\n//         addons: product.addons.map(addon => ({\n//           ...addon,\n//           image: urlMap[addon.image] || ''\n//         }))\n//       }));\n\n//       setProductData(processedData);\n//     } catch (error) {\n//       console.error('Error fetching products data:', error);\n//     } finally {\n//       setLoading(false);\n//     }\n//   }\n\n//   useEffect(() => {\n//     Promise.all([fetchRoomData(), fetchProductsData()]);\n//   }, []);\n\n//   const handleSearch = (event) => {\n//     setSearchQuery(event.target.value.toLowerCase());\n//   };\n\n//   const handleSliderChange = (event, newValue) => {\n//     setPriceRange(newValue);\n//   };\n\n//   const handleCategoryChange = (event) => {\n//     setSelectedCategory(event.target.value);\n//   };\n\n//   const toggleFilters = () => {\n//     setShowFilters(!showFilters);\n//   };\n\n//   const filteredProducts = useMemo(() => {\n//     return productsData.filter((product) => {\n//       const matchesSearch = product.title.toLowerCase().includes(searchQuery) ||\n//                             product.details.toLowerCase().includes(searchQuery);\n//       const matchesPrice = product.price >= priceRange[0] && product.price <= priceRange[1];\n//       const matchesCategory = selectedCategory === '' || product.category === selectedCategory;\n//       return matchesSearch && matchesPrice && matchesCategory;\n//     });\n//   }, [productsData, searchQuery, priceRange, selectedCategory]);\n\n//   return (\n//     <div className=\"App\">\n//       <div className=\"search-filter\">\n//         <input\n//           type=\"text\"\n//           placeholder=\"Search products...\"\n//           value={searchQuery}\n//           onChange={handleSearch}\n//           className=\"search-bar\"\n//         />\n//         <Button onClick={toggleFilters} variant=\"contained\" color=\"primary\">\n//           {showFilters ? 'Hide Filters' : 'Show Filters'}\n//         </Button>\n//         {showFilters && (\n//           <div className=\"filters\">\n//             <Slider\n//               value={priceRange}\n//               onChange={handleSliderChange}\n//               valueLabelDisplay=\"auto\"\n//               min={1000}\n//               max={12000}\n//               className=\"price-slider\"\n//             />\n//             <Select\n//               value={selectedCategory}\n//               onChange={handleCategoryChange}\n//               displayEmpty\n//               className=\"category-select\"\n//             >\n//               <MenuItem value=\"\">All Categories</MenuItem>\n//               {categories.map((category) => (\n//                 <MenuItem key={category} value={category}>{category}</MenuItem>\n//               ))}\n//             </Select>\n//           </div>\n//         )}\n//       </div>\n\n//       <div className=\"products-grid\">\n//         {loading ? (\n//           Array.from({ length: 4 }).map((_, index) => (\n//             <div key={index} className=\"card-skeleton-container\">\n//             <Skeleton variant=\"rectangular\" height={150} width=\"100%\" className=\"skeleton-card-image\" />\n//               <Skeleton variant=\"text\" width=\"60%\" height={20} style={{ margin: '10px 0' }} />\n//               <Skeleton variant=\"text\" width=\"80%\" height={20} style={{ margin: '5px 0' }} />\n//               <Skeleton variant=\"text\" width=\"50%\" height={20} style={{ margin: '5px 0' }} />\n//             </div>\n//           ))\n//         ) : (\n//           categories.map((category) => {\n//             const categoryProducts = filteredProducts.filter(product => product.category === category);\n//             if (categoryProducts.length === 0) return null;\n\n//             return (\n//               <div key={category} className=\"category-section\">\n//                 <h2>{category}</h2>\n//                 {categoryProducts.map((product) => (\n//                   <div key={product.id}>\n//                     <Card\n//                       title={product.title}\n//                       price={product.price}\n//                       details={product.details}\n//                       addOns={product.addons}\n//                       image={product.image}\n//                       initialMinimized={product.initialMinimized}\n//                       roomData={roomNumbers[0]} // Adjust this if necessary\n//                     />\n//                   </div>\n//                 ))}\n//               </div>\n//             );\n//           })\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default App;\n\nimport React, { useState, useEffect, useMemo } from 'react';\nimport { supabase } from './supabaseClient'; // Assuming you have a supabase client setup\nimport Skeleton from '@mui/material/Skeleton';\nimport Slider from '@mui/material/Slider';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [searchQuery, setSearchQuery] = useState('');\n  const [priceRange, setPriceRange] = useState([1000, 12000]);\n  const [productsData, setProductData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [roomNumbers, setRoomNumbers] = useState([]);\n  const [showFilters, setShowFilters] = useState(false);\n  const [selectedCategory, setSelectedCategory] = useState('');\n  const Card = ({\n    title,\n    price,\n    image,\n    details,\n    addOns,\n    initialMinimized = false,\n    roomData\n  }) => {\n    _s();\n    const [selectedAddOns, setSelectedAddOns] = useState({});\n    const [isMinimized, setIsMinimized] = useState(initialMinimized);\n    const basePrice = price;\n    const categories = ['Furniture', 'Civil / Plumbing', 'Lighting', 'Electrical', 'Partitions- door / windows / ceilings', 'Paint', 'HVAC', 'Smart Solutions', 'Flooring', 'Accessories'];\n    async function fetchRoomData() {\n      try {\n        const {\n          data: latestRoomData,\n          error\n        } = await supabase.from('rooms').select('*').order('created_at', {\n          ascending: false\n        }).limit(1).single();\n        if (error) throw error;\n        if (latestRoomData) {\n          const roomsArray = {\n            boardroom: latestRoomData.boardroom,\n            meetingroom: latestRoomData.meetingroom,\n            meetingroomlarge: latestRoomData.meetingroomlarge,\n            hrroom: latestRoomData.hrroom,\n            financeroom: latestRoomData.financeroom\n          };\n          setRoomNumbers([roomsArray]);\n        }\n      } catch (error) {\n        console.error('Error fetching room data:', error);\n      }\n    }\n    async function fetchProductsData() {\n      try {\n        const {\n          data,\n          error\n        } = await supabase.from(\"products\").select(`\n          *,\n          addons (*),\n          subcategory\n        `);\n        if (error) throw error;\n        const allImages = data.flatMap(product => [product.image, ...product.addons.map(addon => addon.image)]);\n        const uniqueImages = [...new Set(allImages)];\n        const {\n          data: signedUrls,\n          error: signedUrlError\n        } = await supabase.storage.from(\"addon\").createSignedUrls(uniqueImages, 3600);\n        if (signedUrlError) throw signedUrlError;\n        const urlMap = Object.fromEntries(signedUrls.map(item => [item.path, item.signedUrl]));\n        const processedData = data.map(product => ({\n          ...product,\n          image: urlMap[product.image] || '',\n          addons: product.addons.map(addon => ({\n            ...addon,\n            image: urlMap[addon.image] || ''\n          }))\n        }));\n        setProductData(processedData);\n      } catch (error) {\n        console.error('Error fetching products data:', error);\n      } finally {\n        setLoading(false);\n      }\n    }\n    useEffect(() => {\n      fetchRoomData();\n      fetchProductsData();\n    }, []);\n    const handleSearch = event => {\n      setSearchQuery(event.target.value);\n    };\n    const handleSliderChange = (event, newValue) => {\n      setPriceRange(newValue);\n    };\n    const handleCategoryChange = event => {\n      setSelectedCategory(event.target.value);\n    };\n    const toggleFilters = () => {\n      setShowFilters(!showFilters);\n    };\n    const filteredProducts = useMemo(() => {\n      return productsData.filter(product => {\n        const matchesSearchQuery = product.title.toLowerCase().includes(searchQuery.toLowerCase());\n        const matchesPriceRange = product.price >= priceRange[0] && product.price <= priceRange[1];\n        const matchesCategory = selectedCategory ? product.category === selectedCategory : true;\n        return matchesSearchQuery && matchesPriceRange && matchesCategory;\n      });\n    }, [productsData, searchQuery, priceRange, selectedCategory]);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-filter\",\n        children: loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Skeleton, {\n            variant: \"rectangular\",\n            height: 40,\n            width: \"80%\",\n            className: \"skeleton-bar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n            variant: \"rectangular\",\n            height: 40,\n            width: \"80%\",\n            className: \"skeleton-slider\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Search products...\",\n            value: searchQuery,\n            onChange: handleSearch,\n            className: \"search-bar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Slider, {\n            value: priceRange,\n            onChange: handleSliderChange,\n            valueLabelDisplay: \"auto\",\n            min: 1000,\n            max: 12000,\n            className: \"price-slider\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"products-grid\",\n        children: loading ? Array.from({\n          length: 4\n        }).map((_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-skeleton-container\",\n          children: [/*#__PURE__*/_jsxDEV(Skeleton, {\n            variant: \"rectangular\",\n            height: 150,\n            width: \"100%\",\n            className: \"skeleton-card-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n            variant: \"text\",\n            width: \"60%\",\n            height: 20,\n            style: {\n              margin: '10px 0'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n            variant: \"text\",\n            width: \"80%\",\n            height: 20,\n            style: {\n              margin: '5px 0'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n            variant: \"text\",\n            width: \"50%\",\n            height: 20,\n            style: {\n              margin: '5px 0'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 470,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 13\n        }, this)) : categories.map(category => {\n          const categoryProducts = filteredProducts.filter(product => product.category === category);\n          if (categoryProducts.length === 0) return null;\n          const subcategories = [...new Set(categoryProducts.map(product => product.subcategory))];\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"category-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: category\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 482,\n              columnNumber: 17\n            }, this), subcategories.map(subcategory => {\n              const subcategoryProducts = categoryProducts.filter(product => product.subcategory === subcategory);\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"subcategory-section\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: subcategory\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 487,\n                  columnNumber: 23\n                }, this), subcategoryProducts.map(product => /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(Card, {\n                    title: product.title,\n                    price: product.price,\n                    details: product.details,\n                    addOns: product.addons,\n                    image: product.image,\n                    initialMinimized: product.initialMinimized,\n                    roomData: roomNumbers[0]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 490,\n                    columnNumber: 27\n                  }, this)\n                }, product.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 489,\n                  columnNumber: 25\n                }, this))]\n              }, subcategory, true, {\n                fileName: _jsxFileName,\n                lineNumber: 486,\n                columnNumber: 21\n              }, this);\n            })]\n          }, category, true, {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 5\n    }, this);\n  };\n  _s(Card, \"LB9a/f+a5f1pvXJ9g01udHhL2ho=\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-filter\",\n      children: loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Skeleton, {\n          variant: \"rectangular\",\n          height: 40,\n          width: \"80%\",\n          className: \"skeleton-bar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 518,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n          variant: \"rectangular\",\n          height: 40,\n          width: \"80%\",\n          className: \"skeleton-slider\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 519,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search products...\",\n          value: searchQuery,\n          onChange: handleSearch,\n          className: \"search-bar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 523,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Slider, {\n          value: priceRange,\n          onChange: handleSliderChange,\n          valueLabelDisplay: \"auto\",\n          min: 1000,\n          max: 12000,\n          className: \"price-slider\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 530,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 515,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"products-grid\",\n      children: loading ? Array.from({\n        length: 4\n      }).map((_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-skeleton-container\",\n        children: [/*#__PURE__*/_jsxDEV(Skeleton, {\n          variant: \"rectangular\",\n          height: 150,\n          width: \"100%\",\n          className: \"skeleton-card-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 546,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n          variant: \"text\",\n          width: \"60%\",\n          height: 20,\n          style: {\n            margin: '10px 0'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 547,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n          variant: \"text\",\n          width: \"80%\",\n          height: 20,\n          style: {\n            margin: '5px 0'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 548,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n          variant: \"text\",\n          width: \"50%\",\n          height: 20,\n          style: {\n            margin: '5px 0'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 549,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 545,\n        columnNumber: 13\n      }, this)) : categories.map(category => {\n        const categoryProducts = filteredProducts.filter(product => product.category === category);\n        if (categoryProducts.length === 0) return null;\n        const subcategories = [...new Set(categoryProducts.map(product => product.subcategory))];\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"category-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 561,\n            columnNumber: 17\n          }, this), subcategories.map(subcategory => {\n            const subcategoryProducts = categoryProducts.filter(product => product.subcategory === subcategory);\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"subcategory-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: subcategory\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 566,\n                columnNumber: 23\n              }, this), subcategoryProducts.map(product => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(Card, {\n                  title: product.title,\n                  price: product.price,\n                  details: product.details,\n                  addOns: product.addons,\n                  image: product.image,\n                  initialMinimized: product.initialMinimized,\n                  roomData: roomNumbers[0]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 569,\n                  columnNumber: 27\n                }, this)\n              }, product.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 568,\n                columnNumber: 25\n              }, this))]\n            }, subcategory, true, {\n              fileName: _jsxFileName,\n              lineNumber: 565,\n              columnNumber: 21\n            }, this);\n          })]\n        }, category, true, {\n          fileName: _jsxFileName,\n          lineNumber: 560,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 542,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 514,\n    columnNumber: 5\n  }, this);\n};\n_s2(App, \"jRZ8jM+L3aPaREhGirHox5Pf4Iw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","supabase","Skeleton","Slider","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s2","_s","$RefreshSig$","searchQuery","setSearchQuery","priceRange","setPriceRange","productsData","setProductData","loading","setLoading","roomNumbers","setRoomNumbers","showFilters","setShowFilters","selectedCategory","setSelectedCategory","Card","title","price","image","details","addOns","initialMinimized","roomData","selectedAddOns","setSelectedAddOns","isMinimized","setIsMinimized","basePrice","categories","fetchRoomData","data","latestRoomData","error","from","select","order","ascending","limit","single","roomsArray","boardroom","meetingroom","meetingroomlarge","hrroom","financeroom","console","fetchProductsData","allImages","flatMap","product","addons","map","addon","uniqueImages","Set","signedUrls","signedUrlError","storage","createSignedUrls","urlMap","Object","fromEntries","item","path","signedUrl","processedData","handleSearch","event","target","value","handleSliderChange","newValue","handleCategoryChange","toggleFilters","filteredProducts","filter","matchesSearchQuery","toLowerCase","includes","matchesPriceRange","matchesCategory","category","className","children","variant","height","width","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","valueLabelDisplay","min","max","Array","length","_","index","style","margin","categoryProducts","subcategories","subcategory","subcategoryProducts","id","_c","$RefreshReg$"],"sources":["C:/Users/hp/Desktop/jojo 1/bill-of-quantities/src/boq.js"],"sourcesContent":["// import React, { useState, useMemo, useEffect } from 'react';\n// import { Slider, Skeleton, Select, MenuItem, Button } from '@mui/material';\n// import { supabase } from './supabase';\n// import './boq.css';\n\n// const Card = ({ title, price, image, details, addOns, initialMinimized = false, roomData }) => {\n//   const [selectedAddOns, setSelectedAddOns] = useState({});\n//   const [isMinimized, setIsMinimized] = useState(initialMinimized);\n//   const basePrice = price;\n\n//   const handleAddOnChange = (addOn, isChecked) => {\n//     setSelectedAddOns((prevSelectedAddOns) => ({\n//       ...prevSelectedAddOns,\n//       [addOn.name]: isChecked ? addOn.price : 0,\n//     }));\n//   };\n\n//   const calculateTotalPrice = useMemo(() => {\n//     return Object.values(selectedAddOns).reduce((total, addOnPrice) => total + addOnPrice, basePrice);\n//   }, [selectedAddOns, basePrice]);\n\n//   const toggleMinimize = () => setIsMinimized((prev) => !prev);\n\n//   if (isMinimized) {\n//     return (\n//       <div className=\"minimized-card\" onClick={toggleMinimize}>\n//         <span>{title}</span>\n//         <div className=\"info\">\n//           <p>Base Price: ₹{basePrice}</p>\n//           <p>Total Price: ₹{calculateTotalPrice}</p>\n//         </div>\n//         <button className=\"start-button\">Start</button>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div className=\"card-container\">\n//       <CardSection className=\"card-image\">\n//         <img src={image} alt={title} className=\"image\" />\n//       </CardSection>\n\n//       <CardSection className=\"card-features\">\n//         <h3>{title}</h3>\n//         <p>{details}</p>\n//         {roomData && (\n//           <div className=\"room-info\">\n//             <p>Room Data:</p>\n//             <ul>\n//               {Object.entries(roomData).map(([key, value]) => (\n//                 <li key={key}>{`${key}: ${value}`}</li>\n//               ))}\n//             </ul>\n//           </div>\n//         )}\n//       </CardSection>\n\n//       <CardSection className=\"card-add-ons\">\n//         <h3>ADD ON</h3>\n//         <ul>\n//           {addOns.map((addOn, index) => (\n//             <li key={index}>\n//               <label>\n//                 <input\n//                   type=\"checkbox\"\n//                   onChange={(e) => handleAddOnChange(addOn, e.target.checked)}\n//                 />\n//                 {addOn.name} (+₹{addOn.price})\n//               </label>\n//             </li>\n//           ))}\n//         </ul>\n//       </CardSection>\n\n//       <CardSection className=\"card-summary\">\n//         <h4>Summary</h4>\n//         <p>Base Price: ₹{basePrice}</p>\n//         <p>Add-Ons: ₹{Object.values(selectedAddOns).reduce((total, price) => total + price, 0)}</p>\n//         <p>Total Price: ₹{calculateTotalPrice}</p>\n//         <button className=\"done-button\" onClick={toggleMinimize}>Done</button>\n//       </CardSection>\n//     </div>\n//   );\n// };\n\n// const CardSection = ({ className, children }) => {\n//   return <div className={`card ${className}`}>{children}</div>;\n// };\n\n// const App = () => {\n//   const [searchQuery, setSearchQuery] = useState('');\n//   const [priceRange, setPriceRange] = useState([1000, 12000]);\n//   const [productsData, setProductData] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [roomNumbers, setRoomNumbers] = useState([]);\n//   const [showFilters, setShowFilters] = useState(false);\n//   const [selectedCategory, setSelectedCategory] = useState('');\n\n//   const categories = [\n//     'Furniture', \n//     'Civil / Plumbing', \n//     'Lighting', \n//     'Electrical', \n//     'Partitions- door / windows / ceilings',\n//     'Paint', \n//     'HVAC', \n//     'Smart Solutions', \n//     'Flooring', \n//     'Accessories'\n//   ];\n\n//   async function fetchRoomData() {\n//     try {\n//       const { data, error } = await supabase\n//         .from('areas')\n//         .select()\n//         .order('created_at', { ascending: false })\n//         .limit(1);\n  \n//       if (error) throw error;\n  \n//       if (data && data.length > 0) {\n//         const latestRoomData = data[0];\n//         const roomsArray = {\n//           linear: latestRoomData.linear,\n//           ltype: latestRoomData.ltype,\n//           md: latestRoomData.md,\n//           manager: latestRoomData.manager,\n//           small: latestRoomData.small,\n//           ups: latestRoomData.ups,\n//           bms: latestRoomData.bms,\n//           server: latestRoomData.server,\n//           reception: latestRoomData.reception,\n//           lounge: latestRoomData.lounge,\n//           sales: latestRoomData.sales,\n//           phonebooth: latestRoomData.phonebooth,\n//           discussionroom: latestRoomData.discussionroom,\n//           interviewroom: latestRoomData.interviewroom,\n//           conferenceroom: latestRoomData.conferenceroom,\n//           boardroom: latestRoomData.boardroom,\n//           meetingroom: latestRoomData.meetingroom,\n//           meetingroomlarge: latestRoomData.meetingroomlarge,\n//           hrroom: latestRoomData.hrroom,\n//           financeroom: latestRoomData.financeroom,\n//         };\n//         setRoomNumbers([roomsArray]);\n//       }\n//     } catch (error) {\n//       console.error('Error fetching room data:', error);\n//     }\n//   }\n\n//   async function fetchProductsData() {\n//     try {\n//       const { data, error } = await supabase\n//         .from(\"products\")\n//         .select(`\n//           *,\n//           addons (*),\n//           subcategory\n//         `);\n  \n//       if (error) throw error;\n  \n//       const allImages = data.flatMap(product => [product.image, ...product.addons.map(addon => addon.image)]);\n//       const uniqueImages = [...new Set(allImages)];\n  \n//       const { data: signedUrls, error: signedUrlError } = await supabase.storage\n//         .from(\"addon\")\n//         .createSignedUrls(uniqueImages, 3600);\n  \n//       if (signedUrlError) throw signedUrlError;\n  \n//       const urlMap = Object.fromEntries(signedUrls.map(item => [item.path, item.signedUrl]));\n  \n//       const processedData = data.map(product => ({\n//         ...product,\n//         image: urlMap[product.image] || '',\n//         addons: product.addons.map(addon => ({\n//           ...addon,\n//           image: urlMap[addon.image] || ''\n//         }))\n//       }));\n  \n//       setProductData(processedData);\n//     } catch (error) {\n//       console.error('Error fetching products data:', error);\n//     } finally {\n//       setLoading(false);\n//     }\n//   }\n\n//   useEffect(() => {\n//     Promise.all([fetchRoomData(), fetchProductsData()]);\n//   }, []);\n\n//   const handleSearch = (event) => {\n//     setSearchQuery(event.target.value.toLowerCase());\n//   };\n\n//   const handleSliderChange = (event, newValue) => {\n//     setPriceRange(newValue);\n//   };\n\n//   const handleCategoryChange = (event) => {\n//     setSelectedCategory(event.target.value);\n//   };\n\n//   const toggleFilters = () => {\n//     setShowFilters(!showFilters);\n//   };\n\n//   const filteredProducts = useMemo(() => {\n//     return productsData.filter((product) => {\n//       const matchesSearch = product.title.toLowerCase().includes(searchQuery) ||\n//                             product.details.toLowerCase().includes(searchQuery);\n//       const matchesPrice = product.price >= priceRange[0] && product.price <= priceRange[1];\n//       const matchesCategory = selectedCategory === '' || product.category === selectedCategory;\n//       return matchesSearch && matchesPrice && matchesCategory;\n//     });\n//   }, [productsData, searchQuery, priceRange, selectedCategory]);\n\n//   return (\n//     <div className=\"App\">\n//       <div className=\"search-filter\">\n//         <input\n//           type=\"text\"\n//           placeholder=\"Search products...\"\n//           value={searchQuery}\n//           onChange={handleSearch}\n//           className=\"search-bar\"\n//         />\n//         <Button onClick={toggleFilters} variant=\"contained\" color=\"primary\">\n//           {showFilters ? 'Hide Filters' : 'Show Filters'}\n//         </Button>\n//         {showFilters && (\n//           <div className=\"filters\">\n//             <Slider\n//               value={priceRange}\n//               onChange={handleSliderChange}\n//               valueLabelDisplay=\"auto\"\n//               min={1000}\n//               max={12000}\n//               className=\"price-slider\"\n//             />\n//             <Select\n//               value={selectedCategory}\n//               onChange={handleCategoryChange}\n//               displayEmpty\n//               className=\"category-select\"\n//             >\n//               <MenuItem value=\"\">All Categories</MenuItem>\n//               {categories.map((category) => (\n//                 <MenuItem key={category} value={category}>{category}</MenuItem>\n//               ))}\n//             </Select>\n//           </div>\n//         )}\n//       </div>\n\n//       <div className=\"products-grid\">\n//         {loading ? (\n//           Array.from({ length: 4 }).map((_, index) => (\n//             <div key={index} className=\"card-skeleton-container\">\n//             <Skeleton variant=\"rectangular\" height={150} width=\"100%\" className=\"skeleton-card-image\" />\n//               <Skeleton variant=\"text\" width=\"60%\" height={20} style={{ margin: '10px 0' }} />\n//               <Skeleton variant=\"text\" width=\"80%\" height={20} style={{ margin: '5px 0' }} />\n//               <Skeleton variant=\"text\" width=\"50%\" height={20} style={{ margin: '5px 0' }} />\n//             </div>\n//           ))\n//         ) : (\n//           categories.map((category) => {\n//             const categoryProducts = filteredProducts.filter(product => product.category === category);\n//             if (categoryProducts.length === 0) return null;\n\n//             return (\n//               <div key={category} className=\"category-section\">\n//                 <h2>{category}</h2>\n//                 {categoryProducts.map((product) => (\n//                   <div key={product.id}>\n//                     <Card\n//                       title={product.title}\n//                       price={product.price}\n//                       details={product.details}\n//                       addOns={product.addons}\n//                       image={product.image}\n//                       initialMinimized={product.initialMinimized}\n//                       roomData={roomNumbers[0]} // Adjust this if necessary\n//                     />\n//                   </div>\n//                 ))}\n//               </div>\n//             );\n//           })\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default App;\n\n\n\nimport React, { useState, useEffect, useMemo } from 'react';\nimport { supabase } from './supabaseClient'; // Assuming you have a supabase client setup\nimport Skeleton from '@mui/material/Skeleton';\nimport Slider from '@mui/material/Slider';\n\n\nconst App = () => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [priceRange, setPriceRange] = useState([1000, 12000]);\n  const [productsData, setProductData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [roomNumbers, setRoomNumbers] = useState([]);\n  const [showFilters, setShowFilters] = useState(false);\n  const [selectedCategory, setSelectedCategory] = useState('');\n\n  const Card = ({ title, price, image, details, addOns, initialMinimized = false, roomData }) => {\n    const [selectedAddOns, setSelectedAddOns] = useState({});\n    const [isMinimized, setIsMinimized] = useState(initialMinimized);\n    const basePrice = price;\n\n  const categories = [\n    'Furniture', \n    'Civil / Plumbing', \n    'Lighting', \n    'Electrical', \n    'Partitions- door / windows / ceilings',\n    'Paint', \n    'HVAC', \n    'Smart Solutions', \n    'Flooring', \n    'Accessories'\n  ];\n\n  async function fetchRoomData() {\n    try {\n      const { data: latestRoomData, error } = await supabase\n        .from('rooms')\n        .select('*')\n        .order('created_at', { ascending: false })\n        .limit(1)\n        .single();\n\n      if (error) throw error;\n\n      if (latestRoomData) {\n        const roomsArray = {\n          boardroom: latestRoomData.boardroom,\n          meetingroom: latestRoomData.meetingroom,\n          meetingroomlarge: latestRoomData.meetingroomlarge,\n          hrroom: latestRoomData.hrroom,\n          financeroom: latestRoomData.financeroom,\n        };\n        setRoomNumbers([roomsArray]);\n      }\n    } catch (error) {\n      console.error('Error fetching room data:', error);\n    }\n  }\n\n  async function fetchProductsData() {\n    try {\n      const { data, error } = await supabase\n        .from(\"products\")\n        .select(`\n          *,\n          addons (*),\n          subcategory\n        `);\n  \n      if (error) throw error;\n  \n      const allImages = data.flatMap(product => [product.image, ...product.addons.map(addon => addon.image)]);\n      const uniqueImages = [...new Set(allImages)];\n  \n      const { data: signedUrls, error: signedUrlError } = await supabase.storage\n        .from(\"addon\")\n        .createSignedUrls(uniqueImages, 3600);\n  \n      if (signedUrlError) throw signedUrlError;\n  \n      const urlMap = Object.fromEntries(signedUrls.map(item => [item.path, item.signedUrl]));\n  \n      const processedData = data.map(product => ({\n        ...product,\n        image: urlMap[product.image] || '',\n        addons: product.addons.map(addon => ({\n          ...addon,\n          image: urlMap[addon.image] || ''\n        }))\n      }));\n  \n      setProductData(processedData);\n    } catch (error) {\n      console.error('Error fetching products data:', error);\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  useEffect(() => {\n    fetchRoomData();\n    fetchProductsData();\n  }, []);\n\n  const handleSearch = (event) => {\n    setSearchQuery(event.target.value);\n  };\n\n  const handleSliderChange = (event, newValue) => {\n    setPriceRange(newValue);\n  };\n\n  const handleCategoryChange = (event) => {\n    setSelectedCategory(event.target.value);\n  };\n\n  const toggleFilters = () => {\n    setShowFilters(!showFilters);\n  };\n\n  const filteredProducts = useMemo(() => {\n    return productsData.filter(product => {\n      const matchesSearchQuery = product.title.toLowerCase().includes(searchQuery.toLowerCase());\n      const matchesPriceRange = product.price >= priceRange[0] && product.price <= priceRange[1];\n      const matchesCategory = selectedCategory ? product.category === selectedCategory : true;\n      return matchesSearchQuery && matchesPriceRange && matchesCategory;\n    });\n  }, [productsData, searchQuery, priceRange, selectedCategory]);\n\n  return (\n    <div className=\"App\">\n      <div className=\"search-filter\">\n        {loading ? (\n          <>\n            <Skeleton variant=\"rectangular\" height={40} width=\"80%\" className=\"skeleton-bar\" />\n            <Skeleton variant=\"rectangular\" height={40} width=\"80%\" className=\"skeleton-slider\" />\n          </>\n        ) : (\n          <>\n            <input\n              type=\"text\"\n              placeholder=\"Search products...\"\n              value={searchQuery}\n              onChange={handleSearch}\n              className=\"search-bar\"\n            />\n            <Slider\n              value={priceRange}\n              onChange={handleSliderChange}\n              valueLabelDisplay=\"auto\"\n              min={1000}\n              max={12000}\n              className=\"price-slider\"\n            />\n          </>\n        )}\n      </div>\n\n      <div className=\"products-grid\">\n        {loading ? (\n          Array.from({ length: 4 }).map((_, index) => (\n            <div key={index} className=\"card-skeleton-container\">\n              <Skeleton variant=\"rectangular\" height={150} width=\"100%\" className=\"skeleton-card-image\" />\n              <Skeleton variant=\"text\" width=\"60%\" height={20} style={{ margin: '10px 0' }} />\n              <Skeleton variant=\"text\" width=\"80%\" height={20} style={{ margin: '5px 0' }} />\n              <Skeleton variant=\"text\" width=\"50%\" height={20} style={{ margin: '5px 0' }} />\n            </div>\n          ))\n        ) : (\n          categories.map((category) => {\n            const categoryProducts = filteredProducts.filter(product => product.category === category);\n            if (categoryProducts.length === 0) return null;\n\n            const subcategories = [...new Set(categoryProducts.map(product => product.subcategory))];\n\n            return (\n              <div key={category} className=\"category-section\">\n                <h2>{category}</h2>\n                {subcategories.map((subcategory) => {\n                  const subcategoryProducts = categoryProducts.filter(product => product.subcategory === subcategory);\n                  return (\n                    <div key={subcategory} className=\"subcategory-section\">\n                      <h3>{subcategory}</h3>\n                      {subcategoryProducts.map((product) => (\n                        <div key={product.id}>\n                          <Card\n                            title={product.title}\n                            price={product.price}\n                            details={product.details}\n                            addOns={product.addons}\n                            image={product.image}\n                            initialMinimized={product.initialMinimized}\n                            roomData={roomNumbers[0]}\n                          />\n                        </div>\n                      ))}\n                    </div>\n                  );\n                })}\n              </div>\n            );\n          })\n        )}\n      </div>\n    </div>\n  );\n};\n\n  return (\n    <div className=\"App\">\n      <div className=\"search-filter\">\n        {loading ? (\n          <>\n            <Skeleton variant=\"rectangular\" height={40} width=\"80%\" className=\"skeleton-bar\" />\n            <Skeleton variant=\"rectangular\" height={40} width=\"80%\" className=\"skeleton-slider\" />\n          </>\n        ) : (\n          <>\n            <input\n              type=\"text\"\n              placeholder=\"Search products...\"\n              value={searchQuery}\n              onChange={handleSearch}\n              className=\"search-bar\"\n            />\n            <Slider\n              value={priceRange}\n              onChange={handleSliderChange}\n              valueLabelDisplay=\"auto\"\n              min={1000}\n              max={12000}\n              className=\"price-slider\"\n            />\n          </>\n        )}\n      </div>\n\n      <div className=\"products-grid\">\n        {loading ? (\n          Array.from({ length: 4 }).map((_, index) => (\n            <div key={index} className=\"card-skeleton-container\">\n              <Skeleton variant=\"rectangular\" height={150} width=\"100%\" className=\"skeleton-card-image\" />\n              <Skeleton variant=\"text\" width=\"60%\" height={20} style={{ margin: '10px 0' }} />\n              <Skeleton variant=\"text\" width=\"80%\" height={20} style={{ margin: '5px 0' }} />\n              <Skeleton variant=\"text\" width=\"50%\" height={20} style={{ margin: '5px 0' }} />\n            </div>\n          ))\n        ) : (\n          categories.map((category) => {\n            const categoryProducts = filteredProducts.filter(product => product.category === category);\n            if (categoryProducts.length === 0) return null;\n\n            const subcategories = [...new Set(categoryProducts.map(product => product.subcategory))];\n\n            return (\n              <div key={category} className=\"category-section\">\n                <h2>{category}</h2>\n                {subcategories.map((subcategory) => {\n                  const subcategoryProducts = categoryProducts.filter(product => product.subcategory === subcategory);\n                  return (\n                    <div key={subcategory} className=\"subcategory-section\">\n                      <h3>{subcategory}</h3>\n                      {subcategoryProducts.map((product) => (\n                        <div key={product.id}>\n                          <Card\n                            title={product.title}\n                            price={product.price}\n                            details={product.details}\n                            addOns={product.addons}\n                            image={product.image}\n                            initialMinimized={product.initialMinimized}\n                            roomData={roomNumbers[0]}\n                          />\n                        </div>\n                      ))}\n                    </div>\n                  );\n                })}\n              </div>\n            );\n          })\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}