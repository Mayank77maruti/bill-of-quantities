{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\jojo 1\\\\bill-of-quantities\\\\src\\\\boq.js\",\n  _s2 = $RefreshSig$();\n// import React, { useState, useMemo, useEffect } from 'react';\n// import './boq.css';\n// import { Slider, Skeleton } from '@mui/material';\n// import { supabase } from './supabase';\n\n// const Card = ({ title, price, image, details, addOns, initialMinimized = false, roomData }) => {\n//   const [selectedAddOns, setSelectedAddOns] = useState({});\n//   const [isMinimized, setIsMinimized] = useState(initialMinimized);\n//   const basePrice = price;\n\n//   const handleAddOnChange = (addOn, isChecked) => {\n//     setSelectedAddOns((prevSelectedAddOns) => ({\n//       ...prevSelectedAddOns,\n//       [addOn.name]: isChecked ? addOn.price : 0,\n//     }));\n//   };\n\n//   const calculateTotalPrice = useMemo(() => {\n//     return Object.values(selectedAddOns).reduce((total, addOnPrice) => total + addOnPrice, basePrice);\n//   }, [selectedAddOns, basePrice]);\n\n//   const toggleMinimize = () => setIsMinimized((prev) => !prev);\n\n//   if (isMinimized) {\n//     return (\n//       <div className=\"minimized-card\" onClick={toggleMinimize}>\n//         <span>{title}</span>\n//         <div className=\"info\">\n//           <p>Base Price: ₹{basePrice}</p>\n//           <p>Total Price: ₹{calculateTotalPrice}</p>\n//         </div>\n//         <button className=\"start-button\">Start</button>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div className=\"card-container\">\n//       <CardSection className=\"card-image\">\n//         <img src={image} alt={title} className=\"image\" />\n//       </CardSection>\n\n//       <CardSection className=\"card-features\">\n//         <h3>{title}</h3>\n//         <p>{details}</p>\n//         {roomData && (\n//           <div className=\"room-info\">\n//             <p>Room Data:</p>\n//             <ul>\n//               {Object.entries(roomData).map(([key, value]) => (\n//                 <li key={key}>{`${key}: ${value}`}</li>\n//               ))}\n//             </ul>\n//           </div>\n//         )}\n//       </CardSection>\n\n//       <CardSection className=\"card-add-ons\">\n//         <h3>ADD ON</h3>\n//         <ul>\n//           {addOns.map((addOn, index) => (\n//             <li key={index}>\n//               <label>\n//                 <input\n//                   type=\"checkbox\"\n//                   onChange={(e) => handleAddOnChange(addOn, e.target.checked)}\n//                 />\n//                 {addOn.name} (+₹{addOn.price})\n//               </label>\n//             </li>\n//           ))}\n//         </ul>\n//       </CardSection>\n\n//       <CardSection className=\"card-summary\">\n//         <h4>Summary</h4>\n//         <p>Base Price: ₹{basePrice}</p>\n//         <p>Add-Ons: ₹{Object.values(selectedAddOns).reduce((total, price) => total + price, 0)}</p>\n//         <p>Total Price: ₹{calculateTotalPrice}</p>\n//         <button className=\"done-button\" onClick={toggleMinimize}>Done</button>\n//       </CardSection>\n//     </div>\n//   );\n// };\n\n// const CardSection = ({ className, children }) => {\n//   return <div className={`card ${className}`}>{children}</div>;\n// };\n\n// const App = () => {\n//   const [searchQuery, setSearchQuery] = useState('');\n//   const [priceRange, setPriceRange] = useState([1000, 12000]);\n//   const [productsData, setProductData] = useState([]);\n//   const categories = [\n//     'Furniture', \n//     'Civil / Plumbing', \n//     'Lighting', \n//     'Electrical', \n//     'Partitions- door / windows / ceilings',\n//     'Paint', \n//     'HVAC', \n//     'Smart Solutions', \n//     'Flooring', \n//     'Accessories'\n//   ];\n//   const [loading, setLoading] = useState(true);\n//   const [roomNumbers, setRoomNumbers] = useState([]);\n\n//   async function fetchRoomData() {\n//     try {\n//       const { data, error } = await supabase\n//         .from('areas')\n//         .select()\n//         .order('created_at', { ascending: false })\n//         .limit(1);\n\n//       if (error) throw error;\n\n//       if (data && data.length > 0) {\n//         const latestRoomData = data[0];\n//         const roomsArray = {\n//           linear: latestRoomData.linear,\n//           ltype: latestRoomData.ltype,\n//           md: latestRoomData.md,\n//           manager: latestRoomData.manager,\n//           small: latestRoomData.small,\n//           ups: latestRoomData.ups,\n//           bms: latestRoomData.bms,\n//           server: latestRoomData.server,\n//           reception: latestRoomData.reception,\n//           lounge: latestRoomData.lounge,\n//           sales: latestRoomData.sales,\n//           phonebooth: latestRoomData.phonebooth,\n//           discussionroom: latestRoomData.discussionroom,\n//           interviewroom: latestRoomData.interviewroom,\n//           conferenceroom: latestRoomData.conferenceroom,\n//           boardroom: latestRoomData.boardroom,\n//           meetingroom: latestRoomData.meetingroom,\n//           meetingroomlarge: latestRoomData.meetingroomlarge,\n//           hrroom: latestRoomData.hrroom,\n//           financeroom: latestRoomData.financeroom,\n//         };\n//         setRoomNumbers([roomsArray]);\n//       }\n//     } catch (error) {\n//       console.error('Error fetching room data:', error);\n//     }\n//   }\n\n//   async function fetchProductsData() {\n//     try {\n//       const { data, error } = await supabase\n//         .from(\"products\")\n//         .select(`\n//           *,\n//           addons (*)\n//         `);\n\n//       if (error) throw error;\n\n//       const allImages = data.flatMap(product => [product.image, ...product.addons.map(addon => addon.image)]);\n//       const uniqueImages = [...new Set(allImages)];\n\n//       const { data: signedUrls, error: signedUrlError } = await supabase.storage\n//         .from(\"addon\")\n//         .createSignedUrls(uniqueImages, 3600);\n\n//       if (signedUrlError) throw signedUrlError;\n\n//       const urlMap = Object.fromEntries(signedUrls.map(item => [item.path, item.signedUrl]));\n\n//       const processedData = data.map(product => ({\n//         ...product,\n//         image: urlMap[product.image] || '',\n//         addons: product.addons.map(addon => ({\n//           ...addon,\n//           image: urlMap[addon.image] || ''\n//         }))\n//       }));\n\n//       setProductData(processedData);\n//     } catch (error) {\n//       console.error('Error fetching products data:', error);\n//     } finally {\n//       setLoading(false);\n//     }\n//   }\n\n//   useEffect(() => {\n//     Promise.all([fetchRoomData(), fetchProductsData()]);\n//   }, []);\n\n//   const handleSearch = (event) => {\n//     setSearchQuery(event.target.value.toLowerCase());\n//   };\n\n//   const handleSliderChange = (event, newValue) => {\n//     setPriceRange(newValue);\n//   };\n\n//   const filteredProducts = useMemo(() => {\n//     return productsData.filter((product) => {\n//       const matchesSearch = product.title.toLowerCase().includes(searchQuery) ||\n//                             product.details.toLowerCase().includes(searchQuery);\n//       const matchesPrice = product.price >= priceRange[0] && product.price <= priceRange[1];\n//       return matchesSearch && matchesPrice;\n//     });\n//   }, [productsData, searchQuery, priceRange]);\n\n//   return (\n//     <div className=\"App\">\n//       <div className=\"search-filter\">\n//         {loading ? (\n//           <>\n//             <Skeleton variant=\"rectangular\" height={40} width=\"80%\" className=\"skeleton-bar\" />\n//             <Skeleton variant=\"rectangular\" height={40} width=\"80%\" className=\"skeleton-slider\" />\n//           </>\n//         ) : (\n//           <>\n//             <input\n//               type=\"text\"\n//               placeholder=\"Search products...\"\n//               value={searchQuery}\n//               onChange={handleSearch}\n//               className=\"search-bar\"\n//             />\n//             <Slider\n//               value={priceRange}\n//               onChange={handleSliderChange}\n//               valueLabelDisplay=\"auto\"\n//               min={1000}\n//               max={12000}\n//               className=\"price-slider\"\n//             />\n//           </>\n//         )}\n//       </div>\n\n//       <div className=\"products-grid\">\n//         {loading ? (\n//           Array.from({ length: 4 }).map((_, index) => (\n//             <div key={index} className=\"card-skeleton-container\">\n//               <Skeleton variant=\"rectangular\" height={150} width=\"100%\" className=\"skeleton-card-image\" />\n//               <Skeleton variant=\"text\" width=\"60%\" height={20} style={{ margin: '10px 0' }} />\n//               <Skeleton variant=\"text\" width=\"80%\" height={20} style={{ margin: '5px 0' }} />\n//               <Skeleton variant=\"text\" width=\"50%\" height={20} style={{ margin: '5px 0' }} />\n//             </div>\n//           ))\n//         ) : (\n//           categories.map((category) => {\n//             const categoryProducts = filteredProducts.filter(product => product.category === category);\n//             if (categoryProducts.length === 0) return null;\n\n//             return (\n//               <div key={category} className=\"category-section\">\n//                 <h2>{category}</h2>\n//                 {categoryProducts.map((product) => (\n//                   <div key={product.id}>\n//                     <Card\n//                       title={product.title}\n//                       price={product.price}\n//                       details={product.details}\n//                       addOns={product.addons}\n//                       image={product.image}\n//                       initialMinimized={product.initialMinimized}\n//                       // roomData={roomNumbers[0]}\n//                     />\n//                   </div>\n//                 ))}\n//               </div>\n//             );\n//           })\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default App; \n\nimport React, { useState, useMemo, useEffect } from 'react';\nimport { Slider, Skeleton, Select, MenuItem, Button } from '@mui/material';\nimport { supabase } from './supabase';\nimport './boq.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Card = ({\n  title,\n  price,\n  image,\n  details,\n  addOns,\n  initialMinimized = false,\n  roomData\n}) => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [selectedAddOns, setSelectedAddOns] = useState({});\n  const [isMinimized, setIsMinimized] = useState(initialMinimized);\n  const basePrice = price;\n  const handleAddOnChange = (addOn, isChecked) => {\n    setSelectedAddOns(prevSelectedAddOns => ({\n      ...prevSelectedAddOns,\n      [addOn.name]: isChecked ? addOn.price : 0\n    }));\n  };\n  const CardSection = ({\n    className,\n    children\n  }) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `card ${className}`,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 10\n    }, this);\n  };\n  const App = () => {\n    _s();\n    const [searchQuery, setSearchQuery] = useState('');\n    const [priceRange, setPriceRange] = useState([1000, 12000]);\n    const [productsData, setProductData] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [roomNumbers, setRoomNumbers] = useState([]);\n    const [showFilters, setShowFilters] = useState(false);\n    const [selectedCategory, setSelectedCategory] = useState('');\n    const categories = ['Furniture', 'Civil / Plumbing', 'Lighting', 'Electrical', 'Partitions- door / windows / ceilings', 'Paint', 'HVAC', 'Smart Solutions', 'Flooring', 'Accessories'];\n    async function fetchRoomData() {\n      try {\n        const {\n          data,\n          error\n        } = await supabase.from('areas').select().order('created_at', {\n          ascending: false\n        }).limit(1);\n        if (error) throw error;\n        if (data && data.length > 0) {\n          const latestRoomData = data[0];\n          setRoomNumbers([latestRoomData]);\n        }\n      } catch (error) {\n        console.error('Error fetching room data:', error);\n      }\n    }\n    async function fetchProductsData() {\n      try {\n        const {\n          data,\n          error\n        } = await supabase.from(\"products\").select(`\n          *,\n          addons (*)\n        `);\n        if (error) throw error;\n        setProductData(data);\n      } catch (error) {\n        console.error('Error fetching products data:', error);\n      } finally {\n        setLoading(false);\n      }\n    }\n    useEffect(() => {\n      Promise.all([fetchRoomData(), fetchProductsData()]);\n    }, []);\n    const handleSearch = event => {\n      setSearchQuery(event.target.value.toLowerCase());\n    };\n    const handleSliderChange = (event, newValue) => {\n      setPriceRange(newValue);\n    };\n    const handleCategoryChange = event => {\n      setSelectedCategory(event.target.value);\n    };\n    const toggleFilters = () => {\n      setShowFilters(!showFilters);\n    };\n    const filteredProducts = useMemo(() => {\n      return productsData.filter(product => {\n        const matchesSearch = product.title.toLowerCase().includes(searchQuery) || product.details.toLowerCase().includes(searchQuery);\n        const matchesPrice = product.price >= priceRange[0] && product.price <= priceRange[1];\n        const matchesCategory = selectedCategory === '' || product.category === selectedCategory;\n        return matchesSearch && matchesPrice && matchesCategory;\n      });\n    }, [productsData, searchQuery, priceRange, selectedCategory]);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-filter\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search products...\",\n          value: searchQuery,\n          onChange: handleSearch,\n          className: \"search-bar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: toggleFilters,\n          variant: \"contained\",\n          color: \"primary\",\n          children: showFilters ? 'Hide Filters' : 'Show Filters'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 9\n        }, this), showFilters && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filters\",\n          children: [/*#__PURE__*/_jsxDEV(Slider, {\n            value: priceRange,\n            onChange: handleSliderChange,\n            valueLabelDisplay: \"auto\",\n            min: 1000,\n            max: 12000,\n            className: \"price-slider\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: selectedCategory,\n            onChange: handleCategoryChange,\n            displayEmpty: true,\n            className: \"category-select\",\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"\",\n              children: \"All Categories\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 422,\n              columnNumber: 15\n            }, this), categories.map(category => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: category,\n              children: category\n            }, category, false, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"products-grid\",\n        children: loading ? Array.from({\n          length: 4\n        }).map((_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-skeleton-container\",\n          children: [/*#__PURE__*/_jsxDEV(Skeleton, {\n            variant: \"rectangular\",\n            height: 150,\n            width: \"100%\",\n            className: \"skeleton-card-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n            variant: \"text\",\n            width: \"60%\",\n            height: 20,\n            style: {\n              margin: '10px 0'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n            variant: \"text\",\n            width: \"80%\",\n            height: 20,\n            style: {\n              margin: '5px 0'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 437,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n            variant: \"text\",\n            width: \"50%\",\n            height: 20,\n            style: {\n              margin: '5px 0'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 438,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 13\n        }, this)) : categories.map(category => {\n          const categoryProducts = filteredProducts.filter(product => product.category === category);\n          if (categoryProducts.length === 0) return null;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"category-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: category\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 448,\n              columnNumber: 17\n            }, this), categoryProducts.map(product => /*#__PURE__*/_jsxDEV(Card, {\n              title: product.title,\n              price: product.price,\n              details: product.details,\n              addOns: product.addons,\n              image: product.image,\n              initialMinimized: product.initialMinimized,\n              roomData: roomNumbers[0]\n            }, product.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 450,\n              columnNumber: 19\n            }, this))]\n          }, category, true, {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 5\n    }, this);\n  };\n  _s(App, \"VBT20cW6ID4Pa2q+cD+3KhcrFA8=\");\n};\n_s2(Card, \"4Po/9vzoWBeeRFpeOJhbuZfnwvs=\");\n_c = Card;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","useState","useMemo","useEffect","Slider","Skeleton","Select","MenuItem","Button","supabase","jsxDEV","_jsxDEV","Card","title","price","image","details","addOns","initialMinimized","roomData","_s2","_s","$RefreshSig$","selectedAddOns","setSelectedAddOns","isMinimized","setIsMinimized","basePrice","handleAddOnChange","addOn","isChecked","prevSelectedAddOns","name","CardSection","className","children","fileName","_jsxFileName","lineNumber","columnNumber","App","searchQuery","setSearchQuery","priceRange","setPriceRange","productsData","setProductData","loading","setLoading","roomNumbers","setRoomNumbers","showFilters","setShowFilters","selectedCategory","setSelectedCategory","categories","fetchRoomData","data","error","from","select","order","ascending","limit","length","latestRoomData","console","fetchProductsData","Promise","all","handleSearch","event","target","value","toLowerCase","handleSliderChange","newValue","handleCategoryChange","toggleFilters","filteredProducts","filter","product","matchesSearch","includes","matchesPrice","matchesCategory","category","type","placeholder","onChange","onClick","variant","color","valueLabelDisplay","min","max","displayEmpty","map","Array","_","index","height","width","style","margin","categoryProducts","addons","id","_c","$RefreshReg$"],"sources":["C:/Users/hp/Desktop/jojo 1/bill-of-quantities/src/boq.js"],"sourcesContent":["// import React, { useState, useMemo, useEffect } from 'react';\n// import './boq.css';\n// import { Slider, Skeleton } from '@mui/material';\n// import { supabase } from './supabase';\n\n// const Card = ({ title, price, image, details, addOns, initialMinimized = false, roomData }) => {\n//   const [selectedAddOns, setSelectedAddOns] = useState({});\n//   const [isMinimized, setIsMinimized] = useState(initialMinimized);\n//   const basePrice = price;\n\n//   const handleAddOnChange = (addOn, isChecked) => {\n//     setSelectedAddOns((prevSelectedAddOns) => ({\n//       ...prevSelectedAddOns,\n//       [addOn.name]: isChecked ? addOn.price : 0,\n//     }));\n//   };\n\n//   const calculateTotalPrice = useMemo(() => {\n//     return Object.values(selectedAddOns).reduce((total, addOnPrice) => total + addOnPrice, basePrice);\n//   }, [selectedAddOns, basePrice]);\n\n//   const toggleMinimize = () => setIsMinimized((prev) => !prev);\n\n//   if (isMinimized) {\n//     return (\n//       <div className=\"minimized-card\" onClick={toggleMinimize}>\n//         <span>{title}</span>\n//         <div className=\"info\">\n//           <p>Base Price: ₹{basePrice}</p>\n//           <p>Total Price: ₹{calculateTotalPrice}</p>\n//         </div>\n//         <button className=\"start-button\">Start</button>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div className=\"card-container\">\n//       <CardSection className=\"card-image\">\n//         <img src={image} alt={title} className=\"image\" />\n//       </CardSection>\n\n//       <CardSection className=\"card-features\">\n//         <h3>{title}</h3>\n//         <p>{details}</p>\n//         {roomData && (\n//           <div className=\"room-info\">\n//             <p>Room Data:</p>\n//             <ul>\n//               {Object.entries(roomData).map(([key, value]) => (\n//                 <li key={key}>{`${key}: ${value}`}</li>\n//               ))}\n//             </ul>\n//           </div>\n//         )}\n//       </CardSection>\n\n//       <CardSection className=\"card-add-ons\">\n//         <h3>ADD ON</h3>\n//         <ul>\n//           {addOns.map((addOn, index) => (\n//             <li key={index}>\n//               <label>\n//                 <input\n//                   type=\"checkbox\"\n//                   onChange={(e) => handleAddOnChange(addOn, e.target.checked)}\n//                 />\n//                 {addOn.name} (+₹{addOn.price})\n//               </label>\n//             </li>\n//           ))}\n//         </ul>\n//       </CardSection>\n\n//       <CardSection className=\"card-summary\">\n//         <h4>Summary</h4>\n//         <p>Base Price: ₹{basePrice}</p>\n//         <p>Add-Ons: ₹{Object.values(selectedAddOns).reduce((total, price) => total + price, 0)}</p>\n//         <p>Total Price: ₹{calculateTotalPrice}</p>\n//         <button className=\"done-button\" onClick={toggleMinimize}>Done</button>\n//       </CardSection>\n//     </div>\n//   );\n// };\n\n// const CardSection = ({ className, children }) => {\n//   return <div className={`card ${className}`}>{children}</div>;\n// };\n\n// const App = () => {\n//   const [searchQuery, setSearchQuery] = useState('');\n//   const [priceRange, setPriceRange] = useState([1000, 12000]);\n//   const [productsData, setProductData] = useState([]);\n//   const categories = [\n//     'Furniture', \n//     'Civil / Plumbing', \n//     'Lighting', \n//     'Electrical', \n//     'Partitions- door / windows / ceilings',\n//     'Paint', \n//     'HVAC', \n//     'Smart Solutions', \n//     'Flooring', \n//     'Accessories'\n//   ];\n//   const [loading, setLoading] = useState(true);\n//   const [roomNumbers, setRoomNumbers] = useState([]);\n\n//   async function fetchRoomData() {\n//     try {\n//       const { data, error } = await supabase\n//         .from('areas')\n//         .select()\n//         .order('created_at', { ascending: false })\n//         .limit(1);\n  \n//       if (error) throw error;\n  \n//       if (data && data.length > 0) {\n//         const latestRoomData = data[0];\n//         const roomsArray = {\n//           linear: latestRoomData.linear,\n//           ltype: latestRoomData.ltype,\n//           md: latestRoomData.md,\n//           manager: latestRoomData.manager,\n//           small: latestRoomData.small,\n//           ups: latestRoomData.ups,\n//           bms: latestRoomData.bms,\n//           server: latestRoomData.server,\n//           reception: latestRoomData.reception,\n//           lounge: latestRoomData.lounge,\n//           sales: latestRoomData.sales,\n//           phonebooth: latestRoomData.phonebooth,\n//           discussionroom: latestRoomData.discussionroom,\n//           interviewroom: latestRoomData.interviewroom,\n//           conferenceroom: latestRoomData.conferenceroom,\n//           boardroom: latestRoomData.boardroom,\n//           meetingroom: latestRoomData.meetingroom,\n//           meetingroomlarge: latestRoomData.meetingroomlarge,\n//           hrroom: latestRoomData.hrroom,\n//           financeroom: latestRoomData.financeroom,\n//         };\n//         setRoomNumbers([roomsArray]);\n//       }\n//     } catch (error) {\n//       console.error('Error fetching room data:', error);\n//     }\n//   }\n\n//   async function fetchProductsData() {\n//     try {\n//       const { data, error } = await supabase\n//         .from(\"products\")\n//         .select(`\n//           *,\n//           addons (*)\n//         `);\n\n//       if (error) throw error;\n\n//       const allImages = data.flatMap(product => [product.image, ...product.addons.map(addon => addon.image)]);\n//       const uniqueImages = [...new Set(allImages)];\n\n//       const { data: signedUrls, error: signedUrlError } = await supabase.storage\n//         .from(\"addon\")\n//         .createSignedUrls(uniqueImages, 3600);\n\n//       if (signedUrlError) throw signedUrlError;\n\n//       const urlMap = Object.fromEntries(signedUrls.map(item => [item.path, item.signedUrl]));\n\n//       const processedData = data.map(product => ({\n//         ...product,\n//         image: urlMap[product.image] || '',\n//         addons: product.addons.map(addon => ({\n//           ...addon,\n//           image: urlMap[addon.image] || ''\n//         }))\n//       }));\n\n//       setProductData(processedData);\n//     } catch (error) {\n//       console.error('Error fetching products data:', error);\n//     } finally {\n//       setLoading(false);\n//     }\n//   }\n\n//   useEffect(() => {\n//     Promise.all([fetchRoomData(), fetchProductsData()]);\n//   }, []);\n\n//   const handleSearch = (event) => {\n//     setSearchQuery(event.target.value.toLowerCase());\n//   };\n\n//   const handleSliderChange = (event, newValue) => {\n//     setPriceRange(newValue);\n//   };\n\n//   const filteredProducts = useMemo(() => {\n//     return productsData.filter((product) => {\n//       const matchesSearch = product.title.toLowerCase().includes(searchQuery) ||\n//                             product.details.toLowerCase().includes(searchQuery);\n//       const matchesPrice = product.price >= priceRange[0] && product.price <= priceRange[1];\n//       return matchesSearch && matchesPrice;\n//     });\n//   }, [productsData, searchQuery, priceRange]);\n\n//   return (\n//     <div className=\"App\">\n//       <div className=\"search-filter\">\n//         {loading ? (\n//           <>\n//             <Skeleton variant=\"rectangular\" height={40} width=\"80%\" className=\"skeleton-bar\" />\n//             <Skeleton variant=\"rectangular\" height={40} width=\"80%\" className=\"skeleton-slider\" />\n//           </>\n//         ) : (\n//           <>\n//             <input\n//               type=\"text\"\n//               placeholder=\"Search products...\"\n//               value={searchQuery}\n//               onChange={handleSearch}\n//               className=\"search-bar\"\n//             />\n//             <Slider\n//               value={priceRange}\n//               onChange={handleSliderChange}\n//               valueLabelDisplay=\"auto\"\n//               min={1000}\n//               max={12000}\n//               className=\"price-slider\"\n//             />\n//           </>\n//         )}\n//       </div>\n\n//       <div className=\"products-grid\">\n//         {loading ? (\n//           Array.from({ length: 4 }).map((_, index) => (\n//             <div key={index} className=\"card-skeleton-container\">\n//               <Skeleton variant=\"rectangular\" height={150} width=\"100%\" className=\"skeleton-card-image\" />\n//               <Skeleton variant=\"text\" width=\"60%\" height={20} style={{ margin: '10px 0' }} />\n//               <Skeleton variant=\"text\" width=\"80%\" height={20} style={{ margin: '5px 0' }} />\n//               <Skeleton variant=\"text\" width=\"50%\" height={20} style={{ margin: '5px 0' }} />\n//             </div>\n//           ))\n//         ) : (\n//           categories.map((category) => {\n//             const categoryProducts = filteredProducts.filter(product => product.category === category);\n//             if (categoryProducts.length === 0) return null;\n\n//             return (\n//               <div key={category} className=\"category-section\">\n//                 <h2>{category}</h2>\n//                 {categoryProducts.map((product) => (\n//                   <div key={product.id}>\n//                     <Card\n//                       title={product.title}\n//                       price={product.price}\n//                       details={product.details}\n//                       addOns={product.addons}\n//                       image={product.image}\n//                       initialMinimized={product.initialMinimized}\n//                       // roomData={roomNumbers[0]}\n//                     />\n//                   </div>\n//                 ))}\n//               </div>\n//             );\n//           })\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default App; \n\nimport React, { useState, useMemo, useEffect } from 'react';\nimport { Slider, Skeleton, Select, MenuItem, Button } from '@mui/material';\nimport { supabase } from './supabase';\nimport './boq.css';\n\nconst Card = ({ title, price, image, details, addOns, initialMinimized = false, roomData }) => {\n  const [selectedAddOns, setSelectedAddOns] = useState({});\n  const [isMinimized, setIsMinimized] = useState(initialMinimized);\n  const basePrice = price;\n\n  const handleAddOnChange = (addOn, isChecked) => {\n    setSelectedAddOns((prevSelectedAddOns) => ({\n      ...prevSelectedAddOns,\n      [addOn.name]: isChecked ? addOn.price : 0,\n    }));\n  };\n\n\nconst CardSection = ({ className, children }) => {\n  return <div className={`card ${className}`}>{children}</div>;\n};\n\nconst App = () => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [priceRange, setPriceRange] = useState([1000, 12000]);\n  const [productsData, setProductData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [roomNumbers, setRoomNumbers] = useState([]);\n  const [showFilters, setShowFilters] = useState(false);\n  const [selectedCategory, setSelectedCategory] = useState('');\n\n  const categories = [\n    'Furniture', \n    'Civil / Plumbing', \n    'Lighting', \n    'Electrical', \n    'Partitions- door / windows / ceilings',\n    'Paint', \n    'HVAC', \n    'Smart Solutions', \n    'Flooring', \n    'Accessories'\n  ];\n\n  async function fetchRoomData() {\n    try {\n      const { data, error } = await supabase\n        .from('areas')\n        .select()\n        .order('created_at', { ascending: false })\n        .limit(1);\n\n      if (error) throw error;\n\n      if (data && data.length > 0) {\n        const latestRoomData = data[0];\n        setRoomNumbers([latestRoomData]);\n      }\n    } catch (error) {\n      console.error('Error fetching room data:', error);\n    }\n  }\n\n  async function fetchProductsData() {\n    try {\n      const { data, error } = await supabase\n        .from(\"products\")\n        .select(`\n          *,\n          addons (*)\n        `);\n\n      if (error) throw error;\n\n      setProductData(data);\n    } catch (error) {\n      console.error('Error fetching products data:', error);\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  useEffect(() => {\n    Promise.all([fetchRoomData(), fetchProductsData()]);\n  }, []);\n\n  const handleSearch = (event) => {\n    setSearchQuery(event.target.value.toLowerCase());\n  };\n\n  const handleSliderChange = (event, newValue) => {\n    setPriceRange(newValue);\n  };\n\n  const handleCategoryChange = (event) => {\n    setSelectedCategory(event.target.value);\n  };\n\n  const toggleFilters = () => {\n    setShowFilters(!showFilters);\n  };\n\n  const filteredProducts = useMemo(() => {\n    return productsData.filter((product) => {\n      const matchesSearch = product.title.toLowerCase().includes(searchQuery) ||\n                            product.details.toLowerCase().includes(searchQuery);\n      const matchesPrice = product.price >= priceRange[0] && product.price <= priceRange[1];\n      const matchesCategory = selectedCategory === '' || product.category === selectedCategory;\n      return matchesSearch && matchesPrice && matchesCategory;\n    });\n  }, [productsData, searchQuery, priceRange, selectedCategory]);\n\n  return (\n    <div className=\"App\">\n      <div className=\"search-filter\">\n        <input\n          type=\"text\"\n          placeholder=\"Search products...\"\n          value={searchQuery}\n          onChange={handleSearch}\n          className=\"search-bar\"\n        />\n        <Button onClick={toggleFilters} variant=\"contained\" color=\"primary\">\n          {showFilters ? 'Hide Filters' : 'Show Filters'}\n        </Button>\n        {showFilters && (\n          <div className=\"filters\">\n            <Slider\n              value={priceRange}\n              onChange={handleSliderChange}\n              valueLabelDisplay=\"auto\"\n              min={1000}\n              max={12000}\n              className=\"price-slider\"\n            />\n            <Select\n              value={selectedCategory}\n              onChange={handleCategoryChange}\n              displayEmpty\n              className=\"category-select\"\n            >\n              <MenuItem value=\"\">All Categories</MenuItem>\n              {categories.map((category) => (\n                <MenuItem key={category} value={category}>{category}</MenuItem>\n              ))}\n            </Select>\n          </div>\n        )}\n      </div>\n\n      <div className=\"products-grid\">\n        {loading ? (\n          Array.from({ length: 4 }).map((_, index) => (\n            <div key={index} className=\"card-skeleton-container\">\n              <Skeleton variant=\"rectangular\" height={150} width=\"100%\" className=\"skeleton-card-image\" />\n              <Skeleton variant=\"text\" width=\"60%\" height={20} style={{ margin: '10px 0' }} />\n              <Skeleton variant=\"text\" width=\"80%\" height={20} style={{ margin: '5px 0' }} />\n              <Skeleton variant=\"text\" width=\"50%\" height={20} style={{ margin: '5px 0' }} />\n            </div>\n          ))\n        ) : (\n          categories.map((category) => {\n            const categoryProducts = filteredProducts.filter(product => product.category === category);\n            if (categoryProducts.length === 0) return null;\n\n            return (\n              <div key={category} className=\"category-section\">\n                <h2>{category}</h2>\n                {categoryProducts.map((product) => (\n                  <Card\n                    key={product.id}\n                    title={product.title}\n                    price={product.price}\n                    details={product.details}\n                    addOns={product.addons}\n                    image={product.image}\n                    initialMinimized={product.initialMinimized}\n                    roomData={roomNumbers[0]}\n                  />\n                ))}\n              </div>\n            );\n          })\n        )}\n      </div>\n    </div>\n  );\n}\n};\n\nexport default App;\n"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}