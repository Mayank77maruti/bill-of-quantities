{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\jojo 1\\\\bill-of-quantities\\\\src\\\\boq.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// import React, { useState, useMemo, useEffect } from 'react';\n// import './boq.css';\n// import { Slider, Skeleton } from '@mui/material';\n// import { supabase } from './supabase';\n\n// const Card = ({ title, price, image, details, addOns, initialMinimized = false, roomData }) => {\n//   const [selectedAddOns, setSelectedAddOns] = useState({});\n//   const [isMinimized, setIsMinimized] = useState(initialMinimized);\n//   const basePrice = price;\n\n//   const handleAddOnChange = (addOn, isChecked) => {\n//     setSelectedAddOns((prevSelectedAddOns) => ({\n//       ...prevSelectedAddOns,\n//       [addOn.name]: isChecked ? addOn.price : 0,\n//     }));\n//   };\n\n//   const calculateTotalPrice = useMemo(() => {\n//     return Object.values(selectedAddOns).reduce((total, addOnPrice) => total + addOnPrice, basePrice);\n//   }, [selectedAddOns, basePrice]);\n\n//   const toggleMinimize = () => setIsMinimized((prev) => !prev);\n\n//   if (isMinimized) {\n//     return (\n//       <div className=\"minimized-card\" onClick={toggleMinimize}>\n//         <span>{title}</span>\n//         <div className=\"info\">\n//           <p>Base Price: ₹{basePrice}</p>\n//           <p>Total Price: ₹{calculateTotalPrice}</p>\n//         </div>\n//         <button className=\"start-button\">Start</button>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div className=\"card-container\">\n//       <CardSection className=\"card-image\">\n//         <img src={image} alt={title} className=\"image\" />\n//       </CardSection>\n\n//       <CardSection className=\"card-features\">\n//         <h3>{title}</h3>\n//         <p>{details}</p>\n//         {roomData && (\n//           <div className=\"room-info\">\n//             <p>Room Data:</p>\n//             <ul>\n//               {Object.entries(roomData).map(([key, value]) => (\n//                 <li key={key}>{`${key}: ${value}`}</li>\n//               ))}\n//             </ul>\n//           </div>\n//         )}\n//       </CardSection>\n\n//       <CardSection className=\"card-add-ons\">\n//         <h3>ADD ON</h3>\n//         <ul>\n//           {addOns.map((addOn, index) => (\n//             <li key={index}>\n//               <label>\n//                 <input\n//                   type=\"checkbox\"\n//                   onChange={(e) => handleAddOnChange(addOn, e.target.checked)}\n//                 />\n//                 {addOn.name} (+₹{addOn.price})\n//               </label>\n//             </li>\n//           ))}\n//         </ul>\n//       </CardSection>\n\n//       <CardSection className=\"card-summary\">\n//         <h4>Summary</h4>\n//         <p>Base Price: ₹{basePrice}</p>\n//         <p>Add-Ons: ₹{Object.values(selectedAddOns).reduce((total, price) => total + price, 0)}</p>\n//         <p>Total Price: ₹{calculateTotalPrice}</p>\n//         <button className=\"done-button\" onClick={toggleMinimize}>Done</button>\n//       </CardSection>\n//     </div>\n//   );\n// };\n\n// const CardSection = ({ className, children }) => {\n//   return <div className={`card ${className}`}>{children}</div>;\n// };\n\n// const App = () => {\n//   const [searchQuery, setSearchQuery] = useState('');\n//   const [priceRange, setPriceRange] = useState([1000, 12000]);\n//   const [productsData, setProductData] = useState([]);\n//   const categories = [\n//     'Furniture', \n//     'Civil / Plumbing', \n//     'Lighting', \n//     'Electrical', \n//     'Partitions- door / windows / ceilings',\n//     'Paint', \n//     'HVAC', \n//     'Smart Solutions', \n//     'Flooring', \n//     'Accessories'\n//   ];\n//   const [loading, setLoading] = useState(true);\n//   const [roomNumbers, setRoomNumbers] = useState([]);\n\n//   async function fetchRoomData() {\n//     try {\n//       const { data, error } = await supabase\n//         .from('areas')\n//         .select()\n//         .order('created_at', { ascending: false })\n//         .limit(1);\n\n//       if (error) throw error;\n\n//       if (data && data.length > 0) {\n//         const latestRoomData = data[0];\n//         const roomsArray = {\n// linear: latestRoomData.linear,\n// ltype: latestRoomData.ltype,\n// md: latestRoomData.md,\n// manager: latestRoomData.manager,\n// small: latestRoomData.small,\n// ups: latestRoomData.ups,\n// bms: latestRoomData.bms,\n// server: latestRoomData.server,\n// reception: latestRoomData.reception,\n// lounge: latestRoomData.lounge,\n// sales: latestRoomData.sales,\n// phonebooth: latestRoomData.phonebooth,\n// discussionroom: latestRoomData.discussionroom,\n// interviewroom: latestRoomData.interviewroom,\n// conferenceroom: latestRoomData.conferenceroom,\n// boardroom: latestRoomData.boardroom,\n// meetingroom: latestRoomData.meetingroom,\n// meetingroomlarge: latestRoomData.meetingroomlarge,\n// hrroom: latestRoomData.hrroom,\n// financeroom: latestRoomData.financeroom,\n//         };\n//         setRoomNumbers([roomsArray]);\n//       }\n//     } catch (error) {\n//       console.error('Error fetching room data:', error);\n//     }\n//   }\n\n//   async function fetchProductsData() {\n//     try {\n//       const { data, error } = await supabase\n//         .from(\"products\")\n//         .select(`\n//           *,\n//           addons (*)\n//         `);\n\n//       if (error) throw error;\n\n//       const allImages = data.flatMap(product => [product.image, ...product.addons.map(addon => addon.image)]);\n//       const uniqueImages = [...new Set(allImages)];\n\n//       const { data: signedUrls, error: signedUrlError } = await supabase.storage\n//         .from(\"addon\")\n//         .createSignedUrls(uniqueImages, 3600);\n\n//       if (signedUrlError) throw signedUrlError;\n\n//       const urlMap = Object.fromEntries(signedUrls.map(item => [item.path, item.signedUrl]));\n\n//       const processedData = data.map(product => ({\n//         ...product,\n//         image: urlMap[product.image] || '',\n//         addons: product.addons.map(addon => ({\n//           ...addon,\n//           image: urlMap[addon.image] || ''\n//         }))\n//       }));\n\n//       setProductData(processedData);\n//     } catch (error) {\n//       console.error('Error fetching products data:', error);\n//     } finally {\n//       setLoading(false);\n//     }\n//   }\n\n//   useEffect(() => {\n//     Promise.all([fetchRoomData(), fetchProductsData()]);\n//   }, []);\n\n//   const handleSearch = (event) => {\n//     setSearchQuery(event.target.value.toLowerCase());\n//   };\n\n//   const handleSliderChange = (event, newValue) => {\n//     setPriceRange(newValue);\n//   };\n\n//   const filteredProducts = useMemo(() => {\n//     return productsData.filter((product) => {\n//       const matchesSearch = product.title.toLowerCase().includes(searchQuery) ||\n//                             product.details.toLowerCase().includes(searchQuery);\n//       const matchesPrice = product.price >= priceRange[0] && product.price <= priceRange[1];\n//       return matchesSearch && matchesPrice;\n//     });\n//   }, [productsData, searchQuery, priceRange]);\n\n//   return (\n//     <div className=\"App\">\n//       <div className=\"search-filter\">\n//         {loading ? (\n//           <>\n//             <Skeleton variant=\"rectangular\" height={40} width=\"80%\" className=\"skeleton-bar\" />\n//             <Skeleton variant=\"rectangular\" height={40} width=\"80%\" className=\"skeleton-slider\" />\n//           </>\n//         ) : (\n//           <>\n//             <input\n//               type=\"text\"\n//               placeholder=\"Search products...\"\n//               value={searchQuery}\n//               onChange={handleSearch}\n//               className=\"search-bar\"\n//             />\n//             <Slider\n//               value={priceRange}\n//               onChange={handleSliderChange}\n//               valueLabelDisplay=\"auto\"\n//               min={1000}\n//               max={12000}\n//               className=\"price-slider\"\n//             />\n//           </>\n//         )}\n//       </div>\n\n//       <div className=\"products-grid\">\n//         {loading ? (\n//           Array.from({ length: 4 }).map((_, index) => (\n//             <div key={index} className=\"card-skeleton-container\">\n// <Skeleton variant=\"rectangular\" height={150} width=\"100%\" className=\"skeleton-card-image\" />\n// <Skeleton variant=\"text\" width=\"60%\" height={20} style={{ margin: '10px 0' }} />\n// <Skeleton variant=\"text\" width=\"80%\" height={20} style={{ margin: '5px 0' }} />\n// <Skeleton variant=\"text\" width=\"50%\" height={20} style={{ margin: '5px 0' }} />\n//             </div>\n//           ))\n//         ) : (\n//           categories.map((category) => {\n//             const categoryProducts = filteredProducts.filter(product => product.category === category);\n//             if (categoryProducts.length === 0) return null;\n\n//             return (\n//               <div key={category} className=\"category-section\">\n//                 <h2>{category}</h2>\n//                 {categoryProducts.map((product) => (\n//                   <div key={product.id}>\n//                     <Card\n//                       title={product.title}\n//                       price={product.price}\n//                       details={product.details}\n//                       addOns={product.addons}\n//                       image={product.image}\n//                       initialMinimized={product.initialMinimized}\n//                       // roomData={roomNumbers[0]}\n//                     />\n//                   </div>\n//                 ))}\n//               </div>\n//             );\n//           })\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default App; \n\nimport React, { useState, useMemo, useEffect } from 'react';\nimport { Slider, Skeleton, Select, MenuItem, Button } from '@mui/material';\nimport { supabase } from './supabase';\nimport './boq.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Card = ({\n  title,\n  price,\n  image,\n  details,\n  addOns,\n  initialMinimized = false,\n  roomData,\n  quantity\n}) => {\n  _s();\n  const [selectedAddOns, setSelectedAddOns] = useState({});\n  const [isMinimized, setIsMinimized] = useState(initialMinimized);\n  const basePrice = price;\n  const handleAddOnChange = (addOn, isChecked) => {\n    setSelectedAddOns(prevSelectedAddOns => ({\n      ...prevSelectedAddOns,\n      [addOn.name]: isChecked ? addOn.price : 0\n    }));\n  };\n  const calculateTotalPrice = useMemo(() => {\n    return Object.values(selectedAddOns).reduce((total, addOnPrice) => total + addOnPrice, basePrice);\n  }, [selectedAddOns, basePrice]);\n  const toggleMinimize = () => setIsMinimized(prev => !prev);\n  if (isMinimized) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"minimized-card\",\n      onClick: toggleMinimize,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Base Price: \\u20B9\", basePrice]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Total Price: \\u20B9\", calculateTotalPrice]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"start-button\",\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-container\",\n    children: [/*#__PURE__*/_jsxDEV(CardSection, {\n      className: \"card-image\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: image,\n        alt: title,\n        className: \"image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardSection, {\n      className: \"card-features\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: details\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 9\n      }, this), roomData && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"room-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Room Data:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: Object.entries(roomData).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: `${key}: ${value}`\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 11\n      }, this), quantity && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quantity-info\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Quantity: \", quantity]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardSection, {\n      className: \"card-add-ons\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"ADD ON\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: addOns.map((addOn, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              onChange: e => handleAddOnChange(addOn, e.target.checked)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 17\n            }, this), addOn.name, \" (+\\u20B9\", addOn.price, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardSection, {\n      className: \"card-summary\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Base Price: \\u20B9\", basePrice]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Add-Ons: \\u20B9\", Object.values(selectedAddOns).reduce((total, price) => total + price, 0)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Price: \\u20B9\", calculateTotalPrice]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"done-button\",\n        onClick: toggleMinimize,\n        children: \"Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 318,\n    columnNumber: 5\n  }, this);\n};\n_s(Card, \"qqTATfBw1Fel92YP54gb2HBuSko=\");\n_c = Card;\nconst CardSection = ({\n  className,\n  children\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `card ${className}`,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 372,\n    columnNumber: 10\n  }, this);\n};\n_c2 = CardSection;\nconst App = () => {\n  _s2();\n  const [searchQuery, setSearchQuery] = useState('');\n  const [priceRange, setPriceRange] = useState([1000, 12000]);\n  const [productsData, setProductData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [roomNumbers, setRoomNumbers] = useState([]);\n  const [showFilters, setShowFilters] = useState(false);\n  const [selectedCategory, setSelectedCategory] = useState('');\n  const categories = ['Furniture', 'Civil / Plumbing', 'Lighting', 'Electrical', 'Partitions- door / windows / ceilings', 'Paint', 'HVAC', 'Smart Solutions', 'Flooring', 'Accessories'];\n  async function fetchRoomData() {\n    try {\n      const {\n        data,\n        error\n      } = await supabase.from('areas').select().order('created_at', {\n        ascending: false\n      }).limit(1);\n      if (error) throw error;\n      if (data && data.length > 0) {\n        const latestRoomData = data[0];\n        const roomsArray = {\n          linear: latestRoomData.linear,\n          ltype: latestRoomData.ltype,\n          md: latestRoomData.md,\n          manager: latestRoomData.manager,\n          small: latestRoomData.small,\n          ups: latestRoomData.ups,\n          bms: latestRoomData.bms,\n          server: latestRoomData.server,\n          reception: latestRoomData.reception,\n          lounge: latestRoomData.lounge,\n          sales: latestRoomData.sales,\n          phonebooth: latestRoomData.phonebooth,\n          discussionroom: latestRoomData.discussionroom,\n          interviewroom: latestRoomData.interviewroom,\n          conferenceroom: latestRoomData.conferenceroom,\n          boardroom: latestRoomData.boardroom,\n          meetingroom: latestRoomData.meetingroom,\n          meetingroomlarge: latestRoomData.meetingroomlarge,\n          hrroom: latestRoomData.hrroom,\n          financeroom: latestRoomData.financeroom\n        };\n        setRoomNumbers([roomsArray]);\n      }\n    } catch (error) {\n      console.error('Error fetching room data:', error);\n    }\n  }\n  async function fetchProductsData() {\n    try {\n      const {\n        data,\n        error\n      } = await supabase.from(\"products\").select(`\n          *,\n          addons (*)\n        `);\n      if (error) throw error;\n      const allImages = data.flatMap(product => [product.image, ...product.addons.map(addon => addon.image)]);\n      const uniqueImages = [...new Set(allImages)];\n      const {\n        data: signedUrls,\n        error: signedUrlError\n      } = await supabase.storage.from(\"addon\").createSignedUrls(uniqueImages, 3600);\n      if (signedUrlError) throw signedUrlError;\n      const urlMap = Object.fromEntries(signedUrls.map(item => [item.path, item.signedUrl]));\n      const processedData = data.map(product => ({\n        ...product,\n        image: urlMap[product.image] || '',\n        addons: product.addons.map(addon => ({\n          ...addon,\n          image: urlMap[addon.image] || ''\n        }))\n      }));\n      setProductData(processedData);\n    } catch (error) {\n      console.error('Error fetching products data:', error);\n    } finally {\n      setLoading(false);\n    }\n  }\n  useEffect(() => {\n    Promise.all([fetchRoomData(), fetchProductsData()]);\n  }, []);\n  const handleSearch = event => {\n    setSearchQuery(event.target.value.toLowerCase());\n  };\n  const handleSliderChange = (event, newValue) => {\n    setPriceRange(newValue);\n  };\n  const handleCategoryChange = event => {\n    setSelectedCategory(event.target.value);\n  };\n  const toggleFilters = () => {\n    setShowFilters(!showFilters);\n  };\n  const filteredProducts = useMemo(() => {\n    return productsData.filter(product => {\n      const matchesSearch = product.title.toLowerCase().includes(searchQuery) || product.details.toLowerCase().includes(searchQuery);\n      const matchesPrice = product.price >= priceRange[0] && product.price <= priceRange[1];\n      const matchesCategory = selectedCategory === '' || product.category === selectedCategory;\n      return matchesSearch && matchesPrice && matchesCategory;\n    });\n  }, [productsData, searchQuery, priceRange, selectedCategory]);\n  const groupedProducts = useMemo(() => {\n    const grouped = {};\n    filteredProducts.forEach(product => {\n      if (!grouped[product.category]) {\n        grouped[product.category] = {};\n      }\n      if (!grouped[product.category][product.subcategory]) {\n        grouped[product.category][product.subcategory] = [];\n      }\n      grouped[product.category][product.subcategory].push(product);\n    });\n    return grouped;\n  }, [filteredProducts]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-filter\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search products...\",\n        value: searchQuery,\n        onChange: handleSearch,\n        className: \"search-bar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 524,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: toggleFilters,\n        variant: \"contained\",\n        color: \"primary\",\n        children: showFilters ? 'Hide Filters' : 'Show Filters'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 531,\n        columnNumber: 9\n      }, this), showFilters && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filters\",\n        children: [/*#__PURE__*/_jsxDEV(Slider, {\n          value: priceRange,\n          onChange: handleSliderChange,\n          valueLabelDisplay: \"auto\",\n          min: 1000,\n          max: 12000,\n          className: \"price-slider\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 536,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          value: selectedCategory,\n          onChange: handleCategoryChange,\n          displayEmpty: true,\n          className: \"category-select\",\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"\",\n            children: \"All Categories\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 550,\n            columnNumber: 15\n          }, this), categories.map(category => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: category,\n            children: category\n          }, category, false, {\n            fileName: _jsxFileName,\n            lineNumber: 552,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 544,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 535,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 523,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"products-grid\",\n      children: loading ? Array.from({\n        length: 4\n      }).map((_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-skeleton-container\",\n        children: [/*#__PURE__*/_jsxDEV(Skeleton, {\n          variant: \"rectangular\",\n          height: 150,\n          width: \"100%\",\n          className: \"skeleton-card-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 563,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n          variant: \"text\",\n          width: \"60%\",\n          height: 20,\n          style: {\n            margin: '10px 0'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 564,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n          variant: \"text\",\n          width: \"80%\",\n          height: 20,\n          style: {\n            margin: '5px 0'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 565,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n          variant: \"text\",\n          width: \"50%\",\n          height: 20,\n          style: {\n            margin: '5px 0'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 566,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 562,\n        columnNumber: 13\n      }, this)) : Object.entries(groupedProducts).map(([category, subcategories]) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"category-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 572,\n          columnNumber: 15\n        }, this), Object.entries(subcategories).map(([subcategory, products]) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"subcategory-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"subcategory-heading\",\n            children: subcategory\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 575,\n            columnNumber: 19\n          }, this), products.map(product => {\n            var _roomNumbers$;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                title: product.title,\n                price: product.price,\n                details: product.details,\n                addOns: product.addons,\n                image: product.image,\n                initialMinimized: product.initialMinimized,\n                roomData: roomNumbers[0] // Adjust this if necessary\n                ,\n                quantity: ((_roomNumbers$ = roomNumbers[0]) === null || _roomNumbers$ === void 0 ? void 0 : _roomNumbers$[product.title.toLowerCase()]) || 0 // Pass the quantity\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 578,\n                columnNumber: 23\n              }, this)\n            }, product.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 577,\n              columnNumber: 21\n            }, this);\n          })]\n        }, subcategory, true, {\n          fileName: _jsxFileName,\n          lineNumber: 574,\n          columnNumber: 17\n        }, this))]\n      }, category, true, {\n        fileName: _jsxFileName,\n        lineNumber: 571,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 559,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 522,\n    columnNumber: 5\n  }, this);\n};\n_s2(App, \"a0MAVpNA7UXVd85DKyjYSgUjZgw=\");\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Card\");\n$RefreshReg$(_c2, \"CardSection\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useState","useMemo","useEffect","Slider","Skeleton","Select","MenuItem","Button","supabase","jsxDEV","_jsxDEV","Card","title","price","image","details","addOns","initialMinimized","roomData","quantity","_s","selectedAddOns","setSelectedAddOns","isMinimized","setIsMinimized","basePrice","handleAddOnChange","addOn","isChecked","prevSelectedAddOns","name","calculateTotalPrice","Object","values","reduce","total","addOnPrice","toggleMinimize","prev","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","CardSection","src","alt","entries","map","key","value","index","type","onChange","e","target","checked","_c","_c2","App","_s2","searchQuery","setSearchQuery","priceRange","setPriceRange","productsData","setProductData","loading","setLoading","roomNumbers","setRoomNumbers","showFilters","setShowFilters","selectedCategory","setSelectedCategory","categories","fetchRoomData","data","error","from","select","order","ascending","limit","length","latestRoomData","roomsArray","linear","ltype","md","manager","small","ups","bms","server","reception","lounge","sales","phonebooth","discussionroom","interviewroom","conferenceroom","boardroom","meetingroom","meetingroomlarge","hrroom","financeroom","console","fetchProductsData","allImages","flatMap","product","addons","addon","uniqueImages","Set","signedUrls","signedUrlError","storage","createSignedUrls","urlMap","fromEntries","item","path","signedUrl","processedData","Promise","all","handleSearch","event","toLowerCase","handleSliderChange","newValue","handleCategoryChange","toggleFilters","filteredProducts","filter","matchesSearch","includes","matchesPrice","matchesCategory","category","groupedProducts","grouped","forEach","subcategory","push","placeholder","variant","color","valueLabelDisplay","min","max","displayEmpty","Array","_","height","width","style","margin","subcategories","products","_roomNumbers$","id","_c3","$RefreshReg$"],"sources":["C:/Users/hp/Desktop/jojo 1/bill-of-quantities/src/boq.js"],"sourcesContent":["// import React, { useState, useMemo, useEffect } from 'react';\n// import './boq.css';\n// import { Slider, Skeleton } from '@mui/material';\n// import { supabase } from './supabase';\n\n// const Card = ({ title, price, image, details, addOns, initialMinimized = false, roomData }) => {\n//   const [selectedAddOns, setSelectedAddOns] = useState({});\n//   const [isMinimized, setIsMinimized] = useState(initialMinimized);\n//   const basePrice = price;\n\n//   const handleAddOnChange = (addOn, isChecked) => {\n//     setSelectedAddOns((prevSelectedAddOns) => ({\n//       ...prevSelectedAddOns,\n//       [addOn.name]: isChecked ? addOn.price : 0,\n//     }));\n//   };\n\n//   const calculateTotalPrice = useMemo(() => {\n//     return Object.values(selectedAddOns).reduce((total, addOnPrice) => total + addOnPrice, basePrice);\n//   }, [selectedAddOns, basePrice]);\n\n//   const toggleMinimize = () => setIsMinimized((prev) => !prev);\n\n//   if (isMinimized) {\n//     return (\n//       <div className=\"minimized-card\" onClick={toggleMinimize}>\n//         <span>{title}</span>\n//         <div className=\"info\">\n//           <p>Base Price: ₹{basePrice}</p>\n//           <p>Total Price: ₹{calculateTotalPrice}</p>\n//         </div>\n//         <button className=\"start-button\">Start</button>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div className=\"card-container\">\n//       <CardSection className=\"card-image\">\n//         <img src={image} alt={title} className=\"image\" />\n//       </CardSection>\n\n//       <CardSection className=\"card-features\">\n//         <h3>{title}</h3>\n//         <p>{details}</p>\n//         {roomData && (\n//           <div className=\"room-info\">\n//             <p>Room Data:</p>\n//             <ul>\n//               {Object.entries(roomData).map(([key, value]) => (\n//                 <li key={key}>{`${key}: ${value}`}</li>\n//               ))}\n//             </ul>\n//           </div>\n//         )}\n//       </CardSection>\n\n//       <CardSection className=\"card-add-ons\">\n//         <h3>ADD ON</h3>\n//         <ul>\n//           {addOns.map((addOn, index) => (\n//             <li key={index}>\n//               <label>\n//                 <input\n//                   type=\"checkbox\"\n//                   onChange={(e) => handleAddOnChange(addOn, e.target.checked)}\n//                 />\n//                 {addOn.name} (+₹{addOn.price})\n//               </label>\n//             </li>\n//           ))}\n//         </ul>\n//       </CardSection>\n\n//       <CardSection className=\"card-summary\">\n//         <h4>Summary</h4>\n//         <p>Base Price: ₹{basePrice}</p>\n//         <p>Add-Ons: ₹{Object.values(selectedAddOns).reduce((total, price) => total + price, 0)}</p>\n//         <p>Total Price: ₹{calculateTotalPrice}</p>\n//         <button className=\"done-button\" onClick={toggleMinimize}>Done</button>\n//       </CardSection>\n//     </div>\n//   );\n// };\n\n// const CardSection = ({ className, children }) => {\n//   return <div className={`card ${className}`}>{children}</div>;\n// };\n\n// const App = () => {\n//   const [searchQuery, setSearchQuery] = useState('');\n//   const [priceRange, setPriceRange] = useState([1000, 12000]);\n//   const [productsData, setProductData] = useState([]);\n//   const categories = [\n//     'Furniture', \n//     'Civil / Plumbing', \n//     'Lighting', \n//     'Electrical', \n//     'Partitions- door / windows / ceilings',\n//     'Paint', \n//     'HVAC', \n//     'Smart Solutions', \n//     'Flooring', \n//     'Accessories'\n//   ];\n//   const [loading, setLoading] = useState(true);\n//   const [roomNumbers, setRoomNumbers] = useState([]);\n\n//   async function fetchRoomData() {\n//     try {\n//       const { data, error } = await supabase\n//         .from('areas')\n//         .select()\n//         .order('created_at', { ascending: false })\n//         .limit(1);\n  \n//       if (error) throw error;\n  \n//       if (data && data.length > 0) {\n//         const latestRoomData = data[0];\n//         const roomsArray = {\n          // linear: latestRoomData.linear,\n          // ltype: latestRoomData.ltype,\n          // md: latestRoomData.md,\n          // manager: latestRoomData.manager,\n          // small: latestRoomData.small,\n          // ups: latestRoomData.ups,\n          // bms: latestRoomData.bms,\n          // server: latestRoomData.server,\n          // reception: latestRoomData.reception,\n          // lounge: latestRoomData.lounge,\n          // sales: latestRoomData.sales,\n          // phonebooth: latestRoomData.phonebooth,\n          // discussionroom: latestRoomData.discussionroom,\n          // interviewroom: latestRoomData.interviewroom,\n          // conferenceroom: latestRoomData.conferenceroom,\n          // boardroom: latestRoomData.boardroom,\n          // meetingroom: latestRoomData.meetingroom,\n          // meetingroomlarge: latestRoomData.meetingroomlarge,\n          // hrroom: latestRoomData.hrroom,\n          // financeroom: latestRoomData.financeroom,\n//         };\n//         setRoomNumbers([roomsArray]);\n//       }\n//     } catch (error) {\n//       console.error('Error fetching room data:', error);\n//     }\n//   }\n\n//   async function fetchProductsData() {\n//     try {\n//       const { data, error } = await supabase\n//         .from(\"products\")\n//         .select(`\n//           *,\n//           addons (*)\n//         `);\n\n//       if (error) throw error;\n\n//       const allImages = data.flatMap(product => [product.image, ...product.addons.map(addon => addon.image)]);\n//       const uniqueImages = [...new Set(allImages)];\n\n//       const { data: signedUrls, error: signedUrlError } = await supabase.storage\n//         .from(\"addon\")\n//         .createSignedUrls(uniqueImages, 3600);\n\n//       if (signedUrlError) throw signedUrlError;\n\n//       const urlMap = Object.fromEntries(signedUrls.map(item => [item.path, item.signedUrl]));\n\n//       const processedData = data.map(product => ({\n//         ...product,\n//         image: urlMap[product.image] || '',\n//         addons: product.addons.map(addon => ({\n//           ...addon,\n//           image: urlMap[addon.image] || ''\n//         }))\n//       }));\n\n//       setProductData(processedData);\n//     } catch (error) {\n//       console.error('Error fetching products data:', error);\n//     } finally {\n//       setLoading(false);\n//     }\n//   }\n\n//   useEffect(() => {\n//     Promise.all([fetchRoomData(), fetchProductsData()]);\n//   }, []);\n\n//   const handleSearch = (event) => {\n//     setSearchQuery(event.target.value.toLowerCase());\n//   };\n\n//   const handleSliderChange = (event, newValue) => {\n//     setPriceRange(newValue);\n//   };\n\n//   const filteredProducts = useMemo(() => {\n//     return productsData.filter((product) => {\n//       const matchesSearch = product.title.toLowerCase().includes(searchQuery) ||\n//                             product.details.toLowerCase().includes(searchQuery);\n//       const matchesPrice = product.price >= priceRange[0] && product.price <= priceRange[1];\n//       return matchesSearch && matchesPrice;\n//     });\n//   }, [productsData, searchQuery, priceRange]);\n\n//   return (\n//     <div className=\"App\">\n//       <div className=\"search-filter\">\n//         {loading ? (\n//           <>\n//             <Skeleton variant=\"rectangular\" height={40} width=\"80%\" className=\"skeleton-bar\" />\n//             <Skeleton variant=\"rectangular\" height={40} width=\"80%\" className=\"skeleton-slider\" />\n//           </>\n//         ) : (\n//           <>\n//             <input\n//               type=\"text\"\n//               placeholder=\"Search products...\"\n//               value={searchQuery}\n//               onChange={handleSearch}\n//               className=\"search-bar\"\n//             />\n//             <Slider\n//               value={priceRange}\n//               onChange={handleSliderChange}\n//               valueLabelDisplay=\"auto\"\n//               min={1000}\n//               max={12000}\n//               className=\"price-slider\"\n//             />\n//           </>\n//         )}\n//       </div>\n\n//       <div className=\"products-grid\">\n//         {loading ? (\n//           Array.from({ length: 4 }).map((_, index) => (\n//             <div key={index} className=\"card-skeleton-container\">\n              // <Skeleton variant=\"rectangular\" height={150} width=\"100%\" className=\"skeleton-card-image\" />\n              // <Skeleton variant=\"text\" width=\"60%\" height={20} style={{ margin: '10px 0' }} />\n              // <Skeleton variant=\"text\" width=\"80%\" height={20} style={{ margin: '5px 0' }} />\n              // <Skeleton variant=\"text\" width=\"50%\" height={20} style={{ margin: '5px 0' }} />\n//             </div>\n//           ))\n//         ) : (\n//           categories.map((category) => {\n//             const categoryProducts = filteredProducts.filter(product => product.category === category);\n//             if (categoryProducts.length === 0) return null;\n\n//             return (\n//               <div key={category} className=\"category-section\">\n//                 <h2>{category}</h2>\n//                 {categoryProducts.map((product) => (\n//                   <div key={product.id}>\n//                     <Card\n//                       title={product.title}\n//                       price={product.price}\n//                       details={product.details}\n//                       addOns={product.addons}\n//                       image={product.image}\n//                       initialMinimized={product.initialMinimized}\n//                       // roomData={roomNumbers[0]}\n//                     />\n//                   </div>\n//                 ))}\n//               </div>\n//             );\n//           })\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default App; \n\nimport React, { useState, useMemo, useEffect } from 'react';\nimport { Slider, Skeleton, Select, MenuItem, Button } from '@mui/material';\nimport { supabase } from './supabase';\nimport './boq.css';\n\nconst Card = ({ title, price, image, details, addOns, initialMinimized = false, roomData, quantity }) => {\n  const [selectedAddOns, setSelectedAddOns] = useState({});\n  const [isMinimized, setIsMinimized] = useState(initialMinimized);\n  const basePrice = price;\n\n  const handleAddOnChange = (addOn, isChecked) => {\n    setSelectedAddOns((prevSelectedAddOns) => ({\n      ...prevSelectedAddOns,\n      [addOn.name]: isChecked ? addOn.price : 0,\n    }));\n  };\n\n  const calculateTotalPrice = useMemo(() => {\n    return Object.values(selectedAddOns).reduce((total, addOnPrice) => total + addOnPrice, basePrice);\n  }, [selectedAddOns, basePrice]);\n\n  const toggleMinimize = () => setIsMinimized((prev) => !prev);\n\n  if (isMinimized) {\n    return (\n      <div className=\"minimized-card\" onClick={toggleMinimize}>\n        <span>{title}</span>\n        <div className=\"info\">\n          <p>Base Price: ₹{basePrice}</p>\n          <p>Total Price: ₹{calculateTotalPrice}</p>\n        </div>\n        <button className=\"start-button\">Start</button>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"card-container\">\n      <CardSection className=\"card-image\">\n        <img src={image} alt={title} className=\"image\" />\n      </CardSection>\n\n      <CardSection className=\"card-features\">\n        <h3>{title}</h3>\n        <p>{details}</p>\n        {roomData && (\n          <div className=\"room-info\">\n            <p>Room Data:</p>\n            <ul>\n              {Object.entries(roomData).map(([key, value]) => (\n                <li key={key}>{`${key}: ${value}`}</li>\n              ))}\n            </ul>\n          </div>\n        )}\n        {quantity && (\n          <div className=\"quantity-info\">\n            <p>Quantity: {quantity}</p>\n          </div>\n        )}\n      </CardSection>\n\n      <CardSection className=\"card-add-ons\">\n        <h3>ADD ON</h3>\n        <ul>\n          {addOns.map((addOn, index) => (\n            <li key={index}>\n              <label>\n                <input\n                  type=\"checkbox\"\n                  onChange={(e) => handleAddOnChange(addOn, e.target.checked)}\n                />\n                {addOn.name} (+₹{addOn.price})\n              </label>\n            </li>\n          ))}\n        </ul>\n      </CardSection>\n\n      <CardSection className=\"card-summary\">\n        <h4>Summary</h4>\n        <p>Base Price: ₹{basePrice}</p>\n        <p>Add-Ons: ₹{Object.values(selectedAddOns).reduce((total, price) => total + price, 0)}</p>\n        <p>Total Price: ₹{calculateTotalPrice}</p>\n        <button className=\"done-button\" onClick={toggleMinimize}>Done</button>\n      </CardSection>\n    </div>\n  );\n};\n\nconst CardSection = ({ className, children }) => {\n  return <div className={`card ${className}`}>{children}</div>;\n};\n\nconst App = () => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [priceRange, setPriceRange] = useState([1000, 12000]);\n  const [productsData, setProductData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [roomNumbers, setRoomNumbers] = useState([]);\n  const [showFilters, setShowFilters] = useState(false);\n  const [selectedCategory, setSelectedCategory] = useState('');\n\n  const categories = [\n    'Furniture', \n    'Civil / Plumbing', \n    'Lighting', \n    'Electrical', \n    'Partitions- door / windows / ceilings',\n    'Paint', \n    'HVAC', \n    'Smart Solutions', \n    'Flooring', \n    'Accessories'\n  ];\n\n  async function fetchRoomData() {\n    try {\n      const { data, error } = await supabase\n        .from('areas')\n        .select()\n        .order('created_at', { ascending: false })\n        .limit(1);\n  \n      if (error) throw error;\n  \n      if (data && data.length > 0) {\n        const latestRoomData = data[0];\n        const roomsArray = {\n          linear: latestRoomData.linear,\n          ltype: latestRoomData.ltype,\n          md: latestRoomData.md,\n          manager: latestRoomData.manager,\n          small: latestRoomData.small,\n          ups: latestRoomData.ups,\n          bms: latestRoomData.bms,\n          server: latestRoomData.server,\n          reception: latestRoomData.reception,\n          lounge: latestRoomData.lounge,\n          sales: latestRoomData.sales,\n          phonebooth: latestRoomData.phonebooth,\n          discussionroom: latestRoomData.discussionroom,\n          interviewroom: latestRoomData.interviewroom,\n          conferenceroom: latestRoomData.conferenceroom,\n          boardroom: latestRoomData.boardroom,\n          meetingroom: latestRoomData.meetingroom,\n          meetingroomlarge: latestRoomData.meetingroomlarge,\n          hrroom: latestRoomData.hrroom,\n          financeroom: latestRoomData.financeroom,\n        };\n        setRoomNumbers([roomsArray]);\n      }\n    } catch (error) {\n      console.error('Error fetching room data:', error);\n    }\n  }\n\n  async function fetchProductsData() {\n    try {\n      const { data, error } = await supabase\n        .from(\"products\")\n        .select(`\n          *,\n          addons (*)\n        `);\n\n      if (error) throw error;\n\n      const allImages = data.flatMap(product => [product.image, ...product.addons.map(addon => addon.image)]);\n      const uniqueImages = [...new Set(allImages)];\n\n      const { data: signedUrls, error: signedUrlError } = await supabase.storage\n        .from(\"addon\")\n        .createSignedUrls(uniqueImages, 3600);\n\n      if (signedUrlError) throw signedUrlError;\n\n      const urlMap = Object.fromEntries(signedUrls.map(item => [item.path, item.signedUrl]));\n\n      const processedData = data.map(product => ({\n        ...product,\n        image: urlMap[product.image] || '',\n        addons: product.addons.map(addon => ({\n          ...addon,\n          image: urlMap[addon.image] || ''\n        }))\n      }));\n\n      setProductData(processedData);\n    } catch (error) {\n      console.error('Error fetching products data:', error);\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  useEffect(() => {\n    Promise.all([fetchRoomData(), fetchProductsData()]);\n  }, []);\n\n  const handleSearch = (event) => {\n    setSearchQuery(event.target.value.toLowerCase());\n  };\n\n  const handleSliderChange = (event, newValue) => {\n    setPriceRange(newValue);\n  };\n\n  const handleCategoryChange = (event) => {\n    setSelectedCategory(event.target.value);\n  };\n\n  const toggleFilters = () => {\n    setShowFilters(!showFilters);\n  };\n\n  const filteredProducts = useMemo(() => {\n    return productsData.filter((product) => {\n      const matchesSearch = product.title.toLowerCase().includes(searchQuery) ||\n                            product.details.toLowerCase().includes(searchQuery);\n      const matchesPrice = product.price >= priceRange[0] && product.price <= priceRange[1];\n      const matchesCategory = selectedCategory === '' || product.category === selectedCategory;\n      return matchesSearch && matchesPrice && matchesCategory;\n    });\n  }, [productsData, searchQuery, priceRange, selectedCategory]);\n\n  const groupedProducts = useMemo(() => {\n    const grouped = {};\n    filteredProducts.forEach(product => {\n      if (!grouped[product.category]) {\n        grouped[product.category] = {};\n      }\n      if (!grouped[product.category][product.subcategory]) {\n        grouped[product.category][product.subcategory] = [];\n      }\n      grouped[product.category][product.subcategory].push(product);\n    });\n    return grouped;\n  }, [filteredProducts]);\n\n  return (\n    <div className=\"App\">\n      <div className=\"search-filter\">\n        <input\n          type=\"text\"\n          placeholder=\"Search products...\"\n          value={searchQuery}\n          onChange={handleSearch}\n          className=\"search-bar\"\n        />\n        <Button onClick={toggleFilters} variant=\"contained\" color=\"primary\">\n          {showFilters ? 'Hide Filters' : 'Show Filters'}\n        </Button>\n        {showFilters && (\n          <div className=\"filters\">\n            <Slider\n              value={priceRange}\n              onChange={handleSliderChange}\n              valueLabelDisplay=\"auto\"\n              min={1000}\n              max={12000}\n              className=\"price-slider\"\n            />\n            <Select\n              value={selectedCategory}\n              onChange={handleCategoryChange}\n              displayEmpty\n              className=\"category-select\"\n            >\n              <MenuItem value=\"\">All Categories</MenuItem>\n              {categories.map((category) => (\n                <MenuItem key={category} value={category}>{category}</MenuItem>\n              ))}\n            </Select>\n          </div>\n        )}\n      </div>\n\n      <div className=\"products-grid\">\n        {loading ? (\n          Array.from({ length: 4 }).map((_, index) => (\n            <div key={index} className=\"card-skeleton-container\">\n              <Skeleton variant=\"rectangular\" height={150} width=\"100%\" className=\"skeleton-card-image\" />\n              <Skeleton variant=\"text\" width=\"60%\" height={20} style={{ margin: '10px 0' }} />\n              <Skeleton variant=\"text\" width=\"80%\" height={20} style={{ margin: '5px 0' }} />\n              <Skeleton variant=\"text\" width=\"50%\" height={20} style={{ margin: '5px 0' }} />\n            </div>\n          ))\n        ) : (\n          Object.entries(groupedProducts).map(([category, subcategories]) => (\n            <div key={category} className=\"category-section\">\n              <h2>{category}</h2>\n              {Object.entries(subcategories).map(([subcategory, products]) => (\n                <div key={subcategory} className=\"subcategory-section\">\n                  <h3 className=\"subcategory-heading\">{subcategory}</h3>\n                  {products.map((product) => (\n                    <div key={product.id}>\n                      <Card\n                        title={product.title}\n                        price={product.price}\n                        details={product.details}\n                        addOns={product.addons}\n                        image={product.image}\n                        initialMinimized={product.initialMinimized}\n                        roomData={roomNumbers[0]} // Adjust this if necessary\n                        quantity={roomNumbers[0]?.[product.title.toLowerCase()] || 0} // Pass the quantity\n                      />\n                    </div>\n                  ))}\n                </div>\n              ))}\n            </div>\n          ))\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":";;;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACU;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACV;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACc;AACA;AACA;AACA;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}