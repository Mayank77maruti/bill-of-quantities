{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\jojo 1\\\\bill-of-quantities\\\\src\\\\boq.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// import React, { useState, useMemo, useEffect } from 'react';\n// import './boq.css';\n// import { Slider, Skeleton } from '@mui/material';\n// import { supabase } from './supabase';\n\n// const Card = ({ title, price, image, details, addOns, initialMinimized = false, roomData }) => {\n//   const [selectedAddOns, setSelectedAddOns] = useState({});\n//   const [isMinimized, setIsMinimized] = useState(initialMinimized);\n//   const basePrice = price;\n\n//   const handleAddOnChange = (addOn, isChecked) => {\n//     setSelectedAddOns((prevSelectedAddOns) => ({\n//       ...prevSelectedAddOns,\n//       [addOn.name]: isChecked ? addOn.price : 0,\n//     }));\n//   };\n\n//   const calculateTotalPrice = useMemo(() => {\n//     return Object.values(selectedAddOns).reduce((total, addOnPrice) => total + addOnPrice, basePrice);\n//   }, [selectedAddOns, basePrice]);\n\n//   const toggleMinimize = () => setIsMinimized((prev) => !prev);\n\n//   if (isMinimized) {\n//     return (\n//       <div className=\"minimized-card\" onClick={toggleMinimize}>\n//         <span>{title}</span>\n//         <div className=\"info\">\n//           <p>Base Price: ₹{basePrice}</p>\n//           <p>Total Price: ₹{calculateTotalPrice}</p>\n//         </div>\n//         <button className=\"start-button\">Start</button>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div className=\"card-container\">\n//       <CardSection className=\"card-image\">\n//         <img src={image} alt={title} className=\"image\" />\n//       </CardSection>\n\n//       <CardSection className=\"card-features\">\n//         <h3>{title}</h3>\n//         <p>{details}</p>\n//         {roomData && (\n//           <div className=\"room-info\">\n//             <p>Room Data:</p>\n//             <ul>\n//               {Object.entries(roomData).map(([key, value]) => (\n//                 <li key={key}>{`${key}: ${value}`}</li>\n//               ))}\n//             </ul>\n//           </div>\n//         )}\n//       </CardSection>\n\n//       <CardSection className=\"card-add-ons\">\n//         <h3>ADD ON</h3>\n//         <ul>\n//           {addOns.map((addOn, index) => (\n//             <li key={index}>\n//               <label>\n//                 <input\n//                   type=\"checkbox\"\n//                   onChange={(e) => handleAddOnChange(addOn, e.target.checked)}\n//                 />\n//                 {addOn.name} (+₹{addOn.price})\n//               </label>\n//             </li>\n//           ))}\n//         </ul>\n//       </CardSection>\n\n//       <CardSection className=\"card-summary\">\n//         <h4>Summary</h4>\n//         <p>Base Price: ₹{basePrice}</p>\n//         <p>Add-Ons: ₹{Object.values(selectedAddOns).reduce((total, price) => total + price, 0)}</p>\n//         <p>Total Price: ₹{calculateTotalPrice}</p>\n//         <button className=\"done-button\" onClick={toggleMinimize}>Done</button>\n//       </CardSection>\n//     </div>\n//   );\n// };\n\n// const CardSection = ({ className, children }) => {\n//   return <div className={`card ${className}`}>{children}</div>;\n// };\n\n// const App = () => {\n//   const [searchQuery, setSearchQuery] = useState('');\n//   const [priceRange, setPriceRange] = useState([1000, 12000]);\n//   const [productsData, setProductData] = useState([]);\n//   const categories = [\n//     'Furniture', \n//     'Civil / Plumbing', \n//     'Lighting', \n//     'Electrical', \n//     'Partitions- door / windows / ceilings',\n//     'Paint', \n//     'HVAC', \n//     'Smart Solutions', \n//     'Flooring', \n//     'Accessories'\n//   ];\n//   const [loading, setLoading] = useState(true);\n//   const [roomNumbers, setRoomNumbers] = useState([]);\n\n//   async function fetchRoomData() {\n//     try {\n//       const { data, error } = await supabase\n//         .from('areas')\n//         .select()\n//         .order('created_at', { ascending: false })\n//         .limit(1);\n\n//       if (error) throw error;\n\n//       if (data && data.length > 0) {\n//         const latestRoomData = data[0];\n//         const roomsArray = {\n// linear: latestRoomData.linear,\n// ltype: latestRoomData.ltype,\n// md: latestRoomData.md,\n// manager: latestRoomData.manager,\n// small: latestRoomData.small,\n// ups: latestRoomData.ups,\n// bms: latestRoomData.bms,\n// server: latestRoomData.server,\n// reception: latestRoomData.reception,\n// lounge: latestRoomData.lounge,\n// sales: latestRoomData.sales,\n// phonebooth: latestRoomData.phonebooth,\n// discussionroom: latestRoomData.discussionroom,\n// interviewroom: latestRoomData.interviewroom,\n// conferenceroom: latestRoomData.conferenceroom,\n// boardroom: latestRoomData.boardroom,\n// meetingroom: latestRoomData.meetingroom,\n// meetingroomlarge: latestRoomData.meetingroomlarge,\n// hrroom: latestRoomData.hrroom,\n// financeroom: latestRoomData.financeroom,\n//         };\n//         setRoomNumbers([roomsArray]);\n//       }\n//     } catch (error) {\n//       console.error('Error fetching room data:', error);\n//     }\n//   }\n\n//   async function fetchProductsData() {\n//     try {\n//       const { data, error } = await supabase\n//         .from(\"products\")\n//         .select(`\n//           *,\n//           addons (*)\n//         `);\n\n//       if (error) throw error;\n\n//       const allImages = data.flatMap(product => [product.image, ...product.addons.map(addon => addon.image)]);\n//       const uniqueImages = [...new Set(allImages)];\n\n//       const { data: signedUrls, error: signedUrlError } = await supabase.storage\n//         .from(\"addon\")\n//         .createSignedUrls(uniqueImages, 3600);\n\n//       if (signedUrlError) throw signedUrlError;\n\n//       const urlMap = Object.fromEntries(signedUrls.map(item => [item.path, item.signedUrl]));\n\n//       const processedData = data.map(product => ({\n//         ...product,\n//         image: urlMap[product.image] || '',\n//         addons: product.addons.map(addon => ({\n//           ...addon,\n//           image: urlMap[addon.image] || ''\n//         }))\n//       }));\n\n//       setProductData(processedData);\n//     } catch (error) {\n//       console.error('Error fetching products data:', error);\n//     } finally {\n//       setLoading(false);\n//     }\n//   }\n\n//   useEffect(() => {\n//     Promise.all([fetchRoomData(), fetchProductsData()]);\n//   }, []);\n\n//   const handleSearch = (event) => {\n//     setSearchQuery(event.target.value.toLowerCase());\n//   };\n\n//   const handleSliderChange = (event, newValue) => {\n//     setPriceRange(newValue);\n//   };\n\n//   const filteredProducts = useMemo(() => {\n//     return productsData.filter((product) => {\n//       const matchesSearch = product.title.toLowerCase().includes(searchQuery) ||\n//                             product.details.toLowerCase().includes(searchQuery);\n//       const matchesPrice = product.price >= priceRange[0] && product.price <= priceRange[1];\n//       return matchesSearch && matchesPrice;\n//     });\n//   }, [productsData, searchQuery, priceRange]);\n\n//   return (\n//     <div className=\"App\">\n//       <div className=\"search-filter\">\n//         {loading ? (\n//           <>\n//             <Skeleton variant=\"rectangular\" height={40} width=\"80%\" className=\"skeleton-bar\" />\n//             <Skeleton variant=\"rectangular\" height={40} width=\"80%\" className=\"skeleton-slider\" />\n//           </>\n//         ) : (\n//           <>\n//             <input\n//               type=\"text\"\n//               placeholder=\"Search products...\"\n//               value={searchQuery}\n//               onChange={handleSearch}\n//               className=\"search-bar\"\n//             />\n//             <Slider\n//               value={priceRange}\n//               onChange={handleSliderChange}\n//               valueLabelDisplay=\"auto\"\n//               min={1000}\n//               max={12000}\n//               className=\"price-slider\"\n//             />\n//           </>\n//         )}\n//       </div>\n\n//       <div className=\"products-grid\">\n//         {loading ? (\n//           Array.from({ length: 4 }).map((_, index) => (\n//             <div key={index} className=\"card-skeleton-container\">\n// <Skeleton variant=\"rectangular\" height={150} width=\"100%\" className=\"skeleton-card-image\" />\n// <Skeleton variant=\"text\" width=\"60%\" height={20} style={{ margin: '10px 0' }} />\n// <Skeleton variant=\"text\" width=\"80%\" height={20} style={{ margin: '5px 0' }} />\n// <Skeleton variant=\"text\" width=\"50%\" height={20} style={{ margin: '5px 0' }} />\n//             </div>\n//           ))\n//         ) : (\n//           categories.map((category) => {\n//             const categoryProducts = filteredProducts.filter(product => product.category === category);\n//             if (categoryProducts.length === 0) return null;\n\n//             return (\n//               <div key={category} className=\"category-section\">\n//                 <h2>{category}</h2>\n//                 {categoryProducts.map((product) => (\n//                   <div key={product.id}>\n//                     <Card\n//                       title={product.title}\n//                       price={product.price}\n//                       details={product.details}\n//                       addOns={product.addons}\n//                       image={product.image}\n//                       initialMinimized={product.initialMinimized}\n//                       // roomData={roomNumbers[0]}\n//                     />\n//                   </div>\n//                 ))}\n//               </div>\n//             );\n//           })\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default App; \n\nimport React, { useState, useMemo, useEffect } from 'react';\nimport { Slider, Skeleton, Select, MenuItem, Button } from '@mui/material';\nimport { supabase } from './supabase';\nimport RoomDataBox from './RoomDataBox';\nimport './boq.css';\n\n// Card Component\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Card = /*#__PURE__*/_s(/*#__PURE__*/React.memo(_c = _s(({\n  title,\n  price,\n  image,\n  details,\n  addOns,\n  initialMinimized = false,\n  quantity\n}) => {\n  _s();\n  const [selectedAddOns, setSelectedAddOns] = useState({});\n  const [isMinimized, setIsMinimized] = useState(initialMinimized);\n  const handleAddOnChange = (addOn, isChecked) => {\n    setSelectedAddOns(prev => ({\n      ...prev,\n      [addOn.name]: isChecked ? addOn.price : 0\n    }));\n  };\n  const calculateTotalPrice = useMemo(() => {\n    const addOnTotal = Object.values(selectedAddOns).reduce((total, addOnPrice) => total + addOnPrice, 0);\n    return price + addOnTotal;\n  }, [selectedAddOns, price]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `card-container ${isMinimized ? 'minimized' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-header\",\n      onClick: () => setIsMinimized(!isMinimized),\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Price: \\u20B9\", calculateTotalPrice]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 7\n    }, this), !isMinimized && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(CardSection, {\n        className: \"card-image\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: image,\n          alt: title,\n          className: \"image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CardSection, {\n        className: \"card-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: details\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Quantity: \", quantity || 0]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CardSection, {\n        className: \"card-add-ons\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Add-Ons\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: addOns.map(addOn => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                onChange: e => handleAddOnChange(addOn, e.target.checked)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 21\n              }, this), addOn.name, \" (+\\u20B9\", addOn.price, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 19\n            }, this)\n          }, addOn.name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CardSection, {\n        className: \"card-summary\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Summary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Base Price: \\u20B9\", price]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Add-Ons Total: \\u20B9\", Object.values(selectedAddOns).reduce((total, price) => total + price, 0)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Total Price: \\u20B9\", calculateTotalPrice]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"done-button\",\n          onClick: () => setIsMinimized(true),\n          children: \"Minimize\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 302,\n    columnNumber: 5\n  }, this);\n}, \"qqTATfBw1Fel92YP54gb2HBuSko=\")), \"qqTATfBw1Fel92YP54gb2HBuSko=\");\n\n// Filters Component\n_c2 = Card;\nconst ProductFilters = ({\n  searchQuery,\n  setSearchQuery,\n  priceRange,\n  setPriceRange,\n  selectedCategory,\n  setSelectedCategory,\n  categories\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"search-filter\",\n  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n    type: \"text\",\n    placeholder: \"Search products...\",\n    value: searchQuery,\n    onChange: e => setSearchQuery(e.target.value.toLowerCase()),\n    className: \"search-bar\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 352,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Slider, {\n    value: priceRange,\n    onChange: (e, newValue) => setPriceRange(newValue),\n    valueLabelDisplay: \"auto\",\n    min: 1000,\n    max: 12000,\n    className: \"price-slider\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 359,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Select, {\n    value: selectedCategory,\n    onChange: e => setSelectedCategory(e.target.value),\n    displayEmpty: true,\n    className: \"category-select\",\n    children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n      value: \"\",\n      children: \"All Categories\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 7\n    }, this), categories.map(category => /*#__PURE__*/_jsxDEV(MenuItem, {\n      value: category,\n      children: category\n    }, category, false, {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 367,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 351,\n  columnNumber: 3\n}, this);\n\n// CardSection Component\n_c3 = ProductFilters;\nconst CardSection = ({\n  className,\n  children\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: `card-section ${className}`,\n  children: children\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 383,\n  columnNumber: 3\n}, this);\n_c4 = CardSection;\nconst App = () => {\n  _s2();\n  const [searchQuery, setSearchQuery] = useState('');\n  const [priceRange, setPriceRange] = useState([1000, 12000]);\n  const [productsData, setProductsData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [roomNumbers, setRoomNumbers] = useState([]);\n  const [showFilters, setShowFilters] = useState(false);\n  const [selectedCategory, setSelectedCategory] = useState('');\n  const categories = ['Furniture', 'Civil / Plumbing', 'Lighting', 'Electrical', 'Partitions', 'Paint', 'HVAC', 'Smart Solutions', 'Flooring', 'Accessories'];\n  useEffect(() => {\n    const fetchData = async () => {\n      await Promise.all([fetchRoomData(), fetchProductsData()]);\n    };\n    fetchData();\n  }, []);\n  async function fetchRoomData() {\n    try {\n      const {\n        data,\n        error\n      } = await supabase.from('areas').select().order('created_at', {\n        ascending: false\n      }).limit(1);\n      if (error) throw error;\n      if ((data === null || data === void 0 ? void 0 : data.length) > 0) {\n        const latestRoomData = data[0];\n        setRoomNumbers([latestRoomData]);\n      }\n    } catch (error) {\n      console.error('Error fetching room data:', error);\n    }\n  }\n  async function fetchProductsData() {\n    try {\n      const {\n        data,\n        error\n      } = await supabase.from('products').select('*, addons (*)');\n      if (error) throw error;\n      setProductsData(data);\n    } catch (error) {\n      console.error('Error fetching products data:', error);\n    } finally {\n      setLoading(false);\n    }\n  }\n  const filteredProducts = useMemo(() => {\n    return productsData.filter(product => {\n      const matchesSearch = product.title.toLowerCase().includes(searchQuery) || product.details.toLowerCase().includes(searchQuery);\n      const matchesPrice = product.price >= priceRange[0] && product.price <= priceRange[1];\n      const matchesCategory = !selectedCategory || product.category === selectedCategory;\n      return matchesSearch && matchesPrice && matchesCategory;\n    });\n  }, [productsData, searchQuery, priceRange, selectedCategory]);\n  const groupedProducts = useMemo(() => {\n    return filteredProducts.reduce((grouped, product) => {\n      const {\n        category,\n        subcategory\n      } = product;\n      grouped[category] = grouped[category] || {};\n      grouped[category][subcategory] = grouped[category][subcategory] || [];\n      grouped[category][subcategory].push(product);\n      return grouped;\n    }, {});\n  }, [filteredProducts]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-bar\",\n      children: /*#__PURE__*/_jsxDEV(ProductFilters, {\n        searchQuery: searchQuery,\n        setSearchQuery: setSearchQuery,\n        priceRange: priceRange,\n        setPriceRange: setPriceRange,\n        selectedCategory: selectedCategory,\n        setSelectedCategory: setSelectedCategory,\n        categories: categories\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 7\n    }, this), roomNumbers.length > 0 && /*#__PURE__*/_jsxDEV(RoomDataBox, {\n      roomData: roomNumbers[0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 34\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"products-grid\",\n      children: loading ? Array.from({\n        length: 4\n      }).map((_, index) => /*#__PURE__*/_jsxDEV(SkeletonCard, {}, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 13\n      }, this)) : Object.entries(groupedProducts).map(([category, subcategories]) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"category-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 15\n        }, this), Object.entries(subcategories).map(([subcategory, products]) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"subcategory-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"subcategory-heading\",\n            children: subcategory\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 479,\n            columnNumber: 19\n          }, this), products.map(product => {\n            var _roomNumbers$;\n            return /*#__PURE__*/_jsxDEV(Card, {\n              title: product.title,\n              price: product.price,\n              image: product.image,\n              details: product.details,\n              addOns: product.addons,\n              initialMinimized: product.initialMinimized,\n              quantity: (_roomNumbers$ = roomNumbers[0]) === null || _roomNumbers$ === void 0 ? void 0 : _roomNumbers$[product.title.toLowerCase()]\n            }, product.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 481,\n              columnNumber: 21\n            }, this);\n          })]\n        }, subcategory, true, {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 17\n        }, this))]\n      }, category, true, {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 453,\n    columnNumber: 5\n  }, this);\n};\n\n// SkeletonCard Component for loading\n_s2(App, \"FJf5l1yAtv+Go9wBXv/NzkQpE6c=\");\n_c5 = App;\nconst SkeletonCard = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"card-skeleton-container\",\n  children: [/*#__PURE__*/_jsxDEV(Skeleton, {\n    variant: \"rectangular\",\n    height: 150,\n    width: \"100%\",\n    className: \"skeleton-card-image\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 505,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n    variant: \"text\",\n    width: \"60%\",\n    height: 20,\n    className: \"skeleton-text\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 506,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n    variant: \"text\",\n    width: \"80%\",\n    height: 15,\n    className: \"skeleton-text\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 507,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 504,\n  columnNumber: 3\n}, this);\n_c6 = SkeletonCard;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"Card$React.memo\");\n$RefreshReg$(_c2, \"Card\");\n$RefreshReg$(_c3, \"ProductFilters\");\n$RefreshReg$(_c4, \"CardSection\");\n$RefreshReg$(_c5, \"App\");\n$RefreshReg$(_c6, \"SkeletonCard\");","map":{"version":3,"names":["React","useState","useMemo","useEffect","Slider","Skeleton","Select","MenuItem","Button","supabase","RoomDataBox","jsxDEV","_jsxDEV","Fragment","_Fragment","Card","_s","memo","_c","title","price","image","details","addOns","initialMinimized","quantity","selectedAddOns","setSelectedAddOns","isMinimized","setIsMinimized","handleAddOnChange","addOn","isChecked","prev","name","calculateTotalPrice","addOnTotal","Object","values","reduce","total","addOnPrice","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","CardSection","src","alt","map","type","onChange","e","target","checked","_c2","ProductFilters","searchQuery","setSearchQuery","priceRange","setPriceRange","selectedCategory","setSelectedCategory","categories","placeholder","value","toLowerCase","newValue","valueLabelDisplay","min","max","displayEmpty","category","_c3","_c4","App","_s2","productsData","setProductsData","loading","setLoading","roomNumbers","setRoomNumbers","showFilters","setShowFilters","fetchData","Promise","all","fetchRoomData","fetchProductsData","data","error","from","select","order","ascending","limit","length","latestRoomData","console","filteredProducts","filter","product","matchesSearch","includes","matchesPrice","matchesCategory","groupedProducts","grouped","subcategory","push","roomData","Array","_","index","SkeletonCard","entries","subcategories","products","_roomNumbers$","addons","id","_c5","variant","height","width","_c6","$RefreshReg$"],"sources":["C:/Users/hp/Desktop/jojo 1/bill-of-quantities/src/boq.js"],"sourcesContent":["// import React, { useState, useMemo, useEffect } from 'react';\n// import './boq.css';\n// import { Slider, Skeleton } from '@mui/material';\n// import { supabase } from './supabase';\n\n// const Card = ({ title, price, image, details, addOns, initialMinimized = false, roomData }) => {\n//   const [selectedAddOns, setSelectedAddOns] = useState({});\n//   const [isMinimized, setIsMinimized] = useState(initialMinimized);\n//   const basePrice = price;\n\n//   const handleAddOnChange = (addOn, isChecked) => {\n//     setSelectedAddOns((prevSelectedAddOns) => ({\n//       ...prevSelectedAddOns,\n//       [addOn.name]: isChecked ? addOn.price : 0,\n//     }));\n//   };\n\n//   const calculateTotalPrice = useMemo(() => {\n//     return Object.values(selectedAddOns).reduce((total, addOnPrice) => total + addOnPrice, basePrice);\n//   }, [selectedAddOns, basePrice]);\n\n//   const toggleMinimize = () => setIsMinimized((prev) => !prev);\n\n//   if (isMinimized) {\n//     return (\n//       <div className=\"minimized-card\" onClick={toggleMinimize}>\n//         <span>{title}</span>\n//         <div className=\"info\">\n//           <p>Base Price: ₹{basePrice}</p>\n//           <p>Total Price: ₹{calculateTotalPrice}</p>\n//         </div>\n//         <button className=\"start-button\">Start</button>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div className=\"card-container\">\n//       <CardSection className=\"card-image\">\n//         <img src={image} alt={title} className=\"image\" />\n//       </CardSection>\n\n//       <CardSection className=\"card-features\">\n//         <h3>{title}</h3>\n//         <p>{details}</p>\n//         {roomData && (\n//           <div className=\"room-info\">\n//             <p>Room Data:</p>\n//             <ul>\n//               {Object.entries(roomData).map(([key, value]) => (\n//                 <li key={key}>{`${key}: ${value}`}</li>\n//               ))}\n//             </ul>\n//           </div>\n//         )}\n//       </CardSection>\n\n//       <CardSection className=\"card-add-ons\">\n//         <h3>ADD ON</h3>\n//         <ul>\n//           {addOns.map((addOn, index) => (\n//             <li key={index}>\n//               <label>\n//                 <input\n//                   type=\"checkbox\"\n//                   onChange={(e) => handleAddOnChange(addOn, e.target.checked)}\n//                 />\n//                 {addOn.name} (+₹{addOn.price})\n//               </label>\n//             </li>\n//           ))}\n//         </ul>\n//       </CardSection>\n\n//       <CardSection className=\"card-summary\">\n//         <h4>Summary</h4>\n//         <p>Base Price: ₹{basePrice}</p>\n//         <p>Add-Ons: ₹{Object.values(selectedAddOns).reduce((total, price) => total + price, 0)}</p>\n//         <p>Total Price: ₹{calculateTotalPrice}</p>\n//         <button className=\"done-button\" onClick={toggleMinimize}>Done</button>\n//       </CardSection>\n//     </div>\n//   );\n// };\n\n// const CardSection = ({ className, children }) => {\n//   return <div className={`card ${className}`}>{children}</div>;\n// };\n\n// const App = () => {\n//   const [searchQuery, setSearchQuery] = useState('');\n//   const [priceRange, setPriceRange] = useState([1000, 12000]);\n//   const [productsData, setProductData] = useState([]);\n//   const categories = [\n//     'Furniture', \n//     'Civil / Plumbing', \n//     'Lighting', \n//     'Electrical', \n//     'Partitions- door / windows / ceilings',\n//     'Paint', \n//     'HVAC', \n//     'Smart Solutions', \n//     'Flooring', \n//     'Accessories'\n//   ];\n//   const [loading, setLoading] = useState(true);\n//   const [roomNumbers, setRoomNumbers] = useState([]);\n\n//   async function fetchRoomData() {\n//     try {\n//       const { data, error } = await supabase\n//         .from('areas')\n//         .select()\n//         .order('created_at', { ascending: false })\n//         .limit(1);\n  \n//       if (error) throw error;\n  \n//       if (data && data.length > 0) {\n//         const latestRoomData = data[0];\n//         const roomsArray = {\n          // linear: latestRoomData.linear,\n          // ltype: latestRoomData.ltype,\n          // md: latestRoomData.md,\n          // manager: latestRoomData.manager,\n          // small: latestRoomData.small,\n          // ups: latestRoomData.ups,\n          // bms: latestRoomData.bms,\n          // server: latestRoomData.server,\n          // reception: latestRoomData.reception,\n          // lounge: latestRoomData.lounge,\n          // sales: latestRoomData.sales,\n          // phonebooth: latestRoomData.phonebooth,\n          // discussionroom: latestRoomData.discussionroom,\n          // interviewroom: latestRoomData.interviewroom,\n          // conferenceroom: latestRoomData.conferenceroom,\n          // boardroom: latestRoomData.boardroom,\n          // meetingroom: latestRoomData.meetingroom,\n          // meetingroomlarge: latestRoomData.meetingroomlarge,\n          // hrroom: latestRoomData.hrroom,\n          // financeroom: latestRoomData.financeroom,\n//         };\n//         setRoomNumbers([roomsArray]);\n//       }\n//     } catch (error) {\n//       console.error('Error fetching room data:', error);\n//     }\n//   }\n\n//   async function fetchProductsData() {\n//     try {\n//       const { data, error } = await supabase\n//         .from(\"products\")\n//         .select(`\n//           *,\n//           addons (*)\n//         `);\n\n//       if (error) throw error;\n\n//       const allImages = data.flatMap(product => [product.image, ...product.addons.map(addon => addon.image)]);\n//       const uniqueImages = [...new Set(allImages)];\n\n//       const { data: signedUrls, error: signedUrlError } = await supabase.storage\n//         .from(\"addon\")\n//         .createSignedUrls(uniqueImages, 3600);\n\n//       if (signedUrlError) throw signedUrlError;\n\n//       const urlMap = Object.fromEntries(signedUrls.map(item => [item.path, item.signedUrl]));\n\n//       const processedData = data.map(product => ({\n//         ...product,\n//         image: urlMap[product.image] || '',\n//         addons: product.addons.map(addon => ({\n//           ...addon,\n//           image: urlMap[addon.image] || ''\n//         }))\n//       }));\n\n//       setProductData(processedData);\n//     } catch (error) {\n//       console.error('Error fetching products data:', error);\n//     } finally {\n//       setLoading(false);\n//     }\n//   }\n\n//   useEffect(() => {\n//     Promise.all([fetchRoomData(), fetchProductsData()]);\n//   }, []);\n\n//   const handleSearch = (event) => {\n//     setSearchQuery(event.target.value.toLowerCase());\n//   };\n\n//   const handleSliderChange = (event, newValue) => {\n//     setPriceRange(newValue);\n//   };\n\n//   const filteredProducts = useMemo(() => {\n//     return productsData.filter((product) => {\n//       const matchesSearch = product.title.toLowerCase().includes(searchQuery) ||\n//                             product.details.toLowerCase().includes(searchQuery);\n//       const matchesPrice = product.price >= priceRange[0] && product.price <= priceRange[1];\n//       return matchesSearch && matchesPrice;\n//     });\n//   }, [productsData, searchQuery, priceRange]);\n\n//   return (\n//     <div className=\"App\">\n//       <div className=\"search-filter\">\n//         {loading ? (\n//           <>\n//             <Skeleton variant=\"rectangular\" height={40} width=\"80%\" className=\"skeleton-bar\" />\n//             <Skeleton variant=\"rectangular\" height={40} width=\"80%\" className=\"skeleton-slider\" />\n//           </>\n//         ) : (\n//           <>\n//             <input\n//               type=\"text\"\n//               placeholder=\"Search products...\"\n//               value={searchQuery}\n//               onChange={handleSearch}\n//               className=\"search-bar\"\n//             />\n//             <Slider\n//               value={priceRange}\n//               onChange={handleSliderChange}\n//               valueLabelDisplay=\"auto\"\n//               min={1000}\n//               max={12000}\n//               className=\"price-slider\"\n//             />\n//           </>\n//         )}\n//       </div>\n\n//       <div className=\"products-grid\">\n//         {loading ? (\n//           Array.from({ length: 4 }).map((_, index) => (\n//             <div key={index} className=\"card-skeleton-container\">\n              // <Skeleton variant=\"rectangular\" height={150} width=\"100%\" className=\"skeleton-card-image\" />\n              // <Skeleton variant=\"text\" width=\"60%\" height={20} style={{ margin: '10px 0' }} />\n              // <Skeleton variant=\"text\" width=\"80%\" height={20} style={{ margin: '5px 0' }} />\n              // <Skeleton variant=\"text\" width=\"50%\" height={20} style={{ margin: '5px 0' }} />\n//             </div>\n//           ))\n//         ) : (\n//           categories.map((category) => {\n//             const categoryProducts = filteredProducts.filter(product => product.category === category);\n//             if (categoryProducts.length === 0) return null;\n\n//             return (\n//               <div key={category} className=\"category-section\">\n//                 <h2>{category}</h2>\n//                 {categoryProducts.map((product) => (\n//                   <div key={product.id}>\n//                     <Card\n//                       title={product.title}\n//                       price={product.price}\n//                       details={product.details}\n//                       addOns={product.addons}\n//                       image={product.image}\n//                       initialMinimized={product.initialMinimized}\n//                       // roomData={roomNumbers[0]}\n//                     />\n//                   </div>\n//                 ))}\n//               </div>\n//             );\n//           })\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default App; \n\nimport React, { useState, useMemo, useEffect } from 'react';\nimport { Slider, Skeleton, Select, MenuItem, Button } from '@mui/material';\nimport { supabase } from './supabase';\nimport RoomDataBox from './RoomDataBox';\nimport './boq.css';\n\n// Card Component\nconst Card = React.memo(({ title, price, image, details, addOns, initialMinimized = false, quantity }) => {\n  const [selectedAddOns, setSelectedAddOns] = useState({});\n  const [isMinimized, setIsMinimized] = useState(initialMinimized);\n\n  const handleAddOnChange = (addOn, isChecked) => {\n    setSelectedAddOns(prev => ({ ...prev, [addOn.name]: isChecked ? addOn.price : 0 }));\n  };\n\n  const calculateTotalPrice = useMemo(() => {\n    const addOnTotal = Object.values(selectedAddOns).reduce((total, addOnPrice) => total + addOnPrice, 0);\n    return price + addOnTotal;\n  }, [selectedAddOns, price]);\n\n  return (\n    <div className={`card-container ${isMinimized ? 'minimized' : ''}`}>\n      <div className=\"card-header\" onClick={() => setIsMinimized(!isMinimized)}>\n        <h3>{title}</h3>\n        <p>Total Price: ₹{calculateTotalPrice}</p>\n      </div>\n\n      {!isMinimized && (\n        <>\n          <CardSection className=\"card-image\">\n            <img src={image} alt={title} className=\"image\" />\n          </CardSection>\n\n          <CardSection className=\"card-details\">\n            <p>{details}</p>\n            <p>Quantity: {quantity || 0}</p>\n          </CardSection>\n\n          <CardSection className=\"card-add-ons\">\n            <h4>Add-Ons</h4>\n            <ul>\n              {addOns.map((addOn) => (\n                <li key={addOn.name}>\n                  <label>\n                    <input\n                      type=\"checkbox\"\n                      onChange={(e) => handleAddOnChange(addOn, e.target.checked)}\n                    />\n                    {addOn.name} (+₹{addOn.price})\n                  </label>\n                </li>\n              ))}\n            </ul>\n          </CardSection>\n\n          <CardSection className=\"card-summary\">\n            <h4>Summary</h4>\n            <p>Base Price: ₹{price}</p>\n            <p>Add-Ons Total: ₹{Object.values(selectedAddOns).reduce((total, price) => total + price, 0)}</p>\n            <p>Total Price: ₹{calculateTotalPrice}</p>\n            <button className=\"done-button\" onClick={() => setIsMinimized(true)}>Minimize</button>\n          </CardSection>\n        </>\n      )}\n    </div>\n  );\n});\n\n// Filters Component\nconst ProductFilters = ({ searchQuery, setSearchQuery, priceRange, setPriceRange, selectedCategory, setSelectedCategory, categories }) => (\n  <div className=\"search-filter\">\n    <input\n      type=\"text\"\n      placeholder=\"Search products...\"\n      value={searchQuery}\n      onChange={(e) => setSearchQuery(e.target.value.toLowerCase())}\n      className=\"search-bar\"\n    />\n    <Slider\n      value={priceRange}\n      onChange={(e, newValue) => setPriceRange(newValue)}\n      valueLabelDisplay=\"auto\"\n      min={1000}\n      max={12000}\n      className=\"price-slider\"\n    />\n    <Select\n      value={selectedCategory}\n      onChange={(e) => setSelectedCategory(e.target.value)}\n      displayEmpty\n      className=\"category-select\"\n    >\n      <MenuItem value=\"\">All Categories</MenuItem>\n      {categories.map((category) => (\n        <MenuItem key={category} value={category}>{category}</MenuItem>\n      ))}\n    </Select>\n  </div>\n);\n\n// CardSection Component\nconst CardSection = ({ className, children }) => (\n  <div className={`card-section ${className}`}>\n    {children}\n  </div>\n);\n\nconst App = () => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [priceRange, setPriceRange] = useState([1000, 12000]);\n  const [productsData, setProductsData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [roomNumbers, setRoomNumbers] = useState([]);\n  const [showFilters, setShowFilters] = useState(false);\n  const [selectedCategory, setSelectedCategory] = useState('');\n\n  const categories = ['Furniture', 'Civil / Plumbing', 'Lighting', 'Electrical', 'Partitions', 'Paint', 'HVAC', 'Smart Solutions', 'Flooring', 'Accessories'];\n\n  useEffect(() => {\n    const fetchData = async () => {\n      await Promise.all([fetchRoomData(), fetchProductsData()]);\n    };\n    fetchData();\n  }, []);\n\n  async function fetchRoomData() {\n    try {\n      const { data, error } = await supabase.from('areas').select().order('created_at', { ascending: false }).limit(1);\n      if (error) throw error;\n\n      if (data?.length > 0) {\n        const latestRoomData = data[0];\n        setRoomNumbers([latestRoomData]);\n      }\n    } catch (error) {\n      console.error('Error fetching room data:', error);\n    }\n  }\n\n  async function fetchProductsData() {\n    try {\n      const { data, error } = await supabase.from('products').select('*, addons (*)');\n      if (error) throw error;\n\n      setProductsData(data);\n    } catch (error) {\n      console.error('Error fetching products data:', error);\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  const filteredProducts = useMemo(() => {\n    return productsData.filter((product) => {\n      const matchesSearch = product.title.toLowerCase().includes(searchQuery) || product.details.toLowerCase().includes(searchQuery);\n      const matchesPrice = product.price >= priceRange[0] && product.price <= priceRange[1];\n      const matchesCategory = !selectedCategory || product.category === selectedCategory;\n      return matchesSearch && matchesPrice && matchesCategory;\n    });\n  }, [productsData, searchQuery, priceRange, selectedCategory]);\n\n  const groupedProducts = useMemo(() => {\n    return filteredProducts.reduce((grouped, product) => {\n      const { category, subcategory } = product;\n      grouped[category] = grouped[category] || {};\n      grouped[category][subcategory] = grouped[category][subcategory] || [];\n      grouped[category][subcategory].push(product);\n      return grouped;\n    }, {});\n  }, [filteredProducts]);\n\n  return (\n    <div className=\"App\">\n      <div className=\"search-bar\">\n        <ProductFilters\n          searchQuery={searchQuery}\n          setSearchQuery={setSearchQuery}\n          priceRange={priceRange}\n          setPriceRange={setPriceRange}\n          selectedCategory={selectedCategory}\n          setSelectedCategory={setSelectedCategory}\n          categories={categories}\n        />\n      </div>\n\n      {roomNumbers.length > 0 && <RoomDataBox roomData={roomNumbers[0]} />}\n\n      <div className=\"products-grid\">\n        {loading ? (\n          Array.from({ length: 4 }).map((_, index) => (\n            <SkeletonCard key={index} />\n          ))\n        ) : (\n          Object.entries(groupedProducts).map(([category, subcategories]) => (\n            <div key={category} className=\"category-section\">\n              <h2>{category}</h2>\n              {Object.entries(subcategories).map(([subcategory, products]) => (\n                <div key={subcategory} className=\"subcategory-section\">\n                  <h3 className=\"subcategory-heading\">{subcategory}</h3>\n                  {products.map((product) => (\n                    <Card\n                      key={product.id}\n                      title={product.title}\n                      price={product.price}\n                      image={product.image}\n                      details={product.details}\n                      addOns={product.addons}\n                      initialMinimized={product.initialMinimized}\n                      quantity={roomNumbers[0]?.[product.title.toLowerCase()]}\n                    />\n                  ))}\n                </div>\n              ))}\n            </div>\n          ))\n        )}\n      </div>\n    </div>\n  );\n};\n\n// SkeletonCard Component for loading\nconst SkeletonCard = () => (\n  <div className=\"card-skeleton-container\">\n    <Skeleton variant=\"rectangular\" height={150} width=\"100%\" className=\"skeleton-card-image\" />\n    <Skeleton variant=\"text\" width=\"60%\" height={20} className=\"skeleton-text\" />\n    <Skeleton variant=\"text\" width=\"80%\" height={15} className=\"skeleton-text\" />\n  </div>\n);\n\nexport default App;\n"],"mappings":";;;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACU;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACV;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACc;AACA;AACA;AACA;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}