{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\jojo 1\\\\bill-of-quantities\\\\src\\\\boq.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// import React, { useState, useMemo, useEffect } from 'react';\n// import './boq.css';\n// import { Slider, Skeleton } from '@mui/material';\n// import { supabase } from './supabase';\n\n// const Card = ({ title, price, image, details, addOns, initialMinimized = false, roomData }) => {\n//   const [selectedAddOns, setSelectedAddOns] = useState({});\n//   const [isMinimized, setIsMinimized] = useState(initialMinimized);\n//   const basePrice = price;\n\n//   const handleAddOnChange = (addOn, isChecked) => {\n//     setSelectedAddOns((prevSelectedAddOns) => ({\n//       ...prevSelectedAddOns,\n//       [addOn.name]: isChecked ? addOn.price : 0,\n//     }));\n//   };\n\n//   const calculateTotalPrice = useMemo(() => {\n//     return Object.values(selectedAddOns).reduce((total, addOnPrice) => total + addOnPrice, basePrice);\n//   }, [selectedAddOns, basePrice]);\n\n//   const toggleMinimize = () => setIsMinimized((prev) => !prev);\n\n//   if (isMinimized) {\n//     return (\n//       <div className=\"minimized-card\" onClick={toggleMinimize}>\n//         <span>{title}</span>\n//         <div className=\"info\">\n//           <p>Base Price: ₹{basePrice}</p>\n//           <p>Total Price: ₹{calculateTotalPrice}</p>\n//         </div>\n//         <button className=\"start-button\">Start</button>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div className=\"card-container\">\n//       <CardSection className=\"card-image\">\n//         <img src={image} alt={title} className=\"image\" />\n//       </CardSection>\n\n//       <CardSection className=\"card-features\">\n//         <h3>{title}</h3>\n//         <p>{details}</p>\n//         {roomData && (\n//           <div className=\"room-info\">\n//             <p>Room Data:</p>\n//             <ul>\n//               {Object.entries(roomData).map(([key, value]) => (\n//                 <li key={key}>{`${key}: ${value}`}</li>\n//               ))}\n//             </ul>\n//           </div>\n//         )}\n//       </CardSection>\n\n//       <CardSection className=\"card-add-ons\">\n//         <h3>ADD ON</h3>\n//         <ul>\n//           {addOns.map((addOn, index) => (\n//             <li key={index}>\n//               <label>\n//                 <input\n//                   type=\"checkbox\"\n//                   onChange={(e) => handleAddOnChange(addOn, e.target.checked)}\n//                 />\n//                 {addOn.name} (+₹{addOn.price})\n//               </label>\n//             </li>\n//           ))}\n//         </ul>\n//       </CardSection>\n\n//       <CardSection className=\"card-summary\">\n//         <h4>Summary</h4>\n//         <p>Base Price: ₹{basePrice}</p>\n//         <p>Add-Ons: ₹{Object.values(selectedAddOns).reduce((total, price) => total + price, 0)}</p>\n//         <p>Total Price: ₹{calculateTotalPrice}</p>\n//         <button className=\"done-button\" onClick={toggleMinimize}>Done</button>\n//       </CardSection>\n//     </div>\n//   );\n// };\n\n// const CardSection = ({ className, children }) => {\n//   return <div className={`card ${className}`}>{children}</div>;\n// };\n\n// const App = () => {\n//   const [searchQuery, setSearchQuery] = useState('');\n//   const [priceRange, setPriceRange] = useState([1000, 12000]);\n//   const [productsData, setProductData] = useState([]);\n//   const categories = [\n//     'Furniture', \n//     'Civil / Plumbing', \n//     'Lighting', \n//     'Electrical', \n//     'Partitions- door / windows / ceilings',\n//     'Paint', \n//     'HVAC', \n//     'Smart Solutions', \n//     'Flooring', \n//     'Accessories'\n//   ];\n//   const [loading, setLoading] = useState(true);\n//   const [roomNumbers, setRoomNumbers] = useState([]);\n\n//   async function fetchRoomData() {\n//     try {\n//       const { data, error } = await supabase\n//         .from('areas')\n//         .select()\n//         .order('created_at', { ascending: false })\n//         .limit(1);\n\n//       if (error) throw error;\n\n//       if (data && data.length > 0) {\n//         const latestRoomData = data[0];\n//         const roomsArray = {\n// linear: latestRoomData.linear,\n// ltype: latestRoomData.ltype,\n// md: latestRoomData.md,\n// manager: latestRoomData.manager,\n// small: latestRoomData.small,\n// ups: latestRoomData.ups,\n// bms: latestRoomData.bms,\n// server: latestRoomData.server,\n// reception: latestRoomData.reception,\n// lounge: latestRoomData.lounge,\n// sales: latestRoomData.sales,\n// phonebooth: latestRoomData.phonebooth,\n// discussionroom: latestRoomData.discussionroom,\n// interviewroom: latestRoomData.interviewroom,\n// conferenceroom: latestRoomData.conferenceroom,\n// boardroom: latestRoomData.boardroom,\n// meetingroom: latestRoomData.meetingroom,\n// meetingroomlarge: latestRoomData.meetingroomlarge,\n// hrroom: latestRoomData.hrroom,\n// financeroom: latestRoomData.financeroom,\n//         };\n//         setRoomNumbers([roomsArray]);\n//       }\n//     } catch (error) {\n//       console.error('Error fetching room data:', error);\n//     }\n//   }\n\n//   async function fetchProductsData() {\n//     try {\n//       const { data, error } = await supabase\n//         .from(\"products\")\n//         .select(`\n//           *,\n//           addons (*)\n//         `);\n\n//       if (error) throw error;\n\n//       const allImages = data.flatMap(product => [product.image, ...product.addons.map(addon => addon.image)]);\n//       const uniqueImages = [...new Set(allImages)];\n\n//       const { data: signedUrls, error: signedUrlError } = await supabase.storage\n//         .from(\"addon\")\n//         .createSignedUrls(uniqueImages, 3600);\n\n//       if (signedUrlError) throw signedUrlError;\n\n//       const urlMap = Object.fromEntries(signedUrls.map(item => [item.path, item.signedUrl]));\n\n//       const processedData = data.map(product => ({\n//         ...product,\n//         image: urlMap[product.image] || '',\n//         addons: product.addons.map(addon => ({\n//           ...addon,\n//           image: urlMap[addon.image] || ''\n//         }))\n//       }));\n\n//       setProductData(processedData);\n//     } catch (error) {\n//       console.error('Error fetching products data:', error);\n//     } finally {\n//       setLoading(false);\n//     }\n//   }\n\n//   useEffect(() => {\n//     Promise.all([fetchRoomData(), fetchProductsData()]);\n//   }, []);\n\n//   const handleSearch = (event) => {\n//     setSearchQuery(event.target.value.toLowerCase());\n//   };\n\n//   const handleSliderChange = (event, newValue) => {\n//     setPriceRange(newValue);\n//   };\n\n//   const filteredProducts = useMemo(() => {\n//     return productsData.filter((product) => {\n//       const matchesSearch = product.title.toLowerCase().includes(searchQuery) ||\n//                             product.details.toLowerCase().includes(searchQuery);\n//       const matchesPrice = product.price >= priceRange[0] && product.price <= priceRange[1];\n//       return matchesSearch && matchesPrice;\n//     });\n//   }, [productsData, searchQuery, priceRange]);\n\n//   return (\n//     <div className=\"App\">\n//       <div className=\"search-filter\">\n//         {loading ? (\n//           <>\n//             <Skeleton variant=\"rectangular\" height={40} width=\"80%\" className=\"skeleton-bar\" />\n//             <Skeleton variant=\"rectangular\" height={40} width=\"80%\" className=\"skeleton-slider\" />\n//           </>\n//         ) : (\n//           <>\n//             <input\n//               type=\"text\"\n//               placeholder=\"Search products...\"\n//               value={searchQuery}\n//               onChange={handleSearch}\n//               className=\"search-bar\"\n//             />\n//             <Slider\n//               value={priceRange}\n//               onChange={handleSliderChange}\n//               valueLabelDisplay=\"auto\"\n//               min={1000}\n//               max={12000}\n//               className=\"price-slider\"\n//             />\n//           </>\n//         )}\n//       </div>\n\n//       <div className=\"products-grid\">\n//         {loading ? (\n//           Array.from({ length: 4 }).map((_, index) => (\n//             <div key={index} className=\"card-skeleton-container\">\n// <Skeleton variant=\"rectangular\" height={150} width=\"100%\" className=\"skeleton-card-image\" />\n// <Skeleton variant=\"text\" width=\"60%\" height={20} style={{ margin: '10px 0' }} />\n// <Skeleton variant=\"text\" width=\"80%\" height={20} style={{ margin: '5px 0' }} />\n// <Skeleton variant=\"text\" width=\"50%\" height={20} style={{ margin: '5px 0' }} />\n//             </div>\n//           ))\n//         ) : (\n//           categories.map((category) => {\n//             const categoryProducts = filteredProducts.filter(product => product.category === category);\n//             if (categoryProducts.length === 0) return null;\n\n//             return (\n//               <div key={category} className=\"category-section\">\n//                 <h2>{category}</h2>\n//                 {categoryProducts.map((product) => (\n//                   <div key={product.id}>\n//                     <Card\n//                       title={product.title}\n//                       price={product.price}\n//                       details={product.details}\n//                       addOns={product.addons}\n//                       image={product.image}\n//                       initialMinimized={product.initialMinimized}\n//                       // roomData={roomNumbers[0]}\n//                     />\n//                   </div>\n//                 ))}\n//               </div>\n//             );\n//           })\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default App; \n\nimport React, { useState, useMemo, useEffect } from 'react';\nimport { Slider, Skeleton, Select, MenuItem, Button } from '@mui/material';\nimport { supabase } from './supabase';\nimport './boq.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Card = ({\n  title,\n  price,\n  image,\n  details,\n  addOns,\n  initialMinimized = false,\n  roomData\n}) => {\n  _s();\n  const [selectedAddOns, setSelectedAddOns] = useState({});\n  const [isMinimized, setIsMinimized] = useState(initialMinimized);\n  const basePrice = price;\n  const handleAddOnChange = (addOn, isChecked) => {\n    setSelectedAddOns(prevSelectedAddOns => ({\n      ...prevSelectedAddOns,\n      [addOn.name]: isChecked ? addOn.price : 0\n    }));\n  };\n  const calculateTotalPrice = useMemo(() => {\n    return Object.values(selectedAddOns).reduce((total, addOnPrice) => total + addOnPrice, basePrice);\n  }, [selectedAddOns, basePrice]);\n  const toggleMinimize = () => setIsMinimized(prev => !prev);\n  if (isMinimized) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"minimized-card\",\n      onClick: toggleMinimize,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Base Price: \\u20B9\", basePrice]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Total Price: \\u20B9\", calculateTotalPrice]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"start-button\",\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-container\",\n    children: [/*#__PURE__*/_jsxDEV(CardSection, {\n      className: \"card-image\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: image,\n        alt: title,\n        className: \"image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardSection, {\n      className: \"card-features\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: details\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 9\n      }, this), roomData && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"room-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Room Data:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: Object.entries(roomData).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: `${key}: ${value}`\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardSection, {\n      className: \"card-add-ons\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"ADD ON\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: addOns.map((addOn, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              onChange: e => handleAddOnChange(addOn, e.target.checked)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 17\n            }, this), addOn.name, \" (+\\u20B9\", addOn.price, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardSection, {\n      className: \"card-summary\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Base Price: \\u20B9\", basePrice]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Add-Ons: \\u20B9\", Object.values(selectedAddOns).reduce((total, price) => total + price, 0)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Price: \\u20B9\", calculateTotalPrice]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"done-button\",\n        onClick: toggleMinimize,\n        children: \"Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 318,\n    columnNumber: 5\n  }, this);\n};\n_s(Card, \"qqTATfBw1Fel92YP54gb2HBuSko=\");\n_c = Card;\nconst CardSection = ({\n  className,\n  children\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `card ${className}`,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 367,\n    columnNumber: 10\n  }, this);\n};\n_c2 = CardSection;\nconst App = () => {\n  _s2();\n  const [searchQuery, setSearchQuery] = useState('');\n  const [priceRange, setPriceRange] = useState([1000, 12000]);\n  const [productsData, setProductData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [subcategoriesData, setSubcategoriesData] = useState([]);\n  const [roomNumbers, setRoomNumbers] = useState([]);\n  const [showFilters, setShowFilters] = useState(false);\n  const [selectedCategory, setSelectedCategory] = useState('');\n  const categories = ['Furniture', 'Civil / Plumbing', 'Lighting', 'Electrical', 'Partitions- door / windows / ceilings', 'Paint', 'HVAC', 'Smart Solutions', 'Flooring', 'Accessories'];\n  async function fetchRoomData() {\n    try {\n      const {\n        data,\n        error\n      } = await supabase.from('areas').select().order('created_at', {\n        ascending: false\n      }).limit(1);\n      if (error) throw error;\n      if (data && data.length > 0) {\n        const latestRoomData = data[0];\n        const roomsArray = {\n          linear: latestRoomData.linear,\n          ltype: latestRoomData.ltype,\n          md: latestRoomData.md,\n          manager: latestRoomData.manager,\n          small: latestRoomData.small,\n          ups: latestRoomData.ups,\n          bms: latestRoomData.bms,\n          server: latestRoomData.server,\n          reception: latestRoomData.reception,\n          lounge: latestRoomData.lounge,\n          sales: latestRoomData.sales,\n          phonebooth: latestRoomData.phonebooth,\n          discussionroom: latestRoomData.discussionroom,\n          interviewroom: latestRoomData.interviewroom,\n          conferenceroom: latestRoomData.conferenceroom,\n          boardroom: latestRoomData.boardroom,\n          meetingroom: latestRoomData.meetingroom,\n          meetingroomlarge: latestRoomData.meetingroomlarge,\n          hrroom: latestRoomData.hrroom,\n          financeroom: latestRoomData.financeroom\n        };\n        setRoomNumbers([roomsArray]);\n      }\n    } catch (error) {\n      console.error('Error fetching room data:', error);\n    }\n  }\n  async function fetchSubcategoriesAndProducts() {\n    try {\n      const {\n        data: subcategories,\n        error: subcategoryError\n      } = await supabase.from('subcategories').select('*');\n      if (subcategoryError) throw subcategoryError;\n      setSubcategoriesData(subcategories);\n      const {\n        data: products,\n        error: productError\n      } = await supabase.from('products').select('*, addons (*), subcategory_id');\n      if (productError) throw productError;\n      const allImages = products.flatMap(product => [product.image, ...product.addons.map(addon => addon.image)]);\n      const uniqueImages = [...new Set(allImages)];\n      const {\n        data: signedUrls,\n        error: signedUrlError\n      } = await supabase.storage.from('addon').createSignedUrls(uniqueImages, 3600);\n      if (signedUrlError) throw signedUrlError;\n      const urlMap = Object.fromEntries(signedUrls.map(item => [item.path, item.signedUrl]));\n      const processedData = products.map(product => ({\n        ...product,\n        image: urlMap[product.image] || '',\n        addons: product.addons.map(addon => ({\n          ...addon,\n          image: urlMap[addon.image] || ''\n        }))\n      }));\n      setProductData(processedData);\n    } catch (error) {\n      console.error('Error fetching subcategories and products:', error);\n    } finally {\n      setLoading(false);\n    }\n  }\n  useEffect(() => {\n    Promise.all([fetchRoomData(), fetchSubcategoriesAndProducts()]);\n  }, []);\n  const handleSearch = event => {\n    setSearchQuery(event.target.value.toLowerCase());\n  };\n  const handleSliderChange = (event, newValue) => {\n    setPriceRange(newValue);\n  };\n  const handleCategoryChange = event => {\n    setSelectedCategory(event.target.value);\n  };\n  const toggleFilters = () => {\n    setShowFilters(!showFilters);\n  };\n  const filteredProducts = useMemo(() => {\n    return productsData.filter(product => {\n      const matchesSearch = product.title.toLowerCase().includes(searchQuery) || product.details.toLowerCase().includes(searchQuery);\n      const matchesPrice = product.price >= priceRange[0] && product.price <= priceRange[1];\n      const matchesCategory = selectedCategory === '' || product.category === selectedCategory;\n      return matchesSearch && matchesPrice && matchesCategory;\n    });\n  }, [productsData, searchQuery, priceRange, selectedCategory]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Product Cards\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: toggleFilters,\n        children: showFilters ? 'Hide Filters' : 'Show Filters'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 512,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 510,\n      columnNumber: 7\n    }, this), showFilters && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filters\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search...\",\n        value: searchQuery,\n        onChange: handleSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 519,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Slider, {\n        value: priceRange,\n        onChange: handleSliderChange,\n        valueLabelDisplay: \"auto\",\n        min: 1000,\n        max: 15000\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 525,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        value: selectedCategory,\n        onChange: handleCategoryChange,\n        displayEmpty: true,\n        children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"\",\n          children: /*#__PURE__*/_jsxDEV(\"em\", {\n            children: \"All Categories\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 534,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 533,\n          columnNumber: 13\n        }, this), categories.map(category => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: category,\n          children: category\n        }, category, false, {\n          fileName: _jsxFileName,\n          lineNumber: 537,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 532,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 518,\n      columnNumber: 9\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Skeleton, {\n      variant: \"rectangular\",\n      width: 210,\n      height: 118\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 546,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"product-cards\",\n      children: subcategoriesData.map(subcategory => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: subcategory.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 551,\n          columnNumber: 15\n        }, this), filteredProducts.filter(product => product.subcategory_id === subcategory.id).map(product => /*#__PURE__*/_jsxDEV(Card, {\n          title: product.title,\n          price: product.price,\n          image: product.image,\n          details: product.details,\n          addOns: product.addons,\n          roomData: roomNumbers.length > 0 ? roomNumbers[0] : null\n        }, product.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 19\n        }, this))]\n      }, subcategory.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 550,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 548,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 509,\n    columnNumber: 5\n  }, this);\n};\n_s2(App, \"HCsuVs6+Vf3ZCRPEVKy8/RmzHAc=\");\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Card\");\n$RefreshReg$(_c2, \"CardSection\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useState","useMemo","useEffect","Slider","Skeleton","Select","MenuItem","Button","supabase","jsxDEV","_jsxDEV","Card","title","price","image","details","addOns","initialMinimized","roomData","_s","selectedAddOns","setSelectedAddOns","isMinimized","setIsMinimized","basePrice","handleAddOnChange","addOn","isChecked","prevSelectedAddOns","name","calculateTotalPrice","Object","values","reduce","total","addOnPrice","toggleMinimize","prev","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","CardSection","src","alt","entries","map","key","value","index","type","onChange","e","target","checked","_c","_c2","App","_s2","searchQuery","setSearchQuery","priceRange","setPriceRange","productsData","setProductData","loading","setLoading","subcategoriesData","setSubcategoriesData","roomNumbers","setRoomNumbers","showFilters","setShowFilters","selectedCategory","setSelectedCategory","categories","fetchRoomData","data","error","from","select","order","ascending","limit","length","latestRoomData","roomsArray","linear","ltype","md","manager","small","ups","bms","server","reception","lounge","sales","phonebooth","discussionroom","interviewroom","conferenceroom","boardroom","meetingroom","meetingroomlarge","hrroom","financeroom","console","fetchSubcategoriesAndProducts","subcategories","subcategoryError","products","productError","allImages","flatMap","product","addons","addon","uniqueImages","Set","signedUrls","signedUrlError","storage","createSignedUrls","urlMap","fromEntries","item","path","signedUrl","processedData","Promise","all","handleSearch","event","toLowerCase","handleSliderChange","newValue","handleCategoryChange","toggleFilters","filteredProducts","filter","matchesSearch","includes","matchesPrice","matchesCategory","category","variant","color","placeholder","valueLabelDisplay","min","max","displayEmpty","width","height","subcategory","subcategory_id","id","_c3","$RefreshReg$"],"sources":["C:/Users/hp/Desktop/jojo 1/bill-of-quantities/src/boq.js"],"sourcesContent":["// import React, { useState, useMemo, useEffect } from 'react';\n// import './boq.css';\n// import { Slider, Skeleton } from '@mui/material';\n// import { supabase } from './supabase';\n\n// const Card = ({ title, price, image, details, addOns, initialMinimized = false, roomData }) => {\n//   const [selectedAddOns, setSelectedAddOns] = useState({});\n//   const [isMinimized, setIsMinimized] = useState(initialMinimized);\n//   const basePrice = price;\n\n//   const handleAddOnChange = (addOn, isChecked) => {\n//     setSelectedAddOns((prevSelectedAddOns) => ({\n//       ...prevSelectedAddOns,\n//       [addOn.name]: isChecked ? addOn.price : 0,\n//     }));\n//   };\n\n//   const calculateTotalPrice = useMemo(() => {\n//     return Object.values(selectedAddOns).reduce((total, addOnPrice) => total + addOnPrice, basePrice);\n//   }, [selectedAddOns, basePrice]);\n\n//   const toggleMinimize = () => setIsMinimized((prev) => !prev);\n\n//   if (isMinimized) {\n//     return (\n//       <div className=\"minimized-card\" onClick={toggleMinimize}>\n//         <span>{title}</span>\n//         <div className=\"info\">\n//           <p>Base Price: ₹{basePrice}</p>\n//           <p>Total Price: ₹{calculateTotalPrice}</p>\n//         </div>\n//         <button className=\"start-button\">Start</button>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div className=\"card-container\">\n//       <CardSection className=\"card-image\">\n//         <img src={image} alt={title} className=\"image\" />\n//       </CardSection>\n\n//       <CardSection className=\"card-features\">\n//         <h3>{title}</h3>\n//         <p>{details}</p>\n//         {roomData && (\n//           <div className=\"room-info\">\n//             <p>Room Data:</p>\n//             <ul>\n//               {Object.entries(roomData).map(([key, value]) => (\n//                 <li key={key}>{`${key}: ${value}`}</li>\n//               ))}\n//             </ul>\n//           </div>\n//         )}\n//       </CardSection>\n\n//       <CardSection className=\"card-add-ons\">\n//         <h3>ADD ON</h3>\n//         <ul>\n//           {addOns.map((addOn, index) => (\n//             <li key={index}>\n//               <label>\n//                 <input\n//                   type=\"checkbox\"\n//                   onChange={(e) => handleAddOnChange(addOn, e.target.checked)}\n//                 />\n//                 {addOn.name} (+₹{addOn.price})\n//               </label>\n//             </li>\n//           ))}\n//         </ul>\n//       </CardSection>\n\n//       <CardSection className=\"card-summary\">\n//         <h4>Summary</h4>\n//         <p>Base Price: ₹{basePrice}</p>\n//         <p>Add-Ons: ₹{Object.values(selectedAddOns).reduce((total, price) => total + price, 0)}</p>\n//         <p>Total Price: ₹{calculateTotalPrice}</p>\n//         <button className=\"done-button\" onClick={toggleMinimize}>Done</button>\n//       </CardSection>\n//     </div>\n//   );\n// };\n\n// const CardSection = ({ className, children }) => {\n//   return <div className={`card ${className}`}>{children}</div>;\n// };\n\n// const App = () => {\n//   const [searchQuery, setSearchQuery] = useState('');\n//   const [priceRange, setPriceRange] = useState([1000, 12000]);\n//   const [productsData, setProductData] = useState([]);\n//   const categories = [\n//     'Furniture', \n//     'Civil / Plumbing', \n//     'Lighting', \n//     'Electrical', \n//     'Partitions- door / windows / ceilings',\n//     'Paint', \n//     'HVAC', \n//     'Smart Solutions', \n//     'Flooring', \n//     'Accessories'\n//   ];\n//   const [loading, setLoading] = useState(true);\n//   const [roomNumbers, setRoomNumbers] = useState([]);\n\n//   async function fetchRoomData() {\n//     try {\n//       const { data, error } = await supabase\n//         .from('areas')\n//         .select()\n//         .order('created_at', { ascending: false })\n//         .limit(1);\n  \n//       if (error) throw error;\n  \n//       if (data && data.length > 0) {\n//         const latestRoomData = data[0];\n//         const roomsArray = {\n          // linear: latestRoomData.linear,\n          // ltype: latestRoomData.ltype,\n          // md: latestRoomData.md,\n          // manager: latestRoomData.manager,\n          // small: latestRoomData.small,\n          // ups: latestRoomData.ups,\n          // bms: latestRoomData.bms,\n          // server: latestRoomData.server,\n          // reception: latestRoomData.reception,\n          // lounge: latestRoomData.lounge,\n          // sales: latestRoomData.sales,\n          // phonebooth: latestRoomData.phonebooth,\n          // discussionroom: latestRoomData.discussionroom,\n          // interviewroom: latestRoomData.interviewroom,\n          // conferenceroom: latestRoomData.conferenceroom,\n          // boardroom: latestRoomData.boardroom,\n          // meetingroom: latestRoomData.meetingroom,\n          // meetingroomlarge: latestRoomData.meetingroomlarge,\n          // hrroom: latestRoomData.hrroom,\n          // financeroom: latestRoomData.financeroom,\n//         };\n//         setRoomNumbers([roomsArray]);\n//       }\n//     } catch (error) {\n//       console.error('Error fetching room data:', error);\n//     }\n//   }\n\n//   async function fetchProductsData() {\n//     try {\n//       const { data, error } = await supabase\n//         .from(\"products\")\n//         .select(`\n//           *,\n//           addons (*)\n//         `);\n\n//       if (error) throw error;\n\n//       const allImages = data.flatMap(product => [product.image, ...product.addons.map(addon => addon.image)]);\n//       const uniqueImages = [...new Set(allImages)];\n\n//       const { data: signedUrls, error: signedUrlError } = await supabase.storage\n//         .from(\"addon\")\n//         .createSignedUrls(uniqueImages, 3600);\n\n//       if (signedUrlError) throw signedUrlError;\n\n//       const urlMap = Object.fromEntries(signedUrls.map(item => [item.path, item.signedUrl]));\n\n//       const processedData = data.map(product => ({\n//         ...product,\n//         image: urlMap[product.image] || '',\n//         addons: product.addons.map(addon => ({\n//           ...addon,\n//           image: urlMap[addon.image] || ''\n//         }))\n//       }));\n\n//       setProductData(processedData);\n//     } catch (error) {\n//       console.error('Error fetching products data:', error);\n//     } finally {\n//       setLoading(false);\n//     }\n//   }\n\n//   useEffect(() => {\n//     Promise.all([fetchRoomData(), fetchProductsData()]);\n//   }, []);\n\n//   const handleSearch = (event) => {\n//     setSearchQuery(event.target.value.toLowerCase());\n//   };\n\n//   const handleSliderChange = (event, newValue) => {\n//     setPriceRange(newValue);\n//   };\n\n//   const filteredProducts = useMemo(() => {\n//     return productsData.filter((product) => {\n//       const matchesSearch = product.title.toLowerCase().includes(searchQuery) ||\n//                             product.details.toLowerCase().includes(searchQuery);\n//       const matchesPrice = product.price >= priceRange[0] && product.price <= priceRange[1];\n//       return matchesSearch && matchesPrice;\n//     });\n//   }, [productsData, searchQuery, priceRange]);\n\n//   return (\n//     <div className=\"App\">\n//       <div className=\"search-filter\">\n//         {loading ? (\n//           <>\n//             <Skeleton variant=\"rectangular\" height={40} width=\"80%\" className=\"skeleton-bar\" />\n//             <Skeleton variant=\"rectangular\" height={40} width=\"80%\" className=\"skeleton-slider\" />\n//           </>\n//         ) : (\n//           <>\n//             <input\n//               type=\"text\"\n//               placeholder=\"Search products...\"\n//               value={searchQuery}\n//               onChange={handleSearch}\n//               className=\"search-bar\"\n//             />\n//             <Slider\n//               value={priceRange}\n//               onChange={handleSliderChange}\n//               valueLabelDisplay=\"auto\"\n//               min={1000}\n//               max={12000}\n//               className=\"price-slider\"\n//             />\n//           </>\n//         )}\n//       </div>\n\n//       <div className=\"products-grid\">\n//         {loading ? (\n//           Array.from({ length: 4 }).map((_, index) => (\n//             <div key={index} className=\"card-skeleton-container\">\n              // <Skeleton variant=\"rectangular\" height={150} width=\"100%\" className=\"skeleton-card-image\" />\n              // <Skeleton variant=\"text\" width=\"60%\" height={20} style={{ margin: '10px 0' }} />\n              // <Skeleton variant=\"text\" width=\"80%\" height={20} style={{ margin: '5px 0' }} />\n              // <Skeleton variant=\"text\" width=\"50%\" height={20} style={{ margin: '5px 0' }} />\n//             </div>\n//           ))\n//         ) : (\n//           categories.map((category) => {\n//             const categoryProducts = filteredProducts.filter(product => product.category === category);\n//             if (categoryProducts.length === 0) return null;\n\n//             return (\n//               <div key={category} className=\"category-section\">\n//                 <h2>{category}</h2>\n//                 {categoryProducts.map((product) => (\n//                   <div key={product.id}>\n//                     <Card\n//                       title={product.title}\n//                       price={product.price}\n//                       details={product.details}\n//                       addOns={product.addons}\n//                       image={product.image}\n//                       initialMinimized={product.initialMinimized}\n//                       // roomData={roomNumbers[0]}\n//                     />\n//                   </div>\n//                 ))}\n//               </div>\n//             );\n//           })\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default App; \n\nimport React, { useState, useMemo, useEffect } from 'react';\nimport { Slider, Skeleton, Select, MenuItem, Button } from '@mui/material';\nimport { supabase } from './supabase';\nimport './boq.css';\n\nconst Card = ({ title, price, image, details, addOns, initialMinimized = false, roomData }) => {\n  const [selectedAddOns, setSelectedAddOns] = useState({});\n  const [isMinimized, setIsMinimized] = useState(initialMinimized);\n  const basePrice = price;\n\n  const handleAddOnChange = (addOn, isChecked) => {\n    setSelectedAddOns((prevSelectedAddOns) => ({\n      ...prevSelectedAddOns,\n      [addOn.name]: isChecked ? addOn.price : 0,\n    }));\n  };\n\n  const calculateTotalPrice = useMemo(() => {\n    return Object.values(selectedAddOns).reduce((total, addOnPrice) => total + addOnPrice, basePrice);\n  }, [selectedAddOns, basePrice]);\n\n  const toggleMinimize = () => setIsMinimized((prev) => !prev);\n\n  if (isMinimized) {\n    return (\n      <div className=\"minimized-card\" onClick={toggleMinimize}>\n        <span>{title}</span>\n        <div className=\"info\">\n          <p>Base Price: ₹{basePrice}</p>\n          <p>Total Price: ₹{calculateTotalPrice}</p>\n        </div>\n        <button className=\"start-button\">Start</button>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"card-container\">\n      <CardSection className=\"card-image\">\n        <img src={image} alt={title} className=\"image\" />\n      </CardSection>\n\n      <CardSection className=\"card-features\">\n        <h3>{title}</h3>\n        <p>{details}</p>\n        {roomData && (\n          <div className=\"room-info\">\n            <p>Room Data:</p>\n            <ul>\n              {Object.entries(roomData).map(([key, value]) => (\n                <li key={key}>{`${key}: ${value}`}</li>\n              ))}\n            </ul>\n          </div>\n        )}\n      </CardSection>\n\n      <CardSection className=\"card-add-ons\">\n        <h3>ADD ON</h3>\n        <ul>\n          {addOns.map((addOn, index) => (\n            <li key={index}>\n              <label>\n                <input\n                  type=\"checkbox\"\n                  onChange={(e) => handleAddOnChange(addOn, e.target.checked)}\n                />\n                {addOn.name} (+₹{addOn.price})\n              </label>\n            </li>\n          ))}\n        </ul>\n      </CardSection>\n\n      <CardSection className=\"card-summary\">\n        <h4>Summary</h4>\n        <p>Base Price: ₹{basePrice}</p>\n        <p>Add-Ons: ₹{Object.values(selectedAddOns).reduce((total, price) => total + price, 0)}</p>\n        <p>Total Price: ₹{calculateTotalPrice}</p>\n        <button className=\"done-button\" onClick={toggleMinimize}>Done</button>\n      </CardSection>\n    </div>\n  );\n};\n\nconst CardSection = ({ className, children }) => {\n  return <div className={`card ${className}`}>{children}</div>;\n};\n\nconst App = () => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [priceRange, setPriceRange] = useState([1000, 12000]);\n  const [productsData, setProductData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [subcategoriesData, setSubcategoriesData] = useState([]);\n  const [roomNumbers, setRoomNumbers] = useState([]);\n  const [showFilters, setShowFilters] = useState(false);\n  const [selectedCategory, setSelectedCategory] = useState('');\n\n  const categories = [\n    'Furniture', \n    'Civil / Plumbing', \n    'Lighting', \n    'Electrical', \n    'Partitions- door / windows / ceilings',\n    'Paint', \n    'HVAC', \n    'Smart Solutions', \n    'Flooring', \n    'Accessories'\n  ];\n\n  async function fetchRoomData() {\n    try {\n      const { data, error } = await supabase\n        .from('areas')\n        .select()\n        .order('created_at', { ascending: false })\n        .limit(1);\n  \n      if (error) throw error;\n  \n      if (data && data.length > 0) {\n        const latestRoomData = data[0];\n        const roomsArray = {\n          linear: latestRoomData.linear,\n          ltype: latestRoomData.ltype,\n          md: latestRoomData.md,\n          manager: latestRoomData.manager,\n          small: latestRoomData.small,\n          ups: latestRoomData.ups,\n          bms: latestRoomData.bms,\n          server: latestRoomData.server,\n          reception: latestRoomData.reception,\n          lounge: latestRoomData.lounge,\n          sales: latestRoomData.sales,\n          phonebooth: latestRoomData.phonebooth,\n          discussionroom: latestRoomData.discussionroom,\n          interviewroom: latestRoomData.interviewroom,\n          conferenceroom: latestRoomData.conferenceroom,\n          boardroom: latestRoomData.boardroom,\n          meetingroom: latestRoomData.meetingroom,\n          meetingroomlarge: latestRoomData.meetingroomlarge,\n          hrroom: latestRoomData.hrroom,\n          financeroom: latestRoomData.financeroom,\n        };\n        setRoomNumbers([roomsArray]);\n      }\n    } catch (error) {\n      console.error('Error fetching room data:', error);\n    }\n  }\n\n  async function fetchSubcategoriesAndProducts() {\n    try {\n      const { data: subcategories, error: subcategoryError } = await supabase\n        .from('subcategories')\n        .select('*');\n\n      if (subcategoryError) throw subcategoryError;\n\n      setSubcategoriesData(subcategories);\n\n      const { data: products, error: productError } = await supabase\n        .from('products')\n        .select('*, addons (*), subcategory_id');\n\n      if (productError) throw productError;\n\n      const allImages = products.flatMap(product => [product.image, ...product.addons.map(addon => addon.image)]);\n      const uniqueImages = [...new Set(allImages)];\n\n      const { data: signedUrls, error: signedUrlError } = await supabase.storage\n        .from('addon')\n        .createSignedUrls(uniqueImages, 3600);\n\n      if (signedUrlError) throw signedUrlError;\n\n      const urlMap = Object.fromEntries(signedUrls.map(item => [item.path, item.signedUrl]));\n\n      const processedData = products.map(product => ({\n        ...product,\n        image: urlMap[product.image] || '',\n        addons: product.addons.map(addon => ({\n          ...addon,\n          image: urlMap[addon.image] || ''\n        }))\n      }));\n\n      setProductData(processedData);\n    } catch (error) {\n      console.error('Error fetching subcategories and products:', error);\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  useEffect(() => {\n    Promise.all([fetchRoomData(), fetchSubcategoriesAndProducts()]);\n  }, []);\n\n  const handleSearch = (event) => {\n    setSearchQuery(event.target.value.toLowerCase());\n  };\n\n  const handleSliderChange = (event, newValue) => {\n    setPriceRange(newValue);\n  };\n\n  const handleCategoryChange = (event) => {\n    setSelectedCategory(event.target.value);\n  };\n\n  const toggleFilters = () => {\n    setShowFilters(!showFilters);\n  };\n\n  const filteredProducts = useMemo(() => {\n    return productsData.filter((product) => {\n      const matchesSearch = product.title.toLowerCase().includes(searchQuery) ||\n                            product.details.toLowerCase().includes(searchQuery);\n      const matchesPrice = product.price >= priceRange[0] && product.price <= priceRange[1];\n      const matchesCategory = selectedCategory === '' || product.category === selectedCategory;\n      return matchesSearch && matchesPrice && matchesCategory;\n    });\n  }, [productsData, searchQuery, priceRange, selectedCategory]);\n\n  return (\n    <div className=\"App\">\n      <div className=\"header\">\n        <h1>Product Cards</h1>\n        <Button variant=\"contained\" color=\"primary\" onClick={toggleFilters}>\n          {showFilters ? 'Hide Filters' : 'Show Filters'}\n        </Button>\n      </div>\n\n      {showFilters && (\n        <div className=\"filters\">\n          <input\n            type=\"text\"\n            placeholder=\"Search...\"\n            value={searchQuery}\n            onChange={handleSearch}\n          />\n          <Slider\n            value={priceRange}\n            onChange={handleSliderChange}\n            valueLabelDisplay=\"auto\"\n            min={1000}\n            max={15000}\n          />\n          <Select value={selectedCategory} onChange={handleCategoryChange} displayEmpty>\n            <MenuItem value=\"\">\n              <em>All Categories</em>\n            </MenuItem>\n            {categories.map((category) => (\n              <MenuItem key={category} value={category}>\n                {category}\n              </MenuItem>\n            ))}\n          </Select>\n        </div>\n      )}\n\n      {loading ? (\n        <Skeleton variant=\"rectangular\" width={210} height={118} />\n      ) : (\n        <div className=\"product-cards\">\n          {subcategoriesData.map((subcategory) => (\n            <div key={subcategory.id}>\n              <h2>{subcategory.name}</h2>\n              {filteredProducts\n                .filter((product) => product.subcategory_id === subcategory.id)\n                .map((product) => (\n                  <Card\n                    key={product.id}\n                    title={product.title}\n                    price={product.price}\n                    image={product.image}\n                    details={product.details}\n                    addOns={product.addons}\n                    roomData={roomNumbers.length > 0 ? roomNumbers[0] : null}\n                  />\n                ))}\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACU;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACV;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACc;AACA;AACA;AACA;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}